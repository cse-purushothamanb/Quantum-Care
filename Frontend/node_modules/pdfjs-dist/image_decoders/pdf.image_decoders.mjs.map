{"version":3,"file":"pdf.image_decoders.mjs","mappings":";;;;;;;;;;;;;;;;;;;;;;SAAA;SACA;;;;;UCDA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;;;;;;;;;;;;;ACoBA,MAAMA,QAAQ,GAEZ,OAAOC,OAAO,KAAK,QAAQ,IAC3BA,OAAO,GAAG,EAAE,KAAK,kBAAkB,IACnC,CAACA,OAAO,CAACC,QAAQ,CAACC,EAAE,IACpB,EAAEF,OAAO,CAACC,QAAQ,CAACE,QAAQ,IAAIH,OAAO,CAACI,IAAI,IAAIJ,OAAO,CAACI,IAAI,KAAK,SAAS,CAAC;AAE5E,MAAMC,eAAe,GAAG,iDAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1C,MAAMC,oBAAoB,GAAG,iDAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAEvD,MAAMC,uBAAuB,GAAG,IAAI;AAIpC,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,mBAAmB,GAAG,IAAI;AAChC,MAAMC,eAAe,GAAGD,mBAAmB,GAAGD,WAAW;AAczD,MAAMG,mBAAmB,GAAG;EAC1BC,GAAG,EAAE,IAAI;EACTC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,iBAAiB,EAAE,IAAI;EACvBC,mBAAmB,EAAE,IAAI;EACzBC,mBAAmB,EAAE,IAAI;EACzBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CAAC;EACTC,YAAY,EAAE,CAAC;EACfC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,2BAAsB,GAAG,wBAAwB;AAEvD,MAAMC,oBAAoB,GAAG;EAC3BL,OAAO,EAAE,CAAC,CAAC;EACXM,IAAI,EAAE,CAAC;EACPC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC;EACZC,KAAK,EAAE,EAAE;EACTC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,0BAA0B,GAAG;EACjCC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,aAAa,EAAE,EAAE;EACjBC,cAAc,EAAE,EAAE;EAClBC,gBAAgB,EAAE,EAAE;EACpBC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAE,EAAE;EACnBC,uBAAuB,EAAE,EAAE;EAC3BC,mBAAmB,EAAE,EAAE;EACvBC,cAAc,EAAE,EAAE;EAClBC,kBAAkB,EAAE;AACtB,CAAC;AAGD,MAAMC,cAAc,GAAG;EACrBhC,KAAK,EAAE,IAAI;EACXiC,eAAe,EAAE,IAAI;EACrBC,IAAI,EAAE,IAAI;EACVC,kBAAkB,EAAE,IAAI;EACxBC,sBAAsB,EAAE,KAAK;EAC7BC,sBAAsB,EAAE,KAAK;EAC7BC,QAAQ,EAAE,KAAK;EACfC,kBAAkB,EAAE;AACtB,CAAC;AAED,MAAMC,iBAAiB,GAAG;EACxBC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE,CAAC;EACZC,gBAAgB,EAAE,CAAC;EACnBC,kBAAkB,EAAE,CAAC;EACrBC,uBAAuB,EAAE,CAAC;EAC1BC,WAAW,EAAE,CAAC;EACdC,gBAAgB,EAAE,CAAC;EACnBC,gBAAgB,EAAE;AACpB,CAAC;AAED,MAAMC,cAAS,GAAG;EAChBC,cAAc,EAAE,CAAC;EACjBC,SAAS,EAAE,CAAC;EACZC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACP3C,QAAQ,EAAE,CAAC;EACX4C,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE,CAAC;EACX/C,SAAS,EAAE,CAAC;EACZgD,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbjD,KAAK,EAAE,EAAE;EACTkD,KAAK,EAAE,EAAE;EACTjD,GAAG,EAAE,EAAE;EACPkD,KAAK,EAAE,EAAE;EACTC,cAAc,EAAE,EAAE;EAClBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,mBAAmB,GAAG;EAC1BC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBrC,SAAS,EAAE,IAAI;EACfsC,MAAM,EAAE,IAAI;EACZlF,KAAK,EAAE,IAAI;EACXmF,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,YAAY,EAAE,KAAK;EACnBC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,mBAAmB,GAAG;EAC1BJ,QAAQ,EAAE,SAAS;EACnBK,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE,SAAS;EACnBC,SAAS,EAAE,SAAS;EACpBC,QAAQ,EAAE,SAAS;EACnBC,aAAa,EAAE,SAAS;EACxBC,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,SAAS;EACrBC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,SAAS;EACrBC,WAAW,EAAE,SAAS;EACtBC,eAAe,EAAE,SAAS;EAC1BC,WAAW,EAAE,SAAS;EACtBC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,SAAS;EACnBC,cAAc,EAAE,SAAS;EACzBC,iBAAiB,EAAE;AACrB,CAAC;AAED,MAAMC,yBAAyB,GAAG;EAChCC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,KAAK,EAAE,CAAC;EACRlD,SAAS,EAAE;AACb,CAAC;AAED,MAAMmD,yBAAyB,GAAG;EAChCC,CAAC,EAAE,aAAa;EAChBC,CAAC,EAAE,YAAY;EACfC,CAAC,EAAE,YAAY;EACfC,CAAC,EAAE,UAAU;EACbC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,MAAM;EACVC,EAAE,EAAE,UAAU;EACdC,EAAE,EAAE,WAAW;EACfC,EAAE,EAAE,aAAa;EACjBC,EAAE,EAAE,eAAe;EACnBC,CAAC,EAAE,WAAW;EACdC,CAAC,EAAE,QAAQ;EACXC,CAAC,EAAE,UAAU;EACbC,CAAC,EAAE;AACL,CAAC;AAED,MAAMC,uBAAuB,GAAG;EAC9BC,EAAE,EAAE,WAAW;EACfC,EAAE,EAAE,UAAU;EACdC,EAAE,EAAE,SAAS;EACbC,EAAE,EAAE,WAAW;EACfC,EAAE,EAAE;AACN,CAAC;AAED,MAAMC,mBAAmB,GAAG;EAC1BC,CAAC,EAAE,UAAU;EACbR,CAAC,EAAE;AACL,CAAC;AAED,MAAMS,cAAc,GAAG;EACrBC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,CAAC;EACXC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,mBAAmB,GAAG;EAC1BhI,IAAI,EAAE,CAAC;EACPiI,MAAM,EAAE;AACV,CAAC;AAGD,MAAMC,GAAG,GAAG;EAKVC,UAAU,EAAE,CAAC;EACbC,YAAY,EAAE,CAAC;EACfC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE,CAAC;EAChBC,OAAO,EAAE,CAAC;EACVC,kBAAkB,EAAE,CAAC;EACrBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE,CAAC;EACZC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,YAAY,EAAE,EAAE;EAChBC,eAAe,EAAE,EAAE;EACnBC,iBAAiB,EAAE,EAAE;EACrBC,OAAO,EAAE,EAAE;EACXC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,EAAE;EACXC,cAAc,EAAE,EAAE;EAClBC,cAAc,EAAE,EAAE;EAClBC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,EAAE;EACXC,oBAAoB,EAAE,EAAE;EACxBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,EAAE;EACZC,kBAAkB,EAAE,EAAE;EACtBC,aAAa,EAAE,EAAE;EACjBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE,EAAE;EAClBC,gBAAgB,EAAE,EAAE;EACpBC,0BAA0B,EAAE,EAAE;EAC9BC,YAAY,EAAE,EAAE;EAChBC,qBAAqB,EAAE,EAAE;EACzBC,mBAAmB,EAAE,EAAE;EACvBC,iBAAiB,EAAE,EAAE;EACrBC,cAAc,EAAE,EAAE;EAClBC,eAAe,EAAE,EAAE;EACnBC,YAAY,EAAE,EAAE;EAChBC,aAAa,EAAE,EAAE;EACjBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,iBAAiB,EAAE,EAAE;EACrBC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAE,EAAE;EACtBC,gBAAgB,EAAE,EAAE;EACpBC,WAAW,EAAE,EAAE;EACfC,gBAAgB,EAAE,EAAE;EACpBC,cAAc,EAAE,EAAE;EAClBC,cAAc,EAAE,EAAE;EAClBC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE,EAAE;EACbC,cAAc,EAAE,EAAE;EAClBC,kBAAkB,EAAE,EAAE;EACtBC,uBAAuB,EAAE,EAAE;EAC3BC,gBAAgB,EAAE,EAAE;EACpBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,EAAE;EACbC,qBAAqB,EAAE,EAAE;EACzBC,mBAAmB,EAAE,EAAE;EACvBC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE,EAAE;EAGZC,eAAe,EAAE,EAAE;EACnBC,aAAa,EAAE,EAAE;EAEjBC,qBAAqB,EAAE,EAAE;EACzBC,0BAA0B,EAAE,EAAE;EAC9BC,iBAAiB,EAAE,EAAE;EACrBC,uBAAuB,EAAE,EAAE;EAC3BC,4BAA4B,EAAE,EAAE;EAChCC,uBAAuB,EAAE,EAAE;EAC3BC,2BAA2B,EAAE,EAAE;EAC/BC,wBAAwB,EAAE,EAAE;EAC5BC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,iBAAiB,GAAG;EACxBC,aAAa,EAAE,CAAC;EAChBC,kBAAkB,EAAE;AACtB,CAAC;AAED,IAAIC,SAAS,GAAGlG,cAAc,CAACE,QAAQ;AAEvC,SAASiG,iBAAiBA,CAACC,KAAK,EAAE;EAChC,IAAIC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE;IAC3BF,SAAS,GAAGE,KAAK;EACnB;AACF;AAEA,SAASG,iBAAiBA,CAAA,EAAG;EAC3B,OAAOL,SAAS;AAClB;AAKA,SAASM,IAAIA,CAACC,GAAG,EAAE;EACjB,IAAIP,SAAS,IAAIlG,cAAc,CAACG,KAAK,EAAE;IACrCuG,OAAO,CAACC,GAAG,CAAE,SAAQF,GAAI,EAAC,CAAC;EAC7B;AACF;AAGA,SAASG,SAAIA,CAACH,GAAG,EAAE;EACjB,IAAIP,SAAS,IAAIlG,cAAc,CAACE,QAAQ,EAAE;IACxCwG,OAAO,CAACC,GAAG,CAAE,YAAWF,GAAI,EAAC,CAAC;EAChC;AACF;AAEA,SAASI,gBAAWA,CAACJ,GAAG,EAAE;EACxB,MAAM,IAAIK,KAAK,CAACL,GAAG,CAAC;AACtB;AAEA,SAASM,WAAMA,CAACC,IAAI,EAAEP,GAAG,EAAE;EACzB,IAAI,CAACO,IAAI,EAAE;IACTH,gBAAW,CAACJ,GAAG,CAAC;EAClB;AACF;AAGA,SAASQ,gBAAgBA,CAACC,GAAG,EAAE;EAC7B,QAAQA,GAAG,EAAEC,QAAQ;IACnB,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,MAAM;IACX,KAAK,SAAS;IACd,KAAK,MAAM;MACT,OAAO,IAAI;IACb;MACE,OAAO,KAAK;EAChB;AACF;AAUA,SAASC,sBAAsBA,CAACF,GAAG,EAAEG,OAAO,GAAG,IAAI,EAAEC,OAAO,GAAG,IAAI,EAAE;EACnE,IAAI,CAACJ,GAAG,EAAE;IACR,OAAO,IAAI;EACb;EACA,IAAI;IACF,IAAII,OAAO,IAAI,OAAOJ,GAAG,KAAK,QAAQ,EAAE;MAEtC,IAAII,OAAO,CAACC,kBAAkB,IAAIL,GAAG,CAACM,UAAU,CAAC,MAAM,CAAC,EAAE;QACxD,MAAMC,IAAI,GAAGP,GAAG,CAACQ,KAAK,CAAC,KAAK,CAAC;QAG7B,IAAID,IAAI,EAAEE,MAAM,IAAI,CAAC,EAAE;UACrBT,GAAG,GAAI,UAASA,GAAI,EAAC;QACvB;MACF;MAIA,IAAII,OAAO,CAACM,kBAAkB,EAAE;QAC9B,IAAI;UACFV,GAAG,GAAGW,kBAAkB,CAACX,GAAG,CAAC;QAC/B,CAAC,CAAC,MAAM,CAAC;MACX;IACF;IAEA,MAAMY,WAAW,GAAGT,OAAO,GAAG,IAAIU,GAAG,CAACb,GAAG,EAAEG,OAAO,CAAC,GAAG,IAAIU,GAAG,CAACb,GAAG,CAAC;IAClE,IAAID,gBAAgB,CAACa,WAAW,CAAC,EAAE;MACjC,OAAOA,WAAW;IACpB;EACF,CAAC,CAAC,MAAM,CAER;EACA,OAAO,IAAI;AACb;AAEA,SAASE,WAAMA,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,eAAe,GAAG,KAAK,EAAE;EAOzDC,MAAM,CAACC,cAAc,CAACL,GAAG,EAAEC,IAAI,EAAE;IAC/BC,KAAK;IACLI,UAAU,EAAE,CAACH,eAAe;IAC5BI,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,OAAON,KAAK;AACd;AAKA,MAAMO,aAAa,GAAI,SAASC,oBAAoBA,CAAA,EAAG;EAErD,SAASD,aAAaA,CAACE,OAAO,EAAEC,IAAI,EAAE;IACpC,IAAI,IAAI,CAACC,WAAW,KAAKJ,aAAa,EAAE;MACtC7B,gBAAW,CAAC,kCAAkC,CAAC;IACjD;IACA,IAAI,CAAC+B,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EACAH,aAAa,CAACK,SAAS,GAAG,IAAIjC,KAAK,CAAC,CAAC;EACrC4B,aAAa,CAACI,WAAW,GAAGJ,aAAa;EAEzC,OAAOA,aAAa;AACtB,CAAC,CAAE,CAAC;AAEJ,MAAMM,iBAAiB,SAASN,aAAa,CAAC;EAC5CI,WAAWA,CAACrC,GAAG,EAAEwC,IAAI,EAAE;IACrB,KAAK,CAACxC,GAAG,EAAE,mBAAmB,CAAC;IAC/B,IAAI,CAACwC,IAAI,GAAGA,IAAI;EAClB;AACF;AAEA,MAAMC,qBAAqB,SAASR,aAAa,CAAC;EAChDI,WAAWA,CAACrC,GAAG,EAAE0C,OAAO,EAAE;IACxB,KAAK,CAAC1C,GAAG,EAAE,uBAAuB,CAAC;IACnC,IAAI,CAAC0C,OAAO,GAAGA,OAAO;EACxB;AACF;AAEA,MAAMC,mBAAmB,SAASV,aAAa,CAAC;EAC9CI,WAAWA,CAACrC,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,EAAE,qBAAqB,CAAC;EACnC;AACF;AAEA,MAAM4C,mBAAmB,SAASX,aAAa,CAAC;EAC9CI,WAAWA,CAACrC,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,EAAE,qBAAqB,CAAC;EACnC;AACF;AAEA,MAAM6C,2BAA2B,SAASZ,aAAa,CAAC;EACtDI,WAAWA,CAACrC,GAAG,EAAE8C,MAAM,EAAE;IACvB,KAAK,CAAC9C,GAAG,EAAE,6BAA6B,CAAC;IACzC,IAAI,CAAC8C,MAAM,GAAGA,MAAM;EACtB;AACF;AAKA,MAAMC,WAAW,SAASd,aAAa,CAAC;EACtCI,WAAWA,CAACrC,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,EAAE,aAAa,CAAC;EAC3B;AACF;AAKA,MAAMgD,cAAc,SAASf,aAAa,CAAC;EACzCI,WAAWA,CAACrC,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,EAAE,gBAAgB,CAAC;EAC9B;AACF;AAEA,SAASiD,kBAAaA,CAACC,KAAK,EAAE;EAC5B,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,EAAEhC,MAAM,KAAKiC,SAAS,EAAE;IAC5D/C,gBAAW,CAAC,oCAAoC,CAAC;EACnD;EACA,MAAMc,MAAM,GAAGgC,KAAK,CAAChC,MAAM;EAC3B,MAAMkC,kBAAkB,GAAG,IAAI;EAC/B,IAAIlC,MAAM,GAAGkC,kBAAkB,EAAE;IAC/B,OAAOC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEL,KAAK,CAAC;EAC/C;EACA,MAAMM,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvC,MAAM,EAAEuC,CAAC,IAAIL,kBAAkB,EAAE;IACnD,MAAMM,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,CAAC,GAAGL,kBAAkB,EAAElC,MAAM,CAAC;IACzD,MAAM2C,KAAK,GAAGX,KAAK,CAACY,QAAQ,CAACL,CAAC,EAAEC,QAAQ,CAAC;IACzCF,MAAM,CAACO,IAAI,CAACV,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEM,KAAK,CAAC,CAAC;EACrD;EACA,OAAOL,MAAM,CAACQ,IAAI,CAAC,EAAE,CAAC;AACxB;AAEA,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B9D,gBAAW,CAAC,oCAAoC,CAAC;EACnD;EACA,MAAMc,MAAM,GAAGgD,GAAG,CAAChD,MAAM;EACzB,MAAMgC,KAAK,GAAG,IAAIiB,UAAU,CAACjD,MAAM,CAAC;EACpC,KAAK,IAAIuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvC,MAAM,EAAE,EAAEuC,CAAC,EAAE;IAC/BP,KAAK,CAACO,CAAC,CAAC,GAAGS,GAAG,CAACE,UAAU,CAACX,CAAC,CAAC,GAAG,IAAI;EACrC;EACA,OAAOP,KAAK;AACd;AAEA,SAASmB,QAAQA,CAAC3C,KAAK,EAAE;EAOvB,OAAO2B,MAAM,CAACC,YAAY,CACvB5B,KAAK,IAAI,EAAE,GAAI,IAAI,EACnBA,KAAK,IAAI,EAAE,GAAI,IAAI,EACnBA,KAAK,IAAI,CAAC,GAAI,IAAI,EACnBA,KAAK,GAAG,IACV,CAAC;AACH;AAEA,SAAS4C,eAAUA,CAAC9C,GAAG,EAAE;EACvB,OAAOI,MAAM,CAAC2C,IAAI,CAAC/C,GAAG,CAAC,CAACN,MAAM;AAChC;AAIA,SAASsD,aAAaA,CAACC,GAAG,EAAE;EAC1B,MAAMjD,GAAG,GAAGI,MAAM,CAAC8C,MAAM,CAAC,IAAI,CAAC;EAC/B,KAAK,MAAM,CAACC,GAAG,EAAEjD,KAAK,CAAC,IAAI+C,GAAG,EAAE;IAC9BjD,GAAG,CAACmD,GAAG,CAAC,GAAGjD,KAAK;EAClB;EACA,OAAOF,GAAG;AACZ;AAGA,SAASoD,cAAcA,CAAA,EAAG;EACxB,MAAMC,OAAO,GAAG,IAAIV,UAAU,CAAC,CAAC,CAAC;EACjCU,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;EACd,MAAMC,MAAM,GAAG,IAAIC,WAAW,CAACF,OAAO,CAACG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EACpD,OAAOF,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;AACxB;AAGA,SAASG,eAAeA,CAAA,EAAG;EACzB,IAAI;IACF,IAAIC,QAAQ,CAAC,EAAE,CAAC;IAChB,OAAO,IAAI;EACb,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF;AAEA,MAAMC,gBAAW,CAAC;EAChB,WAAWP,cAAcA,CAAA,EAAG;IAC1B,OAAOrD,WAAM,CAAC,IAAI,EAAE,gBAAgB,EAAEqD,cAAc,CAAC,CAAC,CAAC;EACzD;EAEA,WAAWK,eAAeA,CAAA,EAAG;IAC3B,OAAO1D,WAAM,CAAC,IAAI,EAAE,iBAAiB,EAAE0D,eAAe,CAAC,CAAC,CAAC;EAC3D;EAEA,WAAWG,0BAA0BA,CAAA,EAAG;IACtC,OAAO7D,WAAM,CACX,IAAI,EACJ,4BAA4B,EAC5B,OAAO8D,eAAe,KAAK,WAC7B,CAAC;EACH;EAEA,WAAWC,QAAQA,CAAA,EAAG;IACpB,IAEG,OAAOC,SAAS,KAAK,WAAW,IAC/B,OAAOA,SAAS,EAAED,QAAQ,KAAK,QAAQ,EACzC;MACA,OAAO/D,WAAM,CAAC,IAAI,EAAE,UAAU,EAAE;QAC9BiE,KAAK,EAAED,SAAS,CAACD,QAAQ,CAACG,QAAQ,CAAC,KAAK;MAC1C,CAAC,CAAC;IACJ;IACA,OAAOlE,WAAM,CAAC,IAAI,EAAE,UAAU,EAAE;MAAEiE,KAAK,EAAE;IAAM,CAAC,CAAC;EACnD;EAEA,WAAWE,mBAAmBA,CAAA,EAAG;IAC/B,OAAOnE,WAAM,CACX,IAAI,EACJ,qBAAqB,EACrBoE,UAAU,CAACC,GAAG,EAAEC,QAAQ,GAAG,0BAA0B,CACvD,CAAC;EACH;AACF;AAEA,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAACxB,IAAI,CAAC,CAAC,EAAE0B,CAAC,IAChDA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAChC,CAAC;AAED,MAAMC,IAAI,CAAC;EACT,OAAOC,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC3B,OAAQ,IAAGV,UAAU,CAACQ,CAAC,CAAE,GAAER,UAAU,CAACS,CAAC,CAAE,GAAET,UAAU,CAACU,CAAC,CAAE,EAAC;EAC5D;EAKA,OAAOC,WAAWA,CAAChM,SAAS,EAAEiM,MAAM,EAAE;IACpC,IAAIC,IAAI;IACR,IAAIlM,SAAS,CAAC,CAAC,CAAC,EAAE;MAChB,IAAIA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACpBkM,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;QAChBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;QACrBA,MAAM,CAAC,CAAC,CAAC,GAAGC,IAAI;MAClB;MACAD,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;MACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;MAEzB,IAAIA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACpBkM,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;QAChBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;QACrBA,MAAM,CAAC,CAAC,CAAC,GAAGC,IAAI;MAClB;MACAD,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;MACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACLkM,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;MAChBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;MACrBA,MAAM,CAAC,CAAC,CAAC,GAAGC,IAAI;MAChBA,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;MAChBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;MACrBA,MAAM,CAAC,CAAC,CAAC,GAAGC,IAAI;MAEhB,IAAIlM,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACpBkM,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;QAChBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;QACrBA,MAAM,CAAC,CAAC,CAAC,GAAGC,IAAI;MAClB;MACAD,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;MACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;MAEzB,IAAIA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACpBkM,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;QAChBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;QACrBA,MAAM,CAAC,CAAC,CAAC,GAAGC,IAAI;MAClB;MACAD,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;MACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;IAC3B;IACAiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;IACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;IACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;IACzBiM,MAAM,CAAC,CAAC,CAAC,IAAIjM,SAAS,CAAC,CAAC,CAAC;EAC3B;EAGA,OAAOA,SAASA,CAACmM,EAAE,EAAEC,EAAE,EAAE;IACvB,OAAO,CACLD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAC7BD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAC7BD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAC7BD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAC7BD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,EACrCA,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,CACtC;EACH;EAGA,OAAOE,cAAcA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC1B,MAAMC,EAAE,GAAGF,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAME,EAAE,GAAGH,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IAC3C,OAAO,CAACC,EAAE,EAAEC,EAAE,CAAC;EACjB;EAEA,OAAOC,qBAAqBA,CAACJ,CAAC,EAAEC,CAAC,EAAE;IACjC,MAAMI,CAAC,GAAGJ,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IACnC,MAAMC,EAAE,GAAG,CAACF,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAII,CAAC;IACtE,MAAMF,EAAE,GAAG,CAAC,CAACH,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAII,CAAC;IACvE,OAAO,CAACH,EAAE,EAAEC,EAAE,CAAC;EACjB;EAIA,OAAOG,0BAA0BA,CAACf,CAAC,EAAEU,CAAC,EAAE;IACtC,MAAMM,EAAE,GAAG,IAAI,CAACR,cAAc,CAACR,CAAC,EAAEU,CAAC,CAAC;IACpC,MAAMO,EAAE,GAAG,IAAI,CAACT,cAAc,CAACR,CAAC,CAACkB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAER,CAAC,CAAC;IAChD,MAAMS,EAAE,GAAG,IAAI,CAACX,cAAc,CAAC,CAACR,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEU,CAAC,CAAC;IAC/C,MAAMU,EAAE,GAAG,IAAI,CAACZ,cAAc,CAAC,CAACR,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEU,CAAC,CAAC;IAC/C,OAAO,CACLrD,IAAI,CAACC,GAAG,CAAC0D,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EACpC/D,IAAI,CAACC,GAAG,CAAC0D,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EACpC/D,IAAI,CAACgE,GAAG,CAACL,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EACpC/D,IAAI,CAACgE,GAAG,CAACL,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEE,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,CACrC;EACH;EAEA,OAAOE,gBAAgBA,CAACZ,CAAC,EAAE;IACzB,MAAMI,CAAC,GAAGJ,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IACnC,OAAO,CACLA,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,EACR,CAACJ,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,EACT,CAACJ,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,EACTJ,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,EACR,CAACJ,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAII,CAAC,EAC/B,CAACJ,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAII,CAAC,CAChC;EACH;EAKA,OAAOS,6BAA6BA,CAACb,CAAC,EAAE;IACtC,MAAMc,SAAS,GAAG,CAACd,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IAG1C,MAAMe,CAAC,GAAGf,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC;IACnD,MAAMtB,CAAC,GAAGQ,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC;IACnD,MAAME,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC;IACnD,MAAMV,CAAC,GAAGJ,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC,GAAGd,CAAC,CAAC,CAAC,CAAC,GAAGc,SAAS,CAAC,CAAC,CAAC;IAGnD,MAAMG,KAAK,GAAG,CAACF,CAAC,GAAGX,CAAC,IAAI,CAAC;IACzB,MAAMc,MAAM,GAAGvE,IAAI,CAACwE,IAAI,CAAC,CAACJ,CAAC,GAAGX,CAAC,KAAK,CAAC,GAAG,CAAC,IAAIW,CAAC,GAAGX,CAAC,GAAGY,CAAC,GAAGxB,CAAC,CAAC,CAAC,GAAG,CAAC;IAChE,MAAM4B,EAAE,GAAGH,KAAK,GAAGC,MAAM,IAAI,CAAC;IAC9B,MAAMG,EAAE,GAAGJ,KAAK,GAAGC,MAAM,IAAI,CAAC;IAG9B,OAAO,CAACvE,IAAI,CAACwE,IAAI,CAACC,EAAE,CAAC,EAAEzE,IAAI,CAACwE,IAAI,CAACE,EAAE,CAAC,CAAC;EACvC;EAMA,OAAOC,aAAaA,CAACC,IAAI,EAAE;IACzB,MAAMjC,CAAC,GAAGiC,IAAI,CAACf,KAAK,CAAC,CAAC,CAAC;IACvB,IAAIe,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE;MACrBjC,CAAC,CAAC,CAAC,CAAC,GAAGiC,IAAI,CAAC,CAAC,CAAC;MACdjC,CAAC,CAAC,CAAC,CAAC,GAAGiC,IAAI,CAAC,CAAC,CAAC;IAChB;IACA,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EAAE;MACrBjC,CAAC,CAAC,CAAC,CAAC,GAAGiC,IAAI,CAAC,CAAC,CAAC;MACdjC,CAAC,CAAC,CAAC,CAAC,GAAGiC,IAAI,CAAC,CAAC,CAAC;IAChB;IACA,OAAOjC,CAAC;EACV;EAKA,OAAOkC,SAASA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAC7B,MAAMC,IAAI,GAAGhF,IAAI,CAACgE,GAAG,CACnBhE,IAAI,CAACC,GAAG,CAAC6E,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5B9E,IAAI,CAACC,GAAG,CAAC8E,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAC7B,CAAC;IACD,MAAME,KAAK,GAAGjF,IAAI,CAACC,GAAG,CACpBD,IAAI,CAACgE,GAAG,CAACc,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5B9E,IAAI,CAACgE,GAAG,CAACe,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAC7B,CAAC;IACD,IAAIC,IAAI,GAAGC,KAAK,EAAE;MAChB,OAAO,IAAI;IACb;IACA,MAAMC,IAAI,GAAGlF,IAAI,CAACgE,GAAG,CACnBhE,IAAI,CAACC,GAAG,CAAC6E,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5B9E,IAAI,CAACC,GAAG,CAAC8E,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAC7B,CAAC;IACD,MAAMI,KAAK,GAAGnF,IAAI,CAACC,GAAG,CACpBD,IAAI,CAACgE,GAAG,CAACc,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5B9E,IAAI,CAACgE,GAAG,CAACe,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAC7B,CAAC;IACD,IAAIG,IAAI,GAAGC,KAAK,EAAE;MAChB,OAAO,IAAI;IACb;IAEA,OAAO,CAACH,IAAI,EAAEE,IAAI,EAAED,KAAK,EAAEE,KAAK,CAAC;EACnC;EAEA,OAAO,CAACC,kBAAkBC,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,CAAC,EAAE/C,MAAM,EAAE;IACpE,IAAI+C,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,EAAE;MACpB;IACF;IACA,MAAMC,EAAE,GAAG,CAAC,GAAGD,CAAC;IAChB,MAAME,EAAE,GAAGF,CAAC,GAAGA,CAAC;IAChB,MAAMG,GAAG,GAAGD,EAAE,GAAGF,CAAC;IAClB,MAAMI,CAAC,GAAGH,EAAE,IAAIA,EAAE,IAAIA,EAAE,GAAGT,EAAE,GAAG,CAAC,GAAGQ,CAAC,GAAGP,EAAE,CAAC,GAAG,CAAC,GAAGS,EAAE,GAAGR,EAAE,CAAC,GAAGS,GAAG,GAAGR,EAAE;IACrE,MAAMU,CAAC,GAAGJ,EAAE,IAAIA,EAAE,IAAIA,EAAE,GAAGL,EAAE,GAAG,CAAC,GAAGI,CAAC,GAAGH,EAAE,CAAC,GAAG,CAAC,GAAGK,EAAE,GAAGJ,EAAE,CAAC,GAAGK,GAAG,GAAGJ,EAAE;IACrE9C,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACC,GAAG,CAAC8C,MAAM,CAAC,CAAC,CAAC,EAAEmD,CAAC,CAAC;IAClCnD,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACC,GAAG,CAAC8C,MAAM,CAAC,CAAC,CAAC,EAAEoD,CAAC,CAAC;IAClCpD,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACgE,GAAG,CAACjB,MAAM,CAAC,CAAC,CAAC,EAAEmD,CAAC,CAAC;IAClCnD,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACgE,GAAG,CAACjB,MAAM,CAAC,CAAC,CAAC,EAAEoD,CAAC,CAAC;EACpC;EAEA,OAAO,CAACC,WAAWC,CAACf,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEzB,CAAC,EAAEvB,CAAC,EAAEwB,CAAC,EAAEtB,MAAM,EAAE;IACnE,IAAI/C,IAAI,CAACsG,GAAG,CAAClC,CAAC,CAAC,GAAG,KAAK,EAAE;MACvB,IAAIpE,IAAI,CAACsG,GAAG,CAACzD,CAAC,CAAC,IAAI,KAAK,EAAE;QACxB,IAAI,CAAC,CAACuC,kBAAkB,CACtBE,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACF,CAACxB,CAAC,GAAGxB,CAAC,EACNE,MACF,CAAC;MACH;MACA;IACF;IAEA,MAAMwD,KAAK,GAAG1D,CAAC,IAAI,CAAC,GAAG,CAAC,GAAGwB,CAAC,GAAGD,CAAC;IAChC,IAAImC,KAAK,GAAG,CAAC,EAAE;MACb;IACF;IACA,MAAMC,SAAS,GAAGxG,IAAI,CAACwE,IAAI,CAAC+B,KAAK,CAAC;IAClC,MAAME,EAAE,GAAG,CAAC,GAAGrC,CAAC;IAChB,IAAI,CAAC,CAACgB,kBAAkB,CACtBE,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACF,CAAC,CAAChD,CAAC,GAAG2D,SAAS,IAAIC,EAAE,EACrB1D,MACF,CAAC;IACD,IAAI,CAAC,CAACqC,kBAAkB,CACtBE,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACF,CAAC,CAAChD,CAAC,GAAG2D,SAAS,IAAIC,EAAE,EACrB1D,MACF,CAAC;EACH;EAGA,OAAO2D,iBAAiBA,CAACpB,EAAE,EAAEI,EAAE,EAAEH,EAAE,EAAEI,EAAE,EAAEH,EAAE,EAAEI,EAAE,EAAEH,EAAE,EAAEI,EAAE,EAAE9C,MAAM,EAAE;IAC/D,IAAIA,MAAM,EAAE;MACVA,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACC,GAAG,CAAC8C,MAAM,CAAC,CAAC,CAAC,EAAEuC,EAAE,EAAEG,EAAE,CAAC;MACvC1C,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACC,GAAG,CAAC8C,MAAM,CAAC,CAAC,CAAC,EAAE2C,EAAE,EAAEG,EAAE,CAAC;MACvC9C,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACgE,GAAG,CAACjB,MAAM,CAAC,CAAC,CAAC,EAAEuC,EAAE,EAAEG,EAAE,CAAC;MACvC1C,MAAM,CAAC,CAAC,CAAC,GAAG/C,IAAI,CAACgE,GAAG,CAACjB,MAAM,CAAC,CAAC,CAAC,EAAE2C,EAAE,EAAEG,EAAE,CAAC;IACzC,CAAC,MAAM;MACL9C,MAAM,GAAG,CACP/C,IAAI,CAACC,GAAG,CAACqF,EAAE,EAAEG,EAAE,CAAC,EAChBzF,IAAI,CAACC,GAAG,CAACyF,EAAE,EAAEG,EAAE,CAAC,EAChB7F,IAAI,CAACgE,GAAG,CAACsB,EAAE,EAAEG,EAAE,CAAC,EAChBzF,IAAI,CAACgE,GAAG,CAAC0B,EAAE,EAAEG,EAAE,CAAC,CACjB;IACH;IACA,IAAI,CAAC,CAACO,WAAW,CACfd,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACF,CAAC,IAAI,CAACP,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAGC,EAAE,CAAC,GAAGC,EAAE,CAAC,EAC9B,CAAC,IAAIH,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGC,EAAE,CAAC,EACtB,CAAC,IAAID,EAAE,GAAGD,EAAE,CAAC,EACbvC,MACF,CAAC;IACD,IAAI,CAAC,CAACqD,WAAW,CACfd,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACF,CAAC,IAAI,CAACH,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAGC,EAAE,CAAC,GAAGC,EAAE,CAAC,EAC9B,CAAC,IAAIH,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGC,EAAE,CAAC,EACtB,CAAC,IAAID,EAAE,GAAGD,EAAE,CAAC,EACb3C,MACF,CAAC;IACD,OAAOA,MAAM;EACf;AACF;AAEA,MAAM4D,uBAAuB,GAAG,iDAC9B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAC7E,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC7E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAC7E,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM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EC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,U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CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEG,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAED,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAED,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,E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EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACd,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAA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AAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAC9C,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAC9C,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAC9C,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CACvC;AAGD,MAAMe,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CACnC;AA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","sources":["webpack://pdf.js/webpack/bootstrap","webpack://pdf.js/webpack/runtime/define property getters","webpack://pdf.js/webpack/runtime/hasOwnProperty shorthand","webpack://pdf.js/./src/shared/util.js","webpack://pdf.js/./src/core/primitives.js","webpack://pdf.js/./src/core/base_stream.js","webpack://pdf.js/./src/core/core_utils.js","webpack://pdf.js/./src/core/arithmetic_decoder.js","webpack://pdf.js/./src/core/ccitt.js","webpack://pdf.js/./src/core/jbig2.js","webpack://pdf.js/./src/shared/image_utils.js","webpack://pdf.js/./src/core/jpg.js","webpack://pdf.js/./src/core/jpx.js","webpack://pdf.js/./src/pdf.image_decoders.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  HIGHLIGHT: 9,\n  STAMP: 13,\n  INK: 15,\n};\n\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n  HIGHLIGHT_COLOR: 31,\n  HIGHLIGHT_DEFAULT_COLOR: 32,\n  HIGHLIGHT_THICKNESS: 33,\n  HIGHLIGHT_FREE: 34,\n  HIGHLIGHT_SHOW_ALL: 35,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n\n  static get platform() {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (typeof navigator !== \"undefined\" &&\n        typeof navigator?.platform === \"string\")\n    ) {\n      return shadow(this, \"platform\", {\n        isMac: navigator.platform.includes(\"Mac\"),\n      });\n    }\n    return shadow(this, \"platform\", { isMac: false });\n  }\n\n  static get isCSSRoundSupported() {\n    return shadow(\n      this,\n      \"isCSSRoundSupported\",\n      globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\")\n    );\n  }\n}\n\nconst hexNumbers = Array.from(Array(256).keys(), n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swapped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[2];\n        minMax[2] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[2] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[1];\n        minMax[1] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[1] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[1];\n      minMax[1] = temp;\n      temp = minMax[2];\n      minMax[2] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[1];\n        minMax[1] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[1] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[2];\n        minMax[2] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[2] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[5];\n    minMax[2] += transform[4];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  static #getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, t, minMax) {\n    if (t <= 0 || t >= 1) {\n      return;\n    }\n    const mt = 1 - t;\n    const tt = t * t;\n    const ttt = tt * t;\n    const x = mt * (mt * (mt * x0 + 3 * t * x1) + 3 * tt * x2) + ttt * x3;\n    const y = mt * (mt * (mt * y0 + 3 * t * y1) + 3 * tt * y2) + ttt * y3;\n    minMax[0] = Math.min(minMax[0], x);\n    minMax[1] = Math.min(minMax[1], y);\n    minMax[2] = Math.max(minMax[2], x);\n    minMax[3] = Math.max(minMax[3], y);\n  }\n\n  static #getExtremum(x0, x1, x2, x3, y0, y1, y2, y3, a, b, c, minMax) {\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) >= 1e-12) {\n        this.#getExtremumOnCurve(\n          x0,\n          x1,\n          x2,\n          x3,\n          y0,\n          y1,\n          y2,\n          y3,\n          -c / b,\n          minMax\n        );\n      }\n      return;\n    }\n\n    const delta = b ** 2 - 4 * c * a;\n    if (delta < 0) {\n      return;\n    }\n    const sqrtDelta = Math.sqrt(delta);\n    const a2 = 2 * a;\n    this.#getExtremumOnCurve(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      (-b + sqrtDelta) / a2,\n      minMax\n    );\n    this.#getExtremumOnCurve(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      (-b - sqrtDelta) / a2,\n      minMax\n    );\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], x0, x3);\n      minMax[1] = Math.min(minMax[1], y0, y3);\n      minMax[2] = Math.max(minMax[2], x0, x3);\n      minMax[3] = Math.max(minMax[3], y0, y3);\n    } else {\n      minMax = [\n        Math.min(x0, x3),\n        Math.min(y0, y3),\n        Math.max(x0, x3),\n        Math.max(y0, y3),\n      ];\n    }\n    this.#getExtremum(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      3 * (-x0 + 3 * (x1 - x2) + x3),\n      6 * (x0 - 2 * x1 + x2),\n      3 * (x1 - x0),\n      minMax\n    );\n    this.#getExtremum(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      3 * (-y0 + 3 * (y1 - y2) + y3),\n      6 * (y0 - 2 * y1 + y2),\n      3 * (y1 - y0),\n      minMax\n    );\n    return minMax;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  // See section 7.9.2.2 Text String Type.\n  // The string can contain some language codes bracketed with 0x0b,\n  // so we must remove them.\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n      if (str.length % 2 === 1) {\n        str = str.slice(0, -1);\n      }\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n      if (str.length % 2 === 1) {\n        str = str.slice(0, -1);\n      }\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        const decoded = decoder.decode(buffer);\n        if (!decoded.includes(\"\\x1b\")) {\n          return decoded;\n        }\n        return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g, \"\");\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const charCode = str.charCodeAt(i);\n    if (charCode === 0x1b) {\n      // eslint-disable-next-line no-empty\n      while (++i < ii && str.charCodeAt(i) !== 0x1b) {}\n      continue;\n    }\n    const code = PDFStringTranslateTable[charCode];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    // In order to generate the following regex:\n    //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //    a NFKC which is different of the char.\n    //  - copy and paste all those chars and get the ones where NFKC is\n    //    required.\n    // It appears that most the chars here contain some ligatures.\n    NormalizeRegex =\n      /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) =>\n    p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2)\n  );\n}\n\nfunction getUuid() {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\")\n  ) {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (\n    typeof crypto !== \"undefined\" &&\n    typeof crypto?.getRandomValues === \"function\"\n  ) {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\n\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMode,\n  AnnotationPrefix,\n  AnnotationReplyType,\n  AnnotationType,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FormatError,\n  getModificationDate,\n  getUuid,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayEqual,\n  isNodeJS,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  normalizeUnicode,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, shadow, unreachable } from \"../shared/util.js\";\n\nconst CIRCULAR_REF = Symbol(\"CIRCULAR_REF\");\nconst EOF = Symbol(\"EOF\");\n\nlet CmdCache = Object.create(null);\nlet NameCache = Object.create(null);\nlet RefCache = Object.create(null);\n\nfunction clearPrimitiveCaches() {\n  CmdCache = Object.create(null);\n  NameCache = Object.create(null);\n  RefCache = Object.create(null);\n}\n\nclass Name {\n  constructor(name) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      typeof name !== \"string\"\n    ) {\n      unreachable('Name: The \"name\" must be a string.');\n    }\n    this.name = name;\n  }\n\n  static get(name) {\n    // eslint-disable-next-line no-restricted-syntax\n    return (NameCache[name] ||= new Name(name));\n  }\n}\n\nclass Cmd {\n  constructor(cmd) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      typeof cmd !== \"string\"\n    ) {\n      unreachable('Cmd: The \"cmd\" must be a string.');\n    }\n    this.cmd = cmd;\n  }\n\n  static get(cmd) {\n    // eslint-disable-next-line no-restricted-syntax\n    return (CmdCache[cmd] ||= new Cmd(cmd));\n  }\n}\n\nconst nonSerializable = function nonSerializableClosure() {\n  return nonSerializable; // Creating closure on some variable.\n};\n\nclass Dict {\n  constructor(xref = null) {\n    // Map should only be used internally, use functions below to access.\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable; // Disable cloning of the Dict.\n  }\n\n  assignXref(newXref) {\n    this.xref = newXref;\n  }\n\n  get size() {\n    return Object.keys(this._map).length;\n  }\n\n  // Automatically dereferences Ref objects.\n  get(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetch(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but returns a promise and uses fetchIfRefAsync().\n  async getAsync(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetchAsync(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but dereferences all elements if the result is an Array.\n  getArray(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      value = this.xref.fetch(value, this.suppressEncryption);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.slice(); // Ensure that we don't modify the Dict data.\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        if (value[i] instanceof Ref && this.xref) {\n          value[i] = this.xref.fetch(value[i], this.suppressEncryption);\n        }\n      }\n    }\n    return value;\n  }\n\n  // No dereferencing.\n  getRaw(key) {\n    return this._map[key];\n  }\n\n  getKeys() {\n    return Object.keys(this._map);\n  }\n\n  // No dereferencing.\n  getRawValues() {\n    return Object.values(this._map);\n  }\n\n  set(key, value) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      if (typeof key !== \"string\") {\n        unreachable('Dict.set: The \"key\" must be a string.');\n      } else if (value === undefined) {\n        unreachable('Dict.set: The \"value\" cannot be undefined.');\n      }\n    }\n    this._map[key] = value;\n  }\n\n  has(key) {\n    return this._map[key] !== undefined;\n  }\n\n  forEach(callback) {\n    for (const key in this._map) {\n      callback(key, this.get(key));\n    }\n  }\n\n  static get empty() {\n    const emptyDict = new Dict(null);\n\n    emptyDict.set = (key, value) => {\n      unreachable(\"Should not call `set` on the empty dictionary.\");\n    };\n    return shadow(this, \"empty\", emptyDict);\n  }\n\n  static merge({ xref, dictArray, mergeSubDicts = false }) {\n    const mergedDict = new Dict(xref),\n      properties = new Map();\n\n    for (const dict of dictArray) {\n      if (!(dict instanceof Dict)) {\n        continue;\n      }\n      for (const [key, value] of Object.entries(dict._map)) {\n        let property = properties.get(key);\n        if (property === undefined) {\n          property = [];\n          properties.set(key, property);\n        } else if (!mergeSubDicts || !(value instanceof Dict)) {\n          // Ignore additional entries, if either:\n          //  - This is a \"shallow\" merge, where only the first element matters.\n          //  - The value is *not* a `Dict`, since other types cannot be merged.\n          continue;\n        }\n        property.push(value);\n      }\n    }\n    for (const [name, values] of properties) {\n      if (values.length === 1 || !(values[0] instanceof Dict)) {\n        mergedDict._map[name] = values[0];\n        continue;\n      }\n      const subDict = new Dict(xref);\n\n      for (const dict of values) {\n        for (const [key, value] of Object.entries(dict._map)) {\n          if (subDict._map[key] === undefined) {\n            subDict._map[key] = value;\n          }\n        }\n      }\n      if (subDict.size > 0) {\n        mergedDict._map[name] = subDict;\n      }\n    }\n    properties.clear();\n\n    return mergedDict.size > 0 ? mergedDict : Dict.empty;\n  }\n\n  clone() {\n    const dict = new Dict(this.xref);\n    for (const key of this.getKeys()) {\n      dict.set(key, this.getRaw(key));\n    }\n    return dict;\n  }\n}\n\nclass Ref {\n  constructor(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n\n  toString() {\n    // This function is hot, so we make the string as compact as possible.\n    // |this.gen| is almost always zero, so we treat that case specially.\n    if (this.gen === 0) {\n      return `${this.num}R`;\n    }\n    return `${this.num}R${this.gen}`;\n  }\n\n  static fromString(str) {\n    const ref = RefCache[str];\n    if (ref) {\n      return ref;\n    }\n    const m = /^(\\d+)R(\\d*)$/.exec(str);\n    if (!m || m[1] === \"0\") {\n      return null;\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    return (RefCache[str] = new Ref(\n      parseInt(m[1]),\n      !m[2] ? 0 : parseInt(m[2])\n    ));\n  }\n\n  static get(num, gen) {\n    const key = gen === 0 ? `${num}R` : `${num}R${gen}`;\n    // eslint-disable-next-line no-restricted-syntax\n    return (RefCache[key] ||= new Ref(num, gen));\n  }\n}\n\n// The reference is identified by number and generation.\n// This structure stores only one instance of the reference.\nclass RefSet {\n  constructor(parent = null) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      parent &&\n      !(parent instanceof RefSet)\n    ) {\n      unreachable('RefSet: Invalid \"parent\" value.');\n    }\n    this._set = new Set(parent?._set);\n  }\n\n  has(ref) {\n    return this._set.has(ref.toString());\n  }\n\n  put(ref) {\n    this._set.add(ref.toString());\n  }\n\n  remove(ref) {\n    this._set.delete(ref.toString());\n  }\n\n  [Symbol.iterator]() {\n    return this._set.values();\n  }\n\n  clear() {\n    this._set.clear();\n  }\n}\n\nclass RefSetCache {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  get(ref) {\n    return this._map.get(ref.toString());\n  }\n\n  has(ref) {\n    return this._map.has(ref.toString());\n  }\n\n  put(ref, obj) {\n    this._map.set(ref.toString(), obj);\n  }\n\n  putAlias(ref, aliasRef) {\n    this._map.set(ref.toString(), this.get(aliasRef));\n  }\n\n  [Symbol.iterator]() {\n    return this._map.values();\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  return (\n    v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type))\n  );\n}\n\nfunction isRefsEqual(v1, v2) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      v1 instanceof Ref && v2 instanceof Ref,\n      \"isRefsEqual: Both parameters should be `Ref`s.\"\n    );\n  }\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\n\nexport {\n  CIRCULAR_REF,\n  clearPrimitiveCaches,\n  Cmd,\n  Dict,\n  EOF,\n  isCmd,\n  isDict,\n  isName,\n  isRefsEqual,\n  Name,\n  Ref,\n  RefSet,\n  RefSetCache,\n};\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bytesToString, shadow, unreachable } from \"../shared/util.js\";\n\nclass BaseStream {\n  constructor() {\n    if (this.constructor === BaseStream) {\n      unreachable(\"Cannot initialize BaseStream.\");\n    }\n  }\n\n  // eslint-disable-next-line getter-return\n  get length() {\n    unreachable(\"Abstract getter `length` accessed\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get isEmpty() {\n    unreachable(\"Abstract getter `isEmpty` accessed\");\n  }\n\n  get isDataLoaded() {\n    return shadow(this, \"isDataLoaded\", true);\n  }\n\n  getByte() {\n    unreachable(\"Abstract method `getByte` called\");\n  }\n\n  getBytes(length) {\n    unreachable(\"Abstract method `getBytes` called\");\n  }\n\n  peekByte() {\n    const peekedByte = this.getByte();\n    if (peekedByte !== -1) {\n      this.pos--;\n    }\n    return peekedByte;\n  }\n\n  peekBytes(length) {\n    const bytes = this.getBytes(length);\n    this.pos -= bytes.length;\n    return bytes;\n  }\n\n  getUint16() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    if (b0 === -1 || b1 === -1) {\n      return -1;\n    }\n    return (b0 << 8) + b1;\n  }\n\n  getInt32() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    const b2 = this.getByte();\n    const b3 = this.getByte();\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n\n  getByteRange(begin, end) {\n    unreachable(\"Abstract method `getByteRange` called\");\n  }\n\n  getString(length) {\n    return bytesToString(this.getBytes(length));\n  }\n\n  skip(n) {\n    this.pos += n || 1;\n  }\n\n  reset() {\n    unreachable(\"Abstract method `reset` called\");\n  }\n\n  moveStart() {\n    unreachable(\"Abstract method `moveStart` called\");\n  }\n\n  makeSubStream(start, length, dict = null) {\n    unreachable(\"Abstract method `makeSubStream` called\");\n  }\n\n  /**\n   * @returns {Array | null}\n   */\n  getBaseStreams() {\n    return null;\n  }\n}\n\nexport { BaseStream };\n","/* Copyright 2019 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorPrefix,\n  assert,\n  BaseException,\n  objectSize,\n  stringToPDFString,\n  warn,\n} from \"../shared/util.js\";\nimport { Dict, isName, Ref, RefSet } from \"./primitives.js\";\nimport { BaseStream } from \"./base_stream.js\";\n\nconst PDF_VERSION_REGEXP = /^[1-9]\\.\\d$/;\n\nfunction getLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\n\nclass MissingDataException extends BaseException {\n  constructor(begin, end) {\n    super(`Missing data [${begin}, ${end})`, \"MissingDataException\");\n    this.begin = begin;\n    this.end = end;\n  }\n}\n\nclass ParserEOFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"ParserEOFException\");\n  }\n}\n\nclass XRefEntryException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefEntryException\");\n  }\n}\n\nclass XRefParseException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefParseException\");\n  }\n}\n\n/**\n * Combines multiple ArrayBuffers into a single Uint8Array.\n * @param {Array<ArrayBuffer>} arr - An array of ArrayBuffers.\n * @returns {Uint8Array}\n */\nfunction arrayBuffersToBytes(arr) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    for (const item of arr) {\n      assert(\n        item instanceof ArrayBuffer,\n        \"arrayBuffersToBytes - expected an ArrayBuffer.\"\n      );\n    }\n  }\n  const length = arr.length;\n  if (length === 0) {\n    return new Uint8Array(0);\n  }\n  if (length === 1) {\n    return new Uint8Array(arr[0]);\n  }\n  let dataLength = 0;\n  for (let i = 0; i < length; i++) {\n    dataLength += arr[i].byteLength;\n  }\n  const data = new Uint8Array(dataLength);\n  let pos = 0;\n  for (let i = 0; i < length; i++) {\n    const item = new Uint8Array(arr[i]);\n    data.set(item, pos);\n    pos += item.byteLength;\n  }\n  return data;\n}\n\n/**\n * Get the value of an inheritable property.\n *\n * If the PDF specification explicitly lists a property in a dictionary as\n * inheritable, then the value of the property may be present in the dictionary\n * itself or in one or more parents of the dictionary.\n *\n * If the key is not found in the tree, `undefined` is returned. Otherwise,\n * the value for the key is returned or, if `stopWhenFound` is `false`, a list\n * of values is returned.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {string} key - The key of the property to find the value for.\n * @param {boolean} getArray - Whether or not the value should be fetched as an\n *   array. The default value is `false`.\n * @param {boolean} stopWhenFound - Whether or not to stop the traversal when\n *   the key is found. If set to `false`, we always walk up the entire parent\n *   chain, for example to be able to find `\\Resources` placed on multiple\n *   levels of the tree. The default value is `true`.\n */\nfunction getInheritableProperty({\n  dict,\n  key,\n  getArray = false,\n  stopWhenFound = true,\n}) {\n  let values;\n  const visited = new RefSet();\n\n  while (dict instanceof Dict && !(dict.objId && visited.has(dict.objId))) {\n    if (dict.objId) {\n      visited.put(dict.objId);\n    }\n    const value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      (values ||= []).push(value);\n    }\n    dict = dict.get(\"Parent\");\n  }\n  return values;\n}\n\n// prettier-ignore\nconst ROMAN_NUMBER_MAP = [\n  \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n  \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n  \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n];\n\n/**\n * Converts positive integers to (upper case) Roman numerals.\n * @param {number} number - The number that should be converted.\n * @param {boolean} lowerCase - Indicates if the result should be converted\n *   to lower case letters. The default value is `false`.\n * @returns {string} The resulting Roman number.\n */\nfunction toRomanNumerals(number, lowerCase = false) {\n  assert(\n    Number.isInteger(number) && number > 0,\n    \"The number should be a positive integer.\"\n  );\n  const romanBuf = [];\n  let pos;\n  // Thousands\n  while (number >= 1000) {\n    number -= 1000;\n    romanBuf.push(\"M\");\n  }\n  // Hundreds\n  pos = (number / 100) | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  // Tens\n  pos = (number / 10) | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  // Ones\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]); // eslint-disable-line unicorn/no-array-push-push\n\n  const romanStr = romanBuf.join(\"\");\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n}\n\n// Calculate the base 2 logarithm of the number `x`. This differs from the\n// native function in the sense that it returns the ceiling value and that it\n// returns 0 instead of `Infinity`/`NaN` for `x` values smaller than/equal to 0.\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\n\nfunction readInt8(data, offset) {\n  return (data[offset] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return (\n    ((data[offset] << 24) |\n      (data[offset + 1] << 16) |\n      (data[offset + 2] << 8) |\n      data[offset + 3]) >>>\n    0\n  );\n}\n\n// Checks if ch is one of the following characters: SPACE, TAB, CR or LF.\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n\n/**\n * AcroForm field names use an array like notation to refer to\n * repeated XFA elements e.g. foo.bar[nnn].\n * see: XFA Spec Chapter 3 - Repeated Elements\n *\n * @param {string} path - XFA path name.\n * @returns {Array} - Array of Objects with the name and pos of\n * each part of the path.\n */\nfunction parseXFAPath(path) {\n  const positionPattern = /(.+)\\[(\\d+)\\]$/;\n  return path.split(\".\").map(component => {\n    const m = component.match(positionPattern);\n    if (m) {\n      return { name: m[1], pos: parseInt(m[2], 10) };\n    }\n    return { name: component, pos: 0 };\n  });\n}\n\nfunction escapePDFName(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    // Whitespace or delimiters aren't regular chars, so escape them.\n    if (\n      char < 0x21 ||\n      char > 0x7e ||\n      char === 0x23 /* # */ ||\n      char === 0x28 /* ( */ ||\n      char === 0x29 /* ) */ ||\n      char === 0x3c /* < */ ||\n      char === 0x3e /* > */ ||\n      char === 0x5b /* [ */ ||\n      char === 0x5d /* ] */ ||\n      char === 0x7b /* { */ ||\n      char === 0x7d /* } */ ||\n      char === 0x2f /* / */ ||\n      char === 0x25 /* % */\n    ) {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`#${char.toString(16)}`);\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\n// Replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\" by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n// in order to write it in a PDF file.\nfunction escapeString(str) {\n  return str.replaceAll(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction _collectJS(entry, xref, list, parents) {\n  if (!entry) {\n    return;\n  }\n\n  let parent = null;\n  if (entry instanceof Ref) {\n    if (parents.has(entry)) {\n      // If we've already found entry then we've a cycle.\n      return;\n    }\n    parent = entry;\n    parents.put(parent);\n    entry = xref.fetch(entry);\n  }\n  if (Array.isArray(entry)) {\n    for (const element of entry) {\n      _collectJS(element, xref, list, parents);\n    }\n  } else if (entry instanceof Dict) {\n    if (isName(entry.get(\"S\"), \"JavaScript\")) {\n      const js = entry.get(\"JS\");\n      let code;\n      if (js instanceof BaseStream) {\n        code = js.getString();\n      } else if (typeof js === \"string\") {\n        code = js;\n      }\n      code &&= stringToPDFString(code).replaceAll(\"\\x00\", \"\");\n      if (code) {\n        list.push(code);\n      }\n    }\n    _collectJS(entry.getRaw(\"Next\"), xref, list, parents);\n  }\n\n  if (parent) {\n    parents.remove(parent);\n  }\n}\n\nfunction collectActions(xref, dict, eventType) {\n  const actions = Object.create(null);\n  const additionalActionsDicts = getInheritableProperty({\n    dict,\n    key: \"AA\",\n    stopWhenFound: false,\n  });\n  if (additionalActionsDicts) {\n    // additionalActionsDicts contains dicts from ancestors\n    // as they're found in the tree from bottom to top.\n    // So the dicts are visited in reverse order to guarantee\n    // that actions from elder ancestors will be overwritten\n    // by ones from younger ancestors.\n    for (let i = additionalActionsDicts.length - 1; i >= 0; i--) {\n      const additionalActions = additionalActionsDicts[i];\n      if (!(additionalActions instanceof Dict)) {\n        continue;\n      }\n      for (const key of additionalActions.getKeys()) {\n        const action = eventType[key];\n        if (!action) {\n          continue;\n        }\n        const actionDict = additionalActions.getRaw(key);\n        const parents = new RefSet();\n        const list = [];\n        _collectJS(actionDict, xref, list, parents);\n        if (list.length > 0) {\n          actions[action] = list;\n        }\n      }\n    }\n  }\n  // Collect the Action if any (we may have one on pushbutton).\n  if (dict.has(\"A\")) {\n    const actionDict = dict.get(\"A\");\n    const parents = new RefSet();\n    const list = [];\n    _collectJS(actionDict, xref, list, parents);\n    if (list.length > 0) {\n      actions.Action = list;\n    }\n  }\n  return objectSize(actions) > 0 ? actions : null;\n}\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction* codePointIter(str) {\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n      // char is represented by two u16\n      i++;\n    }\n    yield char;\n  }\n}\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n  return buffer.join(\"\");\n}\n\nfunction validateFontName(fontFamily, mustWarn = false) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/string.\n  const m = /^(\"|').*(\"|')$/.exec(fontFamily);\n  if (m && m[1] === m[2]) {\n    const re = new RegExp(`[^\\\\\\\\]${m[1]}`);\n    if (re.test(fontFamily.slice(1, -1))) {\n      if (mustWarn) {\n        warn(`FontFamily contains unescaped ${m[1]}: ${fontFamily}.`);\n      }\n      return false;\n    }\n  } else {\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident.\n    for (const ident of fontFamily.split(/[ \\t]+/)) {\n      if (/^(\\d|(-(\\d|-)))/.test(ident) || !/^[\\w-\\\\]+$/.test(ident)) {\n        if (mustWarn) {\n          warn(`FontFamily contains invalid <custom-ident>: ${fontFamily}.`);\n        }\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction validateCSSFont(cssFontInfo) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-style.\n  const DEFAULT_CSS_FONT_OBLIQUE = \"14\";\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight.\n  const DEFAULT_CSS_FONT_WEIGHT = \"400\";\n  const CSS_FONT_WEIGHT_VALUES = new Set([\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\",\n    \"1000\",\n    \"normal\",\n    \"bold\",\n    \"bolder\",\n    \"lighter\",\n  ]);\n\n  const { fontFamily, fontWeight, italicAngle } = cssFontInfo;\n\n  if (!validateFontName(fontFamily, true)) {\n    return false;\n  }\n\n  const weight = fontWeight ? fontWeight.toString() : \"\";\n  cssFontInfo.fontWeight = CSS_FONT_WEIGHT_VALUES.has(weight)\n    ? weight\n    : DEFAULT_CSS_FONT_WEIGHT;\n\n  const angle = parseFloat(italicAngle);\n  cssFontInfo.italicAngle =\n    isNaN(angle) || angle < -90 || angle > 90\n      ? DEFAULT_CSS_FONT_OBLIQUE\n      : italicAngle.toString();\n\n  return true;\n}\n\nfunction recoverJsURL(str) {\n  // Attempt to recover valid URLs from `JS` entries with certain\n  // white-listed formats:\n  //  - window.open('http://example.com')\n  //  - app.launchURL('http://example.com', true)\n  //  - xfa.host.gotoURL('http://example.com')\n  const URL_OPEN_METHODS = [\"app.launchURL\", \"window.open\", \"xfa.host.gotoURL\"];\n  const regex = new RegExp(\n    \"^\\\\s*(\" +\n      URL_OPEN_METHODS.join(\"|\").replaceAll(\".\", \"\\\\.\") +\n      \")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\n    \"i\"\n  );\n\n  const jsUrl = regex.exec(str);\n  if (jsUrl?.[2]) {\n    const url = jsUrl[2];\n    let newWindow = false;\n\n    if (jsUrl[3] === \"true\" && jsUrl[1] === \"app.launchURL\") {\n      newWindow = true;\n    }\n    return { url, newWindow };\n  }\n\n  return null;\n}\n\nfunction numberToString(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n\n  const roundedValue = Math.round(value * 100);\n  if (roundedValue % 100 === 0) {\n    return (roundedValue / 100).toString();\n  }\n\n  if (roundedValue % 10 === 0) {\n    return value.toFixed(1);\n  }\n\n  return value.toFixed(2);\n}\n\nfunction getNewAnnotationsMap(annotationStorage) {\n  if (!annotationStorage) {\n    return null;\n  }\n  const newAnnotationsByPage = new Map();\n  // The concept of page in a XFA is very different, so\n  // editing is just not implemented.\n  for (const [key, value] of annotationStorage) {\n    if (!key.startsWith(AnnotationEditorPrefix)) {\n      continue;\n    }\n    let annotations = newAnnotationsByPage.get(value.pageIndex);\n    if (!annotations) {\n      annotations = [];\n      newAnnotationsByPage.set(value.pageIndex, annotations);\n    }\n    annotations.push(value);\n  }\n  return newAnnotationsByPage.size > 0 ? newAnnotationsByPage : null;\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16HexString(str) {\n  const buf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      ((char >> 8) & 0xff).toString(16).padStart(2, \"0\"),\n      (char & 0xff).toString(16).padStart(2, \"0\")\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF16String(str, bigEndian = false) {\n  const buf = [];\n  if (bigEndian) {\n    buf.push(\"\\xFE\\xFF\");\n  }\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction getRotationMatrix(rotation, width, height) {\n  switch (rotation) {\n    case 90:\n      return [0, 1, -1, 0, width, 0];\n    case 180:\n      return [-1, 0, 0, -1, width, height];\n    case 270:\n      return [0, -1, 1, 0, 0, height];\n    default:\n      throw new Error(\"Invalid rotation\");\n  }\n}\n\n/**\n * Get the number of bytes to use to represent the given positive integer.\n * If n is zero, the function returns 0 which means that we don't need to waste\n * a byte to represent it.\n * @param {number} x - a positive integer.\n * @returns {number}\n */\nfunction getSizeInBytes(x) {\n  // n bits are required for numbers up to 2^n - 1.\n  // So for a number x, we need ceil(log2(1 + x)) bits.\n  return Math.ceil(Math.ceil(Math.log2(1 + x)) / 8);\n}\n\nexport {\n  arrayBuffersToBytes,\n  codePointIter,\n  collectActions,\n  encodeToXmlString,\n  escapePDFName,\n  escapeString,\n  getInheritableProperty,\n  getLookupTableFactory,\n  getNewAnnotationsMap,\n  getRotationMatrix,\n  getSizeInBytes,\n  isAscii,\n  isWhiteSpace,\n  log2,\n  MissingDataException,\n  numberToString,\n  ParserEOFException,\n  parseXFAPath,\n  PDF_VERSION_REGEXP,\n  readInt8,\n  readUint16,\n  readUint32,\n  recoverJsURL,\n  stringToUTF16HexString,\n  stringToUTF16String,\n  toRomanNumerals,\n  validateCSSFont,\n  validateFontName,\n  XRefEntryException,\n  XRefParseException,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Table C-2\nconst QeTable = [\n  { qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1 },\n  { qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0 },\n  { qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 4, nlps: 12, switchFlag: 0 },\n  { qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0 },\n  { qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0 },\n  { qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1 },\n  { qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0 },\n  { qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0 },\n  { qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0 },\n  { qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0 },\n  { qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 13, nlps: 20, switchFlag: 0 },\n  { qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0 },\n  { qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1 },\n  { qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0 },\n  { qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0 },\n  { qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0 },\n  { qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0 },\n  { qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0 },\n  { qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0 },\n  { qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0 },\n  { qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0 },\n  { qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 25, nlps: 22, switchFlag: 0 },\n  { qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0 },\n  { qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0 },\n  { qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0 },\n  { qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0 },\n  { qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 31, nlps: 28, switchFlag: 0 },\n  { qe: 0x09c1, nmps: 32, nlps: 29, switchFlag: 0 },\n  { qe: 0x08a1, nmps: 33, nlps: 30, switchFlag: 0 },\n  { qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0 },\n  { qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0 },\n  { qe: 0x02a1, nmps: 36, nlps: 33, switchFlag: 0 },\n  { qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0 },\n  { qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0 },\n  { qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0 },\n  { qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0 },\n  { qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0 },\n  { qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0 },\n  { qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0 },\n  { qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0 },\n  { qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0 },\n  { qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0 },\n  { qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0 },\n];\n\n/**\n * This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nclass ArithmeticDecoder {\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  constructor(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xffff) | ((this.clow >> 9) & 0x7f);\n    this.clow = (this.clow << 7) & 0xffff;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  // C.3.4 Compressed data input (BYTEIN)\n  byteIn() {\n    const data = this.data;\n    let bp = this.bp;\n\n    if (data[bp] === 0xff) {\n      if (data[bp + 1] > 0x8f) {\n        this.clow += 0xff00;\n        this.ct = 8;\n      } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n      }\n    } else {\n      bp++;\n      this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n      this.ct = 8;\n      this.bp = bp;\n    }\n    if (this.clow > 0xffff) {\n      this.chigh += this.clow >> 16;\n      this.clow &= 0xffff;\n    }\n  }\n\n  // C.3.2 Decoding a decision (DECODE)\n  readBit(contexts, pos) {\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry cx.index, lowest bit carries cx.mps\n    let cx_index = contexts[pos] >> 1,\n      cx_mps = contexts[pos] & 1;\n    const qeTableIcx = QeTable[cx_index];\n    const qeIcx = qeTableIcx.qe;\n    let d;\n    let a = this.a - qeIcx;\n\n    if (this.chigh < qeIcx) {\n      // exchangeLps\n      if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      }\n    } else {\n      this.chigh -= qeIcx;\n      if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n      }\n      // exchangeMps\n      if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      }\n    }\n    // C.3.3 renormD;\n    do {\n      if (this.ct === 0) {\n        this.byteIn();\n      }\n\n      a <<= 1;\n      this.chigh = ((this.chigh << 1) & 0xffff) | ((this.clow >> 15) & 1);\n      this.clow = (this.clow << 1) & 0xffff;\n      this.ct--;\n    } while ((a & 0x8000) === 0);\n    this.a = a;\n\n    contexts[pos] = (cx_index << 1) | cx_mps;\n    return d;\n  }\n}\n\nexport { ArithmeticDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* Copyright 1996-2003 Glyph & Cog, LLC\n *\n * The CCITT stream implementation contained in this file is a JavaScript port\n * of XPDF's implementation, made available under the Apache 2.0 open source\n * license.\n */\n\nimport { FormatError, info } from \"../shared/util.js\";\n\n/**\n * @typedef {Object} CCITTFaxDecoderSource\n * @property {function} next - Method that return one byte of data for decoding,\n *   or -1 when EOF is reached.\n */\n\nconst ccittEOL = -2;\nconst ccittEOF = -1;\nconst twoDimPass = 0;\nconst twoDimHoriz = 1;\nconst twoDimVert0 = 2;\nconst twoDimVertR1 = 3;\nconst twoDimVertL1 = 4;\nconst twoDimVertR2 = 5;\nconst twoDimVertL2 = 6;\nconst twoDimVertR3 = 7;\nconst twoDimVertL3 = 8;\n\n// prettier-ignore\nconst twoDimTable = [\n  [-1, -1], [-1, -1],                   // 000000x\n  [7, twoDimVertL3],                    // 0000010\n  [7, twoDimVertR3],                    // 0000011\n  [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n  [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n  [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0]\n];\n\n// prettier-ignore\nconst whiteTable1 = [\n  [-1, -1],                               // 00000\n  [12, ccittEOL],                         // 00001\n  [-1, -1], [-1, -1],                     // 0001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n  [11, 1792], [11, 1792],                 // 1000x\n  [12, 1984],                             // 10010\n  [12, 2048],                             // 10011\n  [12, 2112],                             // 10100\n  [12, 2176],                             // 10101\n  [12, 2240],                             // 10110\n  [12, 2304],                             // 10111\n  [11, 1856], [11, 1856],                 // 1100x\n  [11, 1920], [11, 1920],                 // 1101x\n  [12, 2368],                             // 11100\n  [12, 2432],                             // 11101\n  [12, 2496],                             // 11110\n  [12, 2560]                              // 11111\n];\n\n// prettier-ignore\nconst whiteTable2 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n  [8, 29], [8, 29],                           // 00000010x\n  [8, 30], [8, 30],                           // 00000011x\n  [8, 45], [8, 45],                           // 00000100x\n  [8, 46], [8, 46],                           // 00000101x\n  [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n  [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n  [8, 47], [8, 47],                           // 00001010x\n  [8, 48], [8, 48],                           // 00001011x\n  [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n  [6, 13], [6, 13], [6, 13], [6, 13],\n  [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n  [8, 33], [8, 33],                           // 00010010x\n  [8, 34], [8, 34],                           // 00010011x\n  [8, 35], [8, 35],                           // 00010100x\n  [8, 36], [8, 36],                           // 00010101x\n  [8, 37], [8, 37],                           // 00010110x\n  [8, 38], [8, 38],                           // 00010111x\n  [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n  [8, 31], [8, 31],                           // 00011010x\n  [8, 32], [8, 32],                           // 00011011x\n  [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n  [6, 1], [6, 1], [6, 1], [6, 1],\n  [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n  [6, 12], [6, 12], [6, 12], [6, 12],\n  [8, 53], [8, 53],                           // 00100100x\n  [8, 54], [8, 54],                           // 00100101x\n  [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n  [8, 39], [8, 39],                           // 00101000x\n  [8, 40], [8, 40],                           // 00101001x\n  [8, 41], [8, 41],                           // 00101010x\n  [8, 42], [8, 42],                           // 00101011x\n  [8, 43], [8, 43],                           // 00101100x\n  [8, 44], [8, 44],                           // 00101101x\n  [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n  [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n  [8, 61], [8, 61],                           // 00110010x\n  [8, 62], [8, 62],                           // 00110011x\n  [8, 63], [8, 63],                           // 00110100x\n  [8, 0], [8, 0],                             // 00110101x\n  [8, 320], [8, 320],                         // 00110110x\n  [8, 384], [8, 384],                         // 00110111x\n  [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n  [8, 59], [8, 59],                           // 01001010x\n  [8, 60], [8, 60],                           // 01001011x\n  [9, 1472],                                  // 010011000\n  [9, 1536],                                  // 010011001\n  [9, 1600],                                  // 010011010\n  [9, 1728],                                  // 010011011\n  [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n  [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n  [8, 49], [8, 49],                           // 01010010x\n  [8, 50], [8, 50],                           // 01010011x\n  [8, 51], [8, 51],                           // 01010100x\n  [8, 52], [8, 52],                           // 01010101x\n  [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n  [8, 55], [8, 55],                           // 01011000x\n  [8, 56], [8, 56],                           // 01011001x\n  [8, 57], [8, 57],                           // 01011010x\n  [8, 58], [8, 58],                           // 01011011x\n  [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n  [6, 192], [6, 192], [6, 192], [6, 192],\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n  [8, 448], [8, 448],                         // 01100100x\n  [8, 512], [8, 512],                         // 01100101x\n  [9, 704],                                   // 011001100\n  [9, 768],                                   // 011001101\n  [8, 640], [8, 640],                         // 01100111x\n  [8, 576], [8, 576],                         // 01101000x\n  [9, 832],                                   // 011010010\n  [9, 896],                                   // 011010011\n  [9, 960],                                   // 011010100\n  [9, 1024],                                  // 011010101\n  [9, 1088],                                  // 011010110\n  [9, 1152],                                  // 011010111\n  [9, 1216],                                  // 011011000\n  [9, 1280],                                  // 011011001\n  [9, 1344],                                  // 011011010\n  [9, 1408],                                  // 011011011\n  [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n  [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n  [6, 16], [6, 16], [6, 16], [6, 16],\n  [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n  [6, 17], [6, 17], [6, 17], [6, 17],\n  [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n  [6, 14], [6, 14], [6, 14], [6, 14],\n  [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n  [6, 15], [6, 15], [6, 15], [6, 15],\n  [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7]\n];\n\n// prettier-ignore\nconst blackTable1 = [\n  [-1, -1], [-1, -1],                             // 000000000000x\n  [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n  [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n  [12, 1984], [12, 1984],                         // 000000010010x\n  [12, 2048], [12, 2048],                         // 000000010011x\n  [12, 2112], [12, 2112],                         // 000000010100x\n  [12, 2176], [12, 2176],                         // 000000010101x\n  [12, 2240], [12, 2240],                         // 000000010110x\n  [12, 2304], [12, 2304],                         // 000000010111x\n  [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n  [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n  [12, 2368], [12, 2368],                         // 000000011100x\n  [12, 2432], [12, 2432],                         // 000000011101x\n  [12, 2496], [12, 2496],                         // 000000011110x\n  [12, 2560], [12, 2560],                         // 000000011111x\n  [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n  [10, 18], [10, 18], [10, 18], [10, 18],\n  [12, 52], [12, 52],                             // 000000100100x\n  [13, 640],                                      // 0000001001010\n  [13, 704],                                      // 0000001001011\n  [13, 768],                                      // 0000001001100\n  [13, 832],                                      // 0000001001101\n  [12, 55], [12, 55],                             // 000000100111x\n  [12, 56], [12, 56],                             // 000000101000x\n  [13, 1280],                                     // 0000001010010\n  [13, 1344],                                     // 0000001010011\n  [13, 1408],                                     // 0000001010100\n  [13, 1472],                                     // 0000001010101\n  [12, 59], [12, 59],                             // 000000101011x\n  [12, 60], [12, 60],                             // 000000101100x\n  [13, 1536],                                     // 0000001011010\n  [13, 1600],                                     // 0000001011011\n  [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n  [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n  [13, 1664],                                     // 0000001100100\n  [13, 1728],                                     // 0000001100101\n  [12, 320], [12, 320],                           // 000000110011x\n  [12, 384], [12, 384],                           // 000000110100x\n  [12, 448], [12, 448],                           // 000000110101x\n  [13, 512],                                      // 0000001101100\n  [13, 576],                                      // 0000001101101\n  [12, 53], [12, 53],                             // 000000110111x\n  [12, 54], [12, 54],                             // 000000111000x\n  [13, 896],                                      // 0000001110010\n  [13, 960],                                      // 0000001110011\n  [13, 1024],                                     // 0000001110100\n  [13, 1088],                                     // 0000001110101\n  [13, 1152],                                     // 0000001110110\n  [13, 1216],                                     // 0000001110111\n  [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n  [10, 64], [10, 64], [10, 64], [10, 64]\n];\n\n// prettier-ignore\nconst blackTable2 = [\n  [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [11, 23], [11, 23],                     // 00000101000x\n  [12, 50],                               // 000001010010\n  [12, 51],                               // 000001010011\n  [12, 44],                               // 000001010100\n  [12, 45],                               // 000001010101\n  [12, 46],                               // 000001010110\n  [12, 47],                               // 000001010111\n  [12, 57],                               // 000001011000\n  [12, 58],                               // 000001011001\n  [12, 61],                               // 000001011010\n  [12, 256],                              // 000001011011\n  [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n  [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n  [12, 48],                               // 000001100100\n  [12, 49],                               // 000001100101\n  [12, 62],                               // 000001100110\n  [12, 63],                               // 000001100111\n  [12, 30],                               // 000001101000\n  [12, 31],                               // 000001101001\n  [12, 32],                               // 000001101010\n  [12, 33],                               // 000001101011\n  [12, 40],                               // 000001101100\n  [12, 41],                               // 000001101101\n  [11, 22], [11, 22],                     // 00000110111x\n  [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n  [9, 15], [9, 15], [9, 15], [9, 15],\n  [12, 128],                              // 000011001000\n  [12, 192],                              // 000011001001\n  [12, 26],                               // 000011001010\n  [12, 27],                               // 000011001011\n  [12, 28],                               // 000011001100\n  [12, 29],                               // 000011001101\n  [11, 19], [11, 19],                     // 00001100111x\n  [11, 20], [11, 20],                     // 00001101000x\n  [12, 34],                               // 000011010010\n  [12, 35],                               // 000011010011\n  [12, 36],                               // 000011010100\n  [12, 37],                               // 000011010101\n  [12, 38],                               // 000011010110\n  [12, 39],                               // 000011010111\n  [11, 21], [11, 21],                     // 00001101100x\n  [12, 42],                               // 000011011010\n  [12, 43],                               // 000011011011\n  [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n  [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12]\n];\n\n// prettier-ignore\nconst blackTable3 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n  [6, 9],                                 // 000100\n  [6, 8],                                 // 000101\n  [5, 7], [5, 7],                         // 00011x\n  [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n  [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n  [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n  [3, 1], [3, 1], [3, 1], [3, 1],\n  [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n  [3, 4], [3, 4], [3, 4], [3, 4],\n  [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2]\n];\n\n/**\n * @param {CCITTFaxDecoderSource} source - The data which should be decoded.\n * @param {Object} [options] - Decoding options.\n */\nclass CCITTFaxDecoder {\n  constructor(source, options = {}) {\n    if (!source || typeof source.next !== \"function\") {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n\n    this.encoding = options.K || 0;\n    this.eoline = options.EndOfLine || false;\n    this.byteAlign = options.EncodedByteAlign || false;\n    this.columns = options.Columns || 1728;\n    this.rows = options.Rows || 0;\n    this.eoblock = options.EndOfBlock ?? true;\n    this.black = options.BlackIs1 || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n\n    let code1;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n\n  readNextChar() {\n    if (this.eof) {\n      return -1;\n    }\n    const refLine = this.refLine;\n    const codingLine = this.codingLine;\n    const columns = this.columns;\n\n    let refPos, blackPixels, bits, i;\n\n    if (this.outputBits === 0) {\n      if (this.rowsDone) {\n        this.eof = true;\n      }\n      if (this.eof) {\n        return -1;\n      }\n      this.err = false;\n\n      let code1, code2, code3;\n      if (this.nextLine2D) {\n        for (i = 0; codingLine[i] < columns; ++i) {\n          refLine[i] = codingLine[i];\n        }\n        refLine[i++] = columns;\n        refLine[i] = columns;\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        refPos = 0;\n        blackPixels = 0;\n\n        while (codingLine[this.codingPos] < columns) {\n          code1 = this._getTwoDimCode();\n          switch (code1) {\n            case twoDimPass:\n              this._addPixels(refLine[refPos + 1], blackPixels);\n              if (refLine[refPos + 1] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimHoriz:\n              code1 = code2 = 0;\n              if (blackPixels) {\n                do {\n                  code1 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n              } else {\n                do {\n                  code1 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n              }\n              this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n              if (codingLine[this.codingPos] < columns) {\n                this._addPixels(\n                  codingLine[this.codingPos] + code2,\n                  blackPixels ^ 1\n                );\n              }\n              while (\n                refLine[refPos] <= codingLine[this.codingPos] &&\n                refLine[refPos] < columns\n              ) {\n                refPos += 2;\n              }\n              break;\n            case twoDimVertR3:\n              this._addPixels(refLine[refPos] + 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR2:\n              this._addPixels(refLine[refPos] + 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR1:\n              this._addPixels(refLine[refPos] + 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVert0:\n              this._addPixels(refLine[refPos], blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL3:\n              this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL2:\n              this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL1:\n              this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case ccittEOF:\n              this._addPixels(columns, 0);\n              this.eof = true;\n              break;\n            default:\n              info(\"bad 2d code\");\n              this._addPixels(columns, 0);\n              this.err = true;\n          }\n        }\n      } else {\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        blackPixels = 0;\n        while (codingLine[this.codingPos] < columns) {\n          code1 = 0;\n          if (blackPixels) {\n            do {\n              code1 += code3 = this._getBlackCode();\n            } while (code3 >= 64);\n          } else {\n            do {\n              code1 += code3 = this._getWhiteCode();\n            } while (code3 >= 64);\n          }\n          this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n          blackPixels ^= 1;\n        }\n      }\n\n      let gotEOL = false;\n\n      if (this.byteAlign) {\n        this.inputBits &= ~7;\n      }\n\n      if (!this.eoblock && this.row === this.rows - 1) {\n        this.rowsDone = true;\n      } else {\n        code1 = this._lookBits(12);\n        if (this.eoline) {\n          while (code1 !== ccittEOF && code1 !== 1) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        } else {\n          while (code1 === 0) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        }\n        if (code1 === 1) {\n          this._eatBits(12);\n          gotEOL = true;\n        } else if (code1 === ccittEOF) {\n          this.eof = true;\n        }\n      }\n\n      if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n        this.nextLine2D = !this._lookBits(1);\n        this._eatBits(1);\n      }\n\n      if (this.eoblock && gotEOL && this.byteAlign) {\n        code1 = this._lookBits(12);\n        if (code1 === 1) {\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._lookBits(1);\n            this._eatBits(1);\n          }\n          if (this.encoding >= 0) {\n            for (i = 0; i < 4; ++i) {\n              code1 = this._lookBits(12);\n              if (code1 !== 1) {\n                info(\"bad rtc code: \" + code1);\n              }\n              this._eatBits(12);\n              if (this.encoding > 0) {\n                this._lookBits(1);\n                this._eatBits(1);\n              }\n            }\n          }\n          this.eof = true;\n        }\n      } else if (this.err && this.eoline) {\n        while (true) {\n          code1 = this._lookBits(13);\n          if (code1 === ccittEOF) {\n            this.eof = true;\n            return -1;\n          }\n          if (code1 >> 1 === 1) {\n            break;\n          }\n          this._eatBits(1);\n        }\n        this._eatBits(12);\n        if (this.encoding > 0) {\n          this._eatBits(1);\n          this.nextLine2D = !(code1 & 1);\n        }\n      }\n\n      this.outputBits =\n        codingLine[0] > 0\n          ? codingLine[(this.codingPos = 0)]\n          : codingLine[(this.codingPos = 1)];\n      this.row++;\n    }\n\n    let c;\n    if (this.outputBits >= 8) {\n      c = this.codingPos & 1 ? 0 : 0xff;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n        this.codingPos++;\n        this.outputBits =\n          codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n      }\n    } else {\n      bits = 8;\n      c = 0;\n      do {\n        if (typeof this.outputBits !== \"number\") {\n          throw new FormatError(\n            'Invalid /CCITTFaxDecode data, \"outputBits\" must be a number.'\n          );\n        }\n\n        if (this.outputBits > bits) {\n          c <<= bits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - bits);\n          }\n          this.outputBits -= bits;\n          bits = 0;\n        } else {\n          c <<= this.outputBits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - this.outputBits);\n          }\n          bits -= this.outputBits;\n          this.outputBits = 0;\n          if (codingLine[this.codingPos] < columns) {\n            this.codingPos++;\n            this.outputBits =\n              codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n          } else if (bits > 0) {\n            c <<= bits;\n            bits = 0;\n          }\n        }\n      } while (bits);\n    }\n    if (this.black) {\n      c ^= 0xff;\n    }\n    return c;\n  }\n\n  /**\n   * @private\n   */\n  _addPixels(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    }\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * @private\n   */\n  _addPixelsNeg(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n        info(\"invalid code\");\n        this.err = true;\n        a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n        --codingPos;\n      }\n      codingLine[codingPos] = a1;\n    }\n\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * This function returns the code found from the table.\n   * The start and end parameters set the boundaries for searching the table.\n   * The limit parameter is optional. Function returns an array with three\n   * values. The first array element indicates whether a valid code is being\n   * returned. The second array element is the actual code. The third array\n   * element indicates whether EOF was reached.\n   * @private\n   */\n  _findTableCode(start, end, table, limit) {\n    const limitValue = limit || 0;\n    for (let i = start; i <= end; ++i) {\n      let code = this._lookBits(i);\n      if (code === ccittEOF) {\n        return [true, 1, false];\n      }\n      if (i < end) {\n        code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n        const p = table[code - limitValue];\n        if (p[0] === i) {\n          this._eatBits(i);\n          return [true, p[1], true];\n        }\n      }\n    }\n    return [false, 0, false];\n  }\n\n  /**\n   * @private\n   */\n  _getTwoDimCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(7);\n      p = twoDimTable[code];\n      if (p?.[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      const result = this._findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n        return result[1];\n      }\n    }\n    info(\"Bad two dim code\");\n    return ccittEOF;\n  }\n\n  /**\n   * @private\n   */\n  _getWhiteCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(12);\n      if (code === ccittEOF) {\n        return 1;\n      }\n\n      p = code >> 5 === 0 ? whiteTable1[code] : whiteTable2[code >> 3];\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad white code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _getBlackCode() {\n    let code, p;\n    if (this.eoblock) {\n      code = this._lookBits(13);\n      if (code === ccittEOF) {\n        return 1;\n      }\n      if (code >> 7 === 0) {\n        p = blackTable1[code];\n      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n        p = blackTable2[(code >> 1) - 64];\n      } else {\n        p = blackTable3[code >> 7];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad black code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _lookBits(n) {\n    let c;\n    while (this.inputBits < n) {\n      if ((c = this.source.next()) === -1) {\n        if (this.inputBits === 0) {\n          return ccittEOF;\n        }\n        return (this.inputBuf << (n - this.inputBits)) & (0xffff >> (16 - n));\n      }\n      this.inputBuf = (this.inputBuf << 8) | c;\n      this.inputBits += 8;\n    }\n    return (this.inputBuf >> (this.inputBits - n)) & (0xffff >> (16 - n));\n  }\n\n  /**\n   * @private\n   */\n  _eatBits(n) {\n    if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n    }\n  }\n}\n\nexport { CCITTFaxDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, shadow } from \"../shared/util.js\";\nimport { log2, readInt8, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\nimport { CCITTFaxDecoder } from \"./ccitt.js\";\n\nclass Jbig2Error extends BaseException {\n  constructor(msg) {\n    super(`JBIG2 error: ${msg}`, \"Jbig2Error\");\n  }\n}\n\n// Utility data structures\nclass ContextCache {\n  getContexts(id) {\n    if (id in this) {\n      return this[id];\n    }\n    return (this[id] = new Int8Array(1 << 16));\n  }\n}\n\nclass DecodingContext {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  get decoder() {\n    const decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n    return shadow(this, \"decoder\", decoder);\n  }\n\n  get contextCache() {\n    const cache = new ContextCache();\n    return shadow(this, \"contextCache\", cache);\n  }\n}\n\nconst MAX_INT_32 = 2 ** 31 - 1;\nconst MIN_INT_32 = -(2 ** 31);\n\n// Annex A. Arithmetic Integer Decoding Procedure\n// A.2 Procedure for decoding values\nfunction decodeInteger(contextCache, procedure, decoder) {\n  const contexts = contextCache.getContexts(procedure);\n  let prev = 1;\n\n  function readBits(length) {\n    let v = 0;\n    for (let i = 0; i < length; i++) {\n      const bit = decoder.readBit(contexts, prev);\n      prev = prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n      v = (v << 1) | bit;\n    }\n    return v >>> 0;\n  }\n\n  const sign = readBits(1);\n  // prettier-ignore\n  /* eslint-disable no-nested-ternary */\n  const value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n  /* eslint-enable no-nested-ternary */\n  let signedValue;\n  if (sign === 0) {\n    signedValue = value;\n  } else if (value > 0) {\n    signedValue = -value;\n  }\n  // Ensure that the integer value doesn't underflow or overflow.\n  if (signedValue >= MIN_INT_32 && signedValue <= MAX_INT_32) {\n    return signedValue;\n  }\n  return null;\n}\n\n// A.3 The IAID decoding procedure\nfunction decodeIAID(contextCache, decoder, codeLength) {\n  const contexts = contextCache.getContexts(\"IAID\");\n\n  let prev = 1;\n  for (let i = 0; i < codeLength; i++) {\n    const bit = decoder.readBit(contexts, prev);\n    prev = (prev << 1) | bit;\n  }\n  if (codeLength < 31) {\n    return prev & ((1 << codeLength) - 1);\n  }\n  return prev & 0x7fffffff;\n}\n\n// 7.3 Segment types\nconst SegmentTypes = [\n  \"SymbolDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateTextRegion\",\n  null,\n  \"ImmediateTextRegion\",\n  \"ImmediateLosslessTextRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"PatternDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateHalftoneRegion\",\n  null,\n  \"ImmediateHalftoneRegion\",\n  \"ImmediateLosslessHalftoneRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"IntermediateGenericRegion\",\n  null,\n  \"ImmediateGenericRegion\",\n  \"ImmediateLosslessGenericRegion\",\n  \"IntermediateGenericRefinementRegion\",\n  null,\n  \"ImmediateGenericRefinementRegion\",\n  \"ImmediateLosslessGenericRefinementRegion\",\n  null,\n  null,\n  null,\n  null,\n  \"PageInformation\",\n  \"EndOfPage\",\n  \"EndOfStripe\",\n  \"EndOfFile\",\n  \"Profiles\",\n  \"Tables\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"Extension\",\n];\n\nconst CodingTemplates = [\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: 2, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -3, y: -1 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n];\n\nconst RefinementTemplates = [\n  {\n    coding: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n  {\n    coding: [\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n];\n\n// See 6.2.5.7 Decoding the bitmap.\nconst ReusedContexts = [\n  0x9b25, // 10011 0110010 0101\n  0x0795, // 0011 110010 101\n  0x00e5, // 001 11001 01\n  0x0195, // 011001 0101\n];\n\nconst RefinementReusedContexts = [\n  0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n  0x0008, // '0000' + '001000'\n];\n\nfunction decodeBitmapTemplate0(width, height, decodingContext) {\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n  const bitmap = [];\n  let contextLabel, i, j, pixel, row, row1, row2;\n\n  // ...ooooo....\n  // ..ooooooo... Context template for current pixel (X)\n  // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n  const OLD_PIXEL_MASK = 0x7bf7; // 01111 0111111 0111\n\n  for (i = 0; i < height; i++) {\n    row = bitmap[i] = new Uint8Array(width);\n    row1 = i < 1 ? row : bitmap[i - 1];\n    row2 = i < 2 ? row : bitmap[i - 2];\n\n    // At the beginning of each row:\n    // Fill contextLabel with pixels that are above/right of (X)\n    contextLabel =\n      (row2[0] << 13) |\n      (row2[1] << 12) |\n      (row2[2] << 11) |\n      (row1[0] << 7) |\n      (row1[1] << 6) |\n      (row1[2] << 5) |\n      (row1[3] << 4);\n\n    for (j = 0; j < width; j++) {\n      row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n      // At each pixel: Clear contextLabel pixels that are shifted\n      // out of the context, then add new ones.\n      contextLabel =\n        ((contextLabel & OLD_PIXEL_MASK) << 1) |\n        (j + 3 < width ? row2[j + 3] << 11 : 0) |\n        (j + 4 < width ? row1[j + 4] << 4 : 0) |\n        pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.2 Generic Region Decoding Procedure\nfunction decodeBitmap(\n  mmr,\n  width,\n  height,\n  templateIndex,\n  prediction,\n  skip,\n  at,\n  decodingContext\n) {\n  if (mmr) {\n    const input = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n    return decodeMMRBitmap(input, width, height, false);\n  }\n\n  // Use optimized version for the most common case\n  if (\n    templateIndex === 0 &&\n    !skip &&\n    !prediction &&\n    at.length === 4 &&\n    at[0].x === 3 &&\n    at[0].y === -1 &&\n    at[1].x === -3 &&\n    at[1].y === -1 &&\n    at[2].x === 2 &&\n    at[2].y === -2 &&\n    at[3].x === -2 &&\n    at[3].y === -2\n  ) {\n    return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n\n  const useskip = !!skip;\n  const template = CodingTemplates[templateIndex].concat(at);\n\n  // Sorting is non-standard, and it is not required. But sorting increases\n  // the number of template bits that can be reused from the previous\n  // contextLabel in the main loop.\n  template.sort(function (a, b) {\n    return a.y - b.y || a.x - b.x;\n  });\n\n  const templateLength = template.length;\n  const templateX = new Int8Array(templateLength);\n  const templateY = new Int8Array(templateLength);\n  const changingTemplateEntries = [];\n  let reuseMask = 0,\n    minX = 0,\n    maxX = 0,\n    minY = 0;\n  let c, k;\n\n  for (k = 0; k < templateLength; k++) {\n    templateX[k] = template[k].x;\n    templateY[k] = template[k].y;\n    minX = Math.min(minX, template[k].x);\n    maxX = Math.max(maxX, template[k].x);\n    minY = Math.min(minY, template[k].y);\n    // Check if the template pixel appears in two consecutive context labels,\n    // so it can be reused. Otherwise, we add it to the list of changing\n    // template entries.\n    if (\n      k < templateLength - 1 &&\n      template[k].y === template[k + 1].y &&\n      template[k].x === template[k + 1].x - 1\n    ) {\n      reuseMask |= 1 << (templateLength - 1 - k);\n    } else {\n      changingTemplateEntries.push(k);\n    }\n  }\n  const changingEntriesLength = changingTemplateEntries.length;\n\n  const changingTemplateX = new Int8Array(changingEntriesLength);\n  const changingTemplateY = new Int8Array(changingEntriesLength);\n  const changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n    k = changingTemplateEntries[c];\n    changingTemplateX[c] = template[k].x;\n    changingTemplateY[c] = template[k].y;\n    changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n  }\n\n  // Get the safe bounding box edges from the width, height, minX, maxX, minY\n  const sbb_left = -minX;\n  const sbb_top = -minY;\n  const sbb_right = width - maxX;\n\n  const pseudoPixelContext = ReusedContexts[templateIndex];\n  let row = new Uint8Array(width);\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n\n  let ltp = 0,\n    j,\n    i0,\n    j0,\n    contextLabel = 0,\n    bit,\n    shift;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        bitmap.push(row); // duplicate previous row\n        continue;\n      }\n    }\n    row = new Uint8Array(row);\n    bitmap.push(row);\n    for (j = 0; j < width; j++) {\n      if (useskip && skip[i][j]) {\n        row[j] = 0;\n        continue;\n      }\n      // Are we in the middle of a scanline, so we can reuse contextLabel\n      // bits?\n      if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n        // If yes, we can just shift the bits that are reusable and only\n        // fetch the remaining ones.\n        contextLabel = (contextLabel << 1) & reuseMask;\n        for (k = 0; k < changingEntriesLength; k++) {\n          i0 = i + changingTemplateY[k];\n          j0 = j + changingTemplateX[k];\n          bit = bitmap[i0][j0];\n          if (bit) {\n            bit = changingTemplateBit[k];\n            contextLabel |= bit;\n          }\n        }\n      } else {\n        // compute the contextLabel from scratch\n        contextLabel = 0;\n        shift = templateLength - 1;\n        for (k = 0; k < templateLength; k++, shift--) {\n          j0 = j + templateX[k];\n          if (j0 >= 0 && j0 < width) {\n            i0 = i + templateY[k];\n            if (i0 >= 0) {\n              bit = bitmap[i0][j0];\n              if (bit) {\n                contextLabel |= bit << shift;\n              }\n            }\n          }\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n  return bitmap;\n}\n\n// 6.3.2 Generic Refinement Region Decoding Procedure\nfunction decodeRefinement(\n  width,\n  height,\n  templateIndex,\n  referenceBitmap,\n  offsetX,\n  offsetY,\n  prediction,\n  at,\n  decodingContext\n) {\n  let codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n    codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  const codingTemplateLength = codingTemplate.length;\n  const codingTemplateX = new Int32Array(codingTemplateLength);\n  const codingTemplateY = new Int32Array(codingTemplateLength);\n  let k;\n  for (k = 0; k < codingTemplateLength; k++) {\n    codingTemplateX[k] = codingTemplate[k].x;\n    codingTemplateY[k] = codingTemplate[k].y;\n  }\n\n  let referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n    referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  const referenceTemplateLength = referenceTemplate.length;\n  const referenceTemplateX = new Int32Array(referenceTemplateLength);\n  const referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n    referenceTemplateX[k] = referenceTemplate[k].x;\n    referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  const referenceWidth = referenceBitmap[0].length;\n  const referenceHeight = referenceBitmap.length;\n\n  const pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GR\");\n\n  let ltp = 0;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        throw new Jbig2Error(\"prediction is not supported\");\n      }\n    }\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let j = 0; j < width; j++) {\n      let i0, j0;\n      let contextLabel = 0;\n      for (k = 0; k < codingTemplateLength; k++) {\n        i0 = i + codingTemplateY[k];\n        j0 = j + codingTemplateX[k];\n        if (i0 < 0 || j0 < 0 || j0 >= width) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n        }\n      }\n      for (k = 0; k < referenceTemplateLength; k++) {\n        i0 = i + referenceTemplateY[k] - offsetY;\n        j0 = j + referenceTemplateX[k] - offsetX;\n        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.5.5 Decoding the symbol dictionary\nfunction decodeSymbolDictionary(\n  huffman,\n  refinement,\n  symbols,\n  numberOfNewSymbols,\n  numberOfExportedSymbols,\n  huffmanTables,\n  templateIndex,\n  at,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n  }\n\n  const newSymbols = [];\n  let currentHeight = 0;\n  let symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n  let tableB1, symbolWidths;\n  if (huffman) {\n    tableB1 = getStandardTable(1); // standard table B.1\n    symbolWidths = [];\n    symbolCodeLength = Math.max(symbolCodeLength, 1); // 6.5.8.2.3\n  }\n\n  while (newSymbols.length < numberOfNewSymbols) {\n    const deltaHeight = huffman\n      ? huffmanTables.tableDeltaHeight.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADH\", decoder); // 6.5.6\n    currentHeight += deltaHeight;\n    let currentWidth = 0,\n      totalWidth = 0;\n    const firstSymbol = huffman ? symbolWidths.length : 0;\n    while (true) {\n      const deltaWidth = huffman\n        ? huffmanTables.tableDeltaWidth.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADW\", decoder); // 6.5.7\n      if (deltaWidth === null) {\n        break; // OOB\n      }\n      currentWidth += deltaWidth;\n      totalWidth += currentWidth;\n      let bitmap;\n      if (refinement) {\n        // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n        const numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n        if (numberOfInstances > 1) {\n          bitmap = decodeTextRegion(\n            huffman,\n            refinement,\n            currentWidth,\n            currentHeight,\n            0,\n            numberOfInstances,\n            1, // strip size\n            symbols.concat(newSymbols),\n            symbolCodeLength,\n            0, // transposed\n            0, // ds offset\n            1, // top left 7.4.3.1.1\n            0, // OR operator\n            huffmanTables,\n            refinementTemplateIndex,\n            refinementAt,\n            decodingContext,\n            0,\n            huffmanInput\n          );\n        } else {\n          const symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n          const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n          const symbol =\n            symbolId < symbols.length\n              ? symbols[symbolId]\n              : newSymbols[symbolId - symbols.length];\n          bitmap = decodeRefinement(\n            currentWidth,\n            currentHeight,\n            refinementTemplateIndex,\n            symbol,\n            rdx,\n            rdy,\n            false,\n            refinementAt,\n            decodingContext\n          );\n        }\n        newSymbols.push(bitmap);\n      } else if (huffman) {\n        // Store only symbol width and decode a collective bitmap when the\n        // height class is done.\n        symbolWidths.push(currentWidth);\n      } else {\n        // 6.5.8.1 Direct-coded symbol bitmap\n        bitmap = decodeBitmap(\n          false,\n          currentWidth,\n          currentHeight,\n          templateIndex,\n          false,\n          null,\n          at,\n          decodingContext\n        );\n        newSymbols.push(bitmap);\n      }\n    }\n    if (huffman && !refinement) {\n      // 6.5.9 Height class collective bitmap\n      const bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n      huffmanInput.byteAlign();\n      let collectiveBitmap;\n      if (bitmapSize === 0) {\n        // Uncompressed collective bitmap\n        collectiveBitmap = readUncompressedBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight\n        );\n      } else {\n        // MMR collective bitmap\n        const originalEnd = huffmanInput.end;\n        const bitmapEnd = huffmanInput.position + bitmapSize;\n        huffmanInput.end = bitmapEnd;\n        collectiveBitmap = decodeMMRBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight,\n          false\n        );\n        huffmanInput.end = originalEnd;\n        huffmanInput.position = bitmapEnd;\n      }\n      const numberOfSymbolsDecoded = symbolWidths.length;\n      if (firstSymbol === numberOfSymbolsDecoded - 1) {\n        // collectiveBitmap is a single symbol.\n        newSymbols.push(collectiveBitmap);\n      } else {\n        // Divide collectiveBitmap into symbols.\n        let i,\n          y,\n          xMin = 0,\n          xMax,\n          bitmapWidth,\n          symbolBitmap;\n        for (i = firstSymbol; i < numberOfSymbolsDecoded; i++) {\n          bitmapWidth = symbolWidths[i];\n          xMax = xMin + bitmapWidth;\n          symbolBitmap = [];\n          for (y = 0; y < currentHeight; y++) {\n            symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n          }\n          newSymbols.push(symbolBitmap);\n          xMin = xMax;\n        }\n      }\n    }\n  }\n\n  // 6.5.10 Exported symbols\n  const exportedSymbols = [],\n    flags = [];\n  let currentFlag = false,\n    i,\n    ii;\n  const totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n    let runLength = huffman\n      ? tableB1.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAEX\", decoder);\n    while (runLength--) {\n      flags.push(currentFlag);\n    }\n    currentFlag = !currentFlag;\n  }\n  for (i = 0, ii = symbols.length; i < ii; i++) {\n    if (flags[i]) {\n      exportedSymbols.push(symbols[i]);\n    }\n  }\n  for (let j = 0; j < numberOfNewSymbols; i++, j++) {\n    if (flags[i]) {\n      exportedSymbols.push(newSymbols[j]);\n    }\n  }\n  return exportedSymbols;\n}\n\nfunction decodeTextRegion(\n  huffman,\n  refinement,\n  width,\n  height,\n  defaultPixelValue,\n  numberOfSymbolInstances,\n  stripSize,\n  inputSymbols,\n  symbolCodeLength,\n  transposed,\n  dsOffset,\n  referenceCorner,\n  combinationOperator,\n  huffmanTables,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  logStripSize,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  // Prepare bitmap\n  const bitmap = [];\n  let i, row;\n  for (i = 0; i < height; i++) {\n    row = new Uint8Array(width);\n    if (defaultPixelValue) {\n      for (let j = 0; j < width; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    bitmap.push(row);\n  }\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n\n  let stripT = huffman\n    ? -huffmanTables.tableDeltaT.decode(huffmanInput)\n    : -decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n  let firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n    const deltaT = huffman\n      ? huffmanTables.tableDeltaT.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n    stripT += deltaT;\n\n    const deltaFirstS = huffman\n      ? huffmanTables.tableFirstS.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAFS\", decoder); // 6.4.7\n    firstS += deltaFirstS;\n    let currentS = firstS;\n    do {\n      let currentT = 0; // 6.4.9\n      if (stripSize > 1) {\n        currentT = huffman\n          ? huffmanInput.readBits(logStripSize)\n          : decodeInteger(contextCache, \"IAIT\", decoder);\n      }\n      const t = stripSize * stripT + currentT;\n      const symbolId = huffman\n        ? huffmanTables.symbolIDTable.decode(huffmanInput)\n        : decodeIAID(contextCache, decoder, symbolCodeLength);\n      const applyRefinement =\n        refinement &&\n        (huffman\n          ? huffmanInput.readBit()\n          : decodeInteger(contextCache, \"IARI\", decoder));\n      let symbolBitmap = inputSymbols[symbolId];\n      let symbolWidth = symbolBitmap[0].length;\n      let symbolHeight = symbolBitmap.length;\n      if (applyRefinement) {\n        const rdw = decodeInteger(contextCache, \"IARDW\", decoder); // 6.4.11.1\n        const rdh = decodeInteger(contextCache, \"IARDH\", decoder); // 6.4.11.2\n        const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n        const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n        symbolWidth += rdw;\n        symbolHeight += rdh;\n        symbolBitmap = decodeRefinement(\n          symbolWidth,\n          symbolHeight,\n          refinementTemplateIndex,\n          symbolBitmap,\n          (rdw >> 1) + rdx,\n          (rdh >> 1) + rdy,\n          false,\n          refinementAt,\n          decodingContext\n        );\n      }\n\n      let increment = 0;\n      if (!transposed) {\n        if (referenceCorner > 1) {\n          currentS += symbolWidth - 1;\n        } else {\n          increment = symbolWidth - 1;\n        }\n      } else if (!(referenceCorner & 1)) {\n        currentS += symbolHeight - 1;\n      } else {\n        increment = symbolHeight - 1;\n      }\n\n      const offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n      const offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n      let s2, t2, symbolRow;\n      if (transposed) {\n        // Place Symbol Bitmap from T1,S1\n        for (s2 = 0; s2 < symbolHeight; s2++) {\n          row = bitmap[offsetS + s2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[s2];\n          // To ignore Parts of Symbol bitmap which goes\n          // outside bitmap region\n          const maxWidth = Math.min(width - offsetT, symbolWidth);\n          switch (combinationOperator) {\n            case 0: // OR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] |= symbolRow[t2];\n              }\n              break;\n            case 2: // XOR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] ^= symbolRow[t2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n      } else {\n        for (t2 = 0; t2 < symbolHeight; t2++) {\n          row = bitmap[offsetT + t2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[t2];\n          switch (combinationOperator) {\n            case 0: // OR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] |= symbolRow[s2];\n              }\n              break;\n            case 2: // XOR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] ^= symbolRow[s2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n      }\n      i++;\n      const deltaS = huffman\n        ? huffmanTables.tableDeltaS.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADS\", decoder); // 6.4.8\n      if (deltaS === null) {\n        break; // OOB\n      }\n      currentS += increment + deltaS + dsOffset;\n    } while (true);\n  }\n  return bitmap;\n}\n\nfunction decodePatternDictionary(\n  mmr,\n  patternWidth,\n  patternHeight,\n  maxPatternIndex,\n  template,\n  decodingContext\n) {\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: -patternWidth,\n      y: 0,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  const collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n  const collectiveBitmap = decodeBitmap(\n    mmr,\n    collectiveWidth,\n    patternHeight,\n    template,\n    false,\n    null,\n    at,\n    decodingContext\n  );\n  // Divide collective bitmap into patterns.\n  const patterns = [];\n  for (let i = 0; i <= maxPatternIndex; i++) {\n    const patternBitmap = [];\n    const xMin = patternWidth * i;\n    const xMax = xMin + patternWidth;\n    for (let y = 0; y < patternHeight; y++) {\n      patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n    }\n    patterns.push(patternBitmap);\n  }\n  return patterns;\n}\n\nfunction decodeHalftoneRegion(\n  mmr,\n  patterns,\n  template,\n  regionWidth,\n  regionHeight,\n  defaultPixelValue,\n  enableSkip,\n  combinationOperator,\n  gridWidth,\n  gridHeight,\n  gridOffsetX,\n  gridOffsetY,\n  gridVectorX,\n  gridVectorY,\n  decodingContext\n) {\n  const skip = null;\n  if (enableSkip) {\n    throw new Jbig2Error(\"skip is not supported\");\n  }\n  if (combinationOperator !== 0) {\n    throw new Jbig2Error(\n      `operator \"${combinationOperator}\" is not supported in halftone region`\n    );\n  }\n\n  // Prepare bitmap.\n  const regionBitmap = [];\n  let i, j, row;\n  for (i = 0; i < regionHeight; i++) {\n    row = new Uint8Array(regionWidth);\n    if (defaultPixelValue) {\n      for (j = 0; j < regionWidth; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    regionBitmap.push(row);\n  }\n\n  const numberOfPatterns = patterns.length;\n  const pattern0 = patterns[0];\n  const patternWidth = pattern0[0].length,\n    patternHeight = pattern0.length;\n  const bitsPerValue = log2(numberOfPatterns);\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  // Annex C. Gray-scale Image Decoding Procedure.\n  const grayScaleBitPlanes = [];\n  let mmrInput, bitmap;\n  if (mmr) {\n    // MMR bit planes are in one continuous stream. Only EOFB codes indicate\n    // the end of each bitmap, so EOFBs must be decoded.\n    mmrInput = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n  }\n  for (i = bitsPerValue - 1; i >= 0; i--) {\n    if (mmr) {\n      bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n    } else {\n      bitmap = decodeBitmap(\n        false,\n        gridWidth,\n        gridHeight,\n        template,\n        false,\n        skip,\n        at,\n        decodingContext\n      );\n    }\n    grayScaleBitPlanes[i] = bitmap;\n  }\n  // 6.6.5.2 Rendering the patterns.\n  let mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n  for (mg = 0; mg < gridHeight; mg++) {\n    for (ng = 0; ng < gridWidth; ng++) {\n      bit = 0;\n      patternIndex = 0;\n      for (j = bitsPerValue - 1; j >= 0; j--) {\n        bit ^= grayScaleBitPlanes[j][mg][ng]; // Gray decoding\n        patternIndex |= bit << j;\n      }\n      patternBitmap = patterns[patternIndex];\n      x = (gridOffsetX + mg * gridVectorY + ng * gridVectorX) >> 8;\n      y = (gridOffsetY + mg * gridVectorX - ng * gridVectorY) >> 8;\n      // Draw patternBitmap at (x, y).\n      if (\n        x >= 0 &&\n        x + patternWidth <= regionWidth &&\n        y >= 0 &&\n        y + patternHeight <= regionHeight\n      ) {\n        for (i = 0; i < patternHeight; i++) {\n          regionRow = regionBitmap[y + i];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionRow[x + j] |= patternRow[j];\n          }\n        }\n      } else {\n        let regionX, regionY;\n        for (i = 0; i < patternHeight; i++) {\n          regionY = y + i;\n          if (regionY < 0 || regionY >= regionHeight) {\n            continue;\n          }\n          regionRow = regionBitmap[regionY];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionX = x + j;\n            if (regionX >= 0 && regionX < regionWidth) {\n              regionRow[regionX] |= patternRow[j];\n            }\n          }\n        }\n      }\n    }\n  }\n  return regionBitmap;\n}\n\nfunction readSegmentHeader(data, start) {\n  const segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  const flags = data[start + 4];\n  const segmentType = flags & 0x3f;\n  if (!SegmentTypes[segmentType]) {\n    throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n  const pageAssociationFieldSize = !!(flags & 0x40);\n  const referredFlags = data[start + 5];\n  let referredToCount = (referredFlags >> 5) & 7;\n  const retainBits = [referredFlags & 31];\n  let position = start + 6;\n  if (referredFlags === 7) {\n    referredToCount = readUint32(data, position - 1) & 0x1fffffff;\n    position += 3;\n    let bytes = (referredToCount + 7) >> 3;\n    retainBits[0] = data[position++];\n    while (--bytes > 0) {\n      retainBits.push(data[position++]);\n    }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n    throw new Jbig2Error(\"invalid referred-to flags\");\n  }\n\n  segmentHeader.retainBits = retainBits;\n\n  let referredToSegmentNumberSize = 4;\n  if (segmentHeader.number <= 256) {\n    referredToSegmentNumberSize = 1;\n  } else if (segmentHeader.number <= 65536) {\n    referredToSegmentNumberSize = 2;\n  }\n  const referredTo = [];\n  let i, ii;\n  for (i = 0; i < referredToCount; i++) {\n    let number;\n    if (referredToSegmentNumberSize === 1) {\n      number = data[position];\n    } else if (referredToSegmentNumberSize === 2) {\n      number = readUint16(data, position);\n    } else {\n      number = readUint32(data, position);\n    }\n    referredTo.push(number);\n    position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n    segmentHeader.pageAssociation = data[position++];\n  } else {\n    segmentHeader.pageAssociation = readUint32(data, position);\n    position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n\n  if (segmentHeader.length === 0xffffffff) {\n    // 7.2.7 Segment data length, unknown segment length\n    if (segmentType === 38) {\n      // ImmediateGenericRegion\n      const genericRegionInfo = readRegionSegmentInformation(data, position);\n      const genericRegionSegmentFlags =\n        data[position + RegionSegmentInformationFieldLength];\n      const genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n      // searching for the segment end\n      const searchPatternLength = 6;\n      const searchPattern = new Uint8Array(searchPatternLength);\n      if (!genericRegionMmr) {\n        searchPattern[0] = 0xff;\n        searchPattern[1] = 0xac;\n      }\n      searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xff;\n      searchPattern[3] = (genericRegionInfo.height >> 16) & 0xff;\n      searchPattern[4] = (genericRegionInfo.height >> 8) & 0xff;\n      searchPattern[5] = genericRegionInfo.height & 0xff;\n      for (i = position, ii = data.length; i < ii; i++) {\n        let j = 0;\n        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n          j++;\n        }\n        if (j === searchPatternLength) {\n          segmentHeader.length = i + searchPatternLength;\n          break;\n        }\n      }\n      if (segmentHeader.length === 0xffffffff) {\n        throw new Jbig2Error(\"segment end was not found\");\n      }\n    } else {\n      throw new Jbig2Error(\"invalid unknown segment length\");\n    }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n}\n\nfunction readSegments(header, data, start, end) {\n  const segments = [];\n  let position = start;\n  while (position < end) {\n    const segmentHeader = readSegmentHeader(data, position);\n    position = segmentHeader.headerEnd;\n    const segment = {\n      header: segmentHeader,\n      data,\n    };\n    if (!header.randomAccess) {\n      segment.start = position;\n      position += segmentHeader.length;\n      segment.end = position;\n    }\n    segments.push(segment);\n    if (segmentHeader.type === 51) {\n      break; // end of file is found\n    }\n  }\n  if (header.randomAccess) {\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      segments[i].start = position;\n      position += segments[i].header.length;\n      segments[i].end = position;\n    }\n  }\n  return segments;\n}\n\n// 7.4.1 Region segment information field\nfunction readRegionSegmentInformation(data, start) {\n  return {\n    width: readUint32(data, start),\n    height: readUint32(data, start + 4),\n    x: readUint32(data, start + 8),\n    y: readUint32(data, start + 12),\n    combinationOperator: data[start + 16] & 7,\n  };\n}\nconst RegionSegmentInformationFieldLength = 17;\n\nfunction processSegment(segment, visitor) {\n  const header = segment.header;\n\n  const data = segment.data,\n    end = segment.end;\n  let position = segment.start;\n  let args, at, i, atLength;\n  switch (header.type) {\n    case 0: // SymbolDictionary\n      // 7.4.2 Symbol dictionary segment syntax\n      const dictionary = {};\n      const dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n      dictionary.huffman = !!(dictionaryFlags & 1);\n      dictionary.refinement = !!(dictionaryFlags & 2);\n      dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n      dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n      dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n      dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n      dictionary.template = (dictionaryFlags >> 10) & 3;\n      dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n      position += 2;\n      if (!dictionary.huffman) {\n        atLength = dictionary.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.at = at;\n      }\n      if (dictionary.refinement && !dictionary.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.refinementAt = at;\n      }\n      dictionary.numberOfExportedSymbols = readUint32(data, position);\n      position += 4;\n      dictionary.numberOfNewSymbols = readUint32(data, position);\n      position += 4;\n      args = [\n        dictionary,\n        header.number,\n        header.referredTo,\n        data,\n        position,\n        end,\n      ];\n      break;\n    case 6: // ImmediateTextRegion\n    case 7: // ImmediateLosslessTextRegion\n      const textRegion = {};\n      textRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const textRegionSegmentFlags = readUint16(data, position);\n      position += 2;\n      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n      textRegion.logStripSize = (textRegionSegmentFlags >> 2) & 3;\n      textRegion.stripSize = 1 << textRegion.logStripSize;\n      textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n      textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n      textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n      textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n      textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n      if (textRegion.huffman) {\n        const textRegionHuffmanFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n        textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n        textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n        textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n        textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n        textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n        textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n        textRegion.huffmanRefinementSizeSelector = !!(\n          textRegionHuffmanFlags & 0x4000\n        );\n      }\n      if (textRegion.refinement && !textRegion.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        textRegion.refinementAt = at;\n      }\n      textRegion.numberOfSymbolInstances = readUint32(data, position);\n      position += 4;\n      args = [textRegion, header.referredTo, data, position, end];\n      break;\n    case 16: // PatternDictionary\n      // 7.4.4. Pattern dictionary segment syntax\n      const patternDictionary = {};\n      const patternDictionaryFlags = data[position++];\n      patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n      patternDictionary.template = (patternDictionaryFlags >> 1) & 3;\n      patternDictionary.patternWidth = data[position++];\n      patternDictionary.patternHeight = data[position++];\n      patternDictionary.maxPatternIndex = readUint32(data, position);\n      position += 4;\n      args = [patternDictionary, header.number, data, position, end];\n      break;\n    case 22: // ImmediateHalftoneRegion\n    case 23: // ImmediateLosslessHalftoneRegion\n      // 7.4.5 Halftone region segment syntax\n      const halftoneRegion = {};\n      halftoneRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const halftoneRegionFlags = data[position++];\n      halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n      halftoneRegion.template = (halftoneRegionFlags >> 1) & 3;\n      halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n      halftoneRegion.combinationOperator = (halftoneRegionFlags >> 4) & 7;\n      halftoneRegion.defaultPixelValue = (halftoneRegionFlags >> 7) & 1;\n      halftoneRegion.gridWidth = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridHeight = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridOffsetX = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridOffsetY = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridVectorX = readUint16(data, position);\n      position += 2;\n      halftoneRegion.gridVectorY = readUint16(data, position);\n      position += 2;\n      args = [halftoneRegion, header.referredTo, data, position, end];\n      break;\n    case 38: // ImmediateGenericRegion\n    case 39: // ImmediateLosslessGenericRegion\n      const genericRegion = {};\n      genericRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const genericRegionSegmentFlags = data[position++];\n      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n      genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n      if (!genericRegion.mmr) {\n        atLength = genericRegion.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        genericRegion.at = at;\n      }\n      args = [genericRegion, data, position, end];\n      break;\n    case 48: // PageInformation\n      const pageInfo = {\n        width: readUint32(data, position),\n        height: readUint32(data, position + 4),\n        resolutionX: readUint32(data, position + 8),\n        resolutionY: readUint32(data, position + 12),\n      };\n      if (pageInfo.height === 0xffffffff) {\n        delete pageInfo.height;\n      }\n      const pageSegmentFlags = data[position + 16];\n      readUint16(data, position + 17); // pageStripingInformation\n      pageInfo.lossless = !!(pageSegmentFlags & 1);\n      pageInfo.refinement = !!(pageSegmentFlags & 2);\n      pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n      pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n      args = [pageInfo];\n      break;\n    case 49: // EndOfPage\n      break;\n    case 50: // EndOfStripe\n      break;\n    case 51: // EndOfFile\n      break;\n    case 53: // Tables\n      args = [header.number, data, position, end];\n      break;\n    case 62: // 7.4.15 defines 2 extension types which\n      // are comments and can be ignored.\n      break;\n    default:\n      throw new Jbig2Error(\n        `segment type ${header.typeName}(${header.type}) is not implemented`\n      );\n  }\n  const callbackName = \"on\" + header.typeName;\n  if (callbackName in visitor) {\n    // eslint-disable-next-line prefer-spread\n    visitor[callbackName].apply(visitor, args);\n  }\n}\n\nfunction processSegments(segments, visitor) {\n  for (let i = 0, ii = segments.length; i < ii; i++) {\n    processSegment(segments[i], visitor);\n  }\n}\n\nfunction parseJbig2Chunks(chunks) {\n  const visitor = new SimpleSegmentVisitor();\n  for (let i = 0, ii = chunks.length; i < ii; i++) {\n    const chunk = chunks[i];\n    const segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n    processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n}\n\nfunction parseJbig2(data) {\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"IMAGE_DECODERS\")) {\n    throw new Error(\"Not implemented: parseJbig2\");\n  }\n  const end = data.length;\n  let position = 0;\n\n  if (\n    data[position] !== 0x97 ||\n    data[position + 1] !== 0x4a ||\n    data[position + 2] !== 0x42 ||\n    data[position + 3] !== 0x32 ||\n    data[position + 4] !== 0x0d ||\n    data[position + 5] !== 0x0a ||\n    data[position + 6] !== 0x1a ||\n    data[position + 7] !== 0x0a\n  ) {\n    throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n  }\n\n  const header = Object.create(null);\n  position += 8;\n  const flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n    header.numberOfPages = readUint32(data, position);\n    position += 4;\n  }\n\n  const segments = readSegments(header, data, position, end);\n  const visitor = new SimpleSegmentVisitor();\n  processSegments(segments, visitor);\n\n  const { width, height } = visitor.currentPageInfo;\n  const bitPacked = visitor.buffer;\n  const imgData = new Uint8ClampedArray(width * height);\n  let q = 0,\n    k = 0;\n  for (let i = 0; i < height; i++) {\n    let mask = 0,\n      buffer;\n    for (let j = 0; j < width; j++) {\n      if (!mask) {\n        mask = 128;\n        buffer = bitPacked[k++];\n      }\n      imgData[q++] = buffer & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  return { imgData, width, height };\n}\n\nclass SimpleSegmentVisitor {\n  onPageInformation(info) {\n    this.currentPageInfo = info;\n    const rowSize = (info.width + 7) >> 3;\n    const buffer = new Uint8ClampedArray(rowSize * info.height);\n    // The contents of ArrayBuffers are initialized to 0.\n    // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n    if (info.defaultPixelValue) {\n      buffer.fill(0xff);\n    }\n    this.buffer = buffer;\n  }\n\n  drawBitmap(regionInfo, bitmap) {\n    const pageInfo = this.currentPageInfo;\n    const width = regionInfo.width,\n      height = regionInfo.height;\n    const rowSize = (pageInfo.width + 7) >> 3;\n    const combinationOperator = pageInfo.combinationOperatorOverride\n      ? regionInfo.combinationOperator\n      : pageInfo.combinationOperator;\n    const buffer = this.buffer;\n    const mask0 = 128 >> (regionInfo.x & 7);\n    let offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n    let i, j, mask, offset;\n    switch (combinationOperator) {\n      case 0: // OR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] |= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      case 2: // XOR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] ^= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      default:\n        throw new Jbig2Error(\n          `operator ${combinationOperator} is not supported`\n        );\n    }\n  }\n\n  onImmediateGenericRegion(region, data, start, end) {\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeBitmap(\n      region.mmr,\n      regionInfo.width,\n      regionInfo.height,\n      region.template,\n      region.prediction,\n      null,\n      region.at,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessGenericRegion() {\n    this.onImmediateGenericRegion(...arguments);\n  }\n\n  onSymbolDictionary(\n    dictionary,\n    currentSegment,\n    referredSegments,\n    data,\n    start,\n    end\n  ) {\n    let huffmanTables, huffmanInput;\n    if (dictionary.huffman) {\n      huffmanTables = getSymbolDictionaryHuffmanTables(\n        dictionary,\n        referredSegments,\n        this.customTables\n      );\n      huffmanInput = new Reader(data, start, end);\n    }\n\n    // Combines exported symbols from all referred segments\n    let symbols = this.symbols;\n    if (!symbols) {\n      this.symbols = symbols = {};\n    }\n\n    const inputSymbols = [];\n    for (const referredSegment of referredSegments) {\n      const referredSymbols = symbols[referredSegment];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols.push(...referredSymbols);\n      }\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    symbols[currentSegment] = decodeSymbolDictionary(\n      dictionary.huffman,\n      dictionary.refinement,\n      inputSymbols,\n      dictionary.numberOfNewSymbols,\n      dictionary.numberOfExportedSymbols,\n      huffmanTables,\n      dictionary.template,\n      dictionary.at,\n      dictionary.refinementTemplate,\n      dictionary.refinementAt,\n      decodingContext,\n      huffmanInput\n    );\n  }\n\n  onImmediateTextRegion(region, referredSegments, data, start, end) {\n    const regionInfo = region.info;\n    let huffmanTables, huffmanInput;\n\n    // Combines exported symbols from all referred segments\n    const symbols = this.symbols;\n    const inputSymbols = [];\n    for (const referredSegment of referredSegments) {\n      const referredSymbols = symbols[referredSegment];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols.push(...referredSymbols);\n      }\n    }\n    const symbolCodeLength = log2(inputSymbols.length);\n    if (region.huffman) {\n      huffmanInput = new Reader(data, start, end);\n      huffmanTables = getTextRegionHuffmanTables(\n        region,\n        referredSegments,\n        this.customTables,\n        inputSymbols.length,\n        huffmanInput\n      );\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeTextRegion(\n      region.huffman,\n      region.refinement,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.numberOfSymbolInstances,\n      region.stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      region.transposed,\n      region.dsOffset,\n      region.referenceCorner,\n      region.combinationOperator,\n      huffmanTables,\n      region.refinementTemplate,\n      region.refinementAt,\n      decodingContext,\n      region.logStripSize,\n      huffmanInput\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessTextRegion() {\n    this.onImmediateTextRegion(...arguments);\n  }\n\n  onPatternDictionary(dictionary, currentSegment, data, start, end) {\n    let patterns = this.patterns;\n    if (!patterns) {\n      this.patterns = patterns = {};\n    }\n    const decodingContext = new DecodingContext(data, start, end);\n    patterns[currentSegment] = decodePatternDictionary(\n      dictionary.mmr,\n      dictionary.patternWidth,\n      dictionary.patternHeight,\n      dictionary.maxPatternIndex,\n      dictionary.template,\n      decodingContext\n    );\n  }\n\n  onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n    // HalftoneRegion refers to exactly one PatternDictionary.\n    const patterns = this.patterns[referredSegments[0]];\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeHalftoneRegion(\n      region.mmr,\n      patterns,\n      region.template,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.enableSkip,\n      region.combinationOperator,\n      region.gridWidth,\n      region.gridHeight,\n      region.gridOffsetX,\n      region.gridOffsetY,\n      region.gridVectorX,\n      region.gridVectorY,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessHalftoneRegion() {\n    this.onImmediateHalftoneRegion(...arguments);\n  }\n\n  onTables(currentSegment, data, start, end) {\n    let customTables = this.customTables;\n    if (!customTables) {\n      this.customTables = customTables = {};\n    }\n    customTables[currentSegment] = decodeTablesSegment(data, start, end);\n  }\n}\n\nclass HuffmanLine {\n  constructor(lineData) {\n    if (lineData.length === 2) {\n      // OOB line.\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      // Normal, upper range or lower range line.\n      // Upper range lines are processed like normal lines.\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === \"lower\";\n    }\n  }\n}\n\nclass HuffmanTreeNode {\n  constructor(line) {\n    this.children = [];\n    if (line) {\n      // Leaf node\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      // Intermediate or root node\n      this.isLeaf = false;\n    }\n  }\n\n  buildTree(line, shift) {\n    const bit = (line.prefixCode >> shift) & 1;\n    if (shift <= 0) {\n      // Create a leaf node.\n      this.children[bit] = new HuffmanTreeNode(line);\n    } else {\n      // Create an intermediate node and continue recursively.\n      let node = this.children[bit];\n      if (!node) {\n        this.children[bit] = node = new HuffmanTreeNode(null);\n      }\n      node.buildTree(line, shift - 1);\n    }\n  }\n\n  decodeNode(reader) {\n    if (this.isLeaf) {\n      if (this.isOOB) {\n        return null;\n      }\n      const htOffset = reader.readBits(this.rangeLength);\n      return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n    }\n    const node = this.children[reader.readBit()];\n    if (!node) {\n      throw new Jbig2Error(\"invalid Huffman data\");\n    }\n    return node.decodeNode(reader);\n  }\n}\n\nclass HuffmanTable {\n  constructor(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    // Create Huffman tree.\n    this.rootNode = new HuffmanTreeNode(null);\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      const line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n\n  decode(reader) {\n    return this.rootNode.decodeNode(reader);\n  }\n\n  assignPrefixCodes(lines) {\n    // Annex B.3 Assigning the prefix codes.\n    const linesLength = lines.length;\n    let prefixLengthMax = 0;\n    for (let i = 0; i < linesLength; i++) {\n      prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n    }\n\n    const histogram = new Uint32Array(prefixLengthMax + 1);\n    for (let i = 0; i < linesLength; i++) {\n      histogram[lines[i].prefixLength]++;\n    }\n    let currentLength = 1,\n      firstCode = 0,\n      currentCode,\n      currentTemp,\n      line;\n    histogram[0] = 0;\n\n    while (currentLength <= prefixLengthMax) {\n      firstCode = (firstCode + histogram[currentLength - 1]) << 1;\n      currentCode = firstCode;\n      currentTemp = 0;\n      while (currentTemp < linesLength) {\n        line = lines[currentTemp];\n        if (line.prefixLength === currentLength) {\n          line.prefixCode = currentCode;\n          currentCode++;\n        }\n        currentTemp++;\n      }\n      currentLength++;\n    }\n  }\n}\n\nfunction decodeTablesSegment(data, start, end) {\n  // Decodes a Tables segment, i.e., a custom Huffman table.\n  // Annex B.2 Code table structure.\n  const flags = data[start];\n  const lowestValue = readUint32(data, start + 1) & 0xffffffff;\n  const highestValue = readUint32(data, start + 5) & 0xffffffff;\n  const reader = new Reader(data, start + 9, end);\n\n  const prefixSizeBits = ((flags >> 1) & 7) + 1;\n  const rangeSizeBits = ((flags >> 4) & 7) + 1;\n  const lines = [];\n  let prefixLength,\n    rangeLength,\n    currentRangeLow = lowestValue;\n\n  // Normal table lines\n  do {\n    prefixLength = reader.readBits(prefixSizeBits);\n    rangeLength = reader.readBits(rangeSizeBits);\n    lines.push(\n      new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0])\n    );\n    currentRangeLow += 1 << rangeLength;\n  } while (currentRangeLow < highestValue);\n\n  // Lower range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"]));\n\n  // Upper range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n  if (flags & 1) {\n    // Out-of-band table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([prefixLength, 0]));\n  }\n\n  return new HuffmanTable(lines, false);\n}\n\nconst standardTablesCache = {};\n\nfunction getStandardTable(number) {\n  // Annex B.5 Standard Huffman tables.\n  let table = standardTablesCache[number];\n  if (table) {\n    return table;\n  }\n  let lines;\n  switch (number) {\n    case 1:\n      lines = [\n        [0, 1, 4, 0x0],\n        [16, 2, 8, 0x2],\n        [272, 3, 16, 0x6],\n        [65808, 3, 32, 0x7], // upper\n      ];\n      break;\n    case 2:\n      lines = [\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [75, 6, 32, 0x3e], // upper\n        [6, 0x3f], // OOB\n      ];\n      break;\n    case 3:\n      lines = [\n        [-256, 8, 8, 0xfe],\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [-257, 8, 32, 0xff, \"lower\"],\n        [75, 7, 32, 0x7e], // upper\n        [6, 0x3e], // OOB\n      ];\n      break;\n    case 4:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [76, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 5:\n      lines = [\n        [-255, 7, 8, 0x7e],\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [-256, 7, 32, 0x7f, \"lower\"],\n        [76, 6, 32, 0x3e], // upper\n      ];\n      break;\n    case 6:\n      lines = [\n        [-2048, 5, 10, 0x1c],\n        [-1024, 4, 9, 0x8],\n        [-512, 4, 8, 0x9],\n        [-256, 4, 7, 0xa],\n        [-128, 5, 6, 0x1d],\n        [-64, 5, 5, 0x1e],\n        [-32, 4, 5, 0xb],\n        [0, 2, 7, 0x0],\n        [128, 3, 7, 0x2],\n        [256, 3, 8, 0x3],\n        [512, 4, 9, 0xc],\n        [1024, 4, 10, 0xd],\n        [-2049, 6, 32, 0x3e, \"lower\"],\n        [2048, 6, 32, 0x3f], // upper\n      ];\n      break;\n    case 7:\n      lines = [\n        [-1024, 4, 9, 0x8],\n        [-512, 3, 8, 0x0],\n        [-256, 4, 7, 0x9],\n        [-128, 5, 6, 0x1a],\n        [-64, 5, 5, 0x1b],\n        [-32, 4, 5, 0xa],\n        [0, 4, 5, 0xb],\n        [32, 5, 5, 0x1c],\n        [64, 5, 6, 0x1d],\n        [128, 4, 7, 0xc],\n        [256, 3, 8, 0x1],\n        [512, 3, 9, 0x2],\n        [1024, 3, 10, 0x3],\n        [-1025, 5, 32, 0x1e, \"lower\"],\n        [2048, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 8:\n      lines = [\n        [-15, 8, 3, 0xfc],\n        [-7, 9, 1, 0x1fc],\n        [-5, 8, 1, 0xfd],\n        [-3, 9, 0, 0x1fd],\n        [-2, 7, 0, 0x7c],\n        [-1, 4, 0, 0xa],\n        [0, 2, 1, 0x0],\n        [2, 5, 0, 0x1a],\n        [3, 6, 0, 0x3a],\n        [4, 3, 4, 0x4],\n        [20, 6, 1, 0x3b],\n        [22, 4, 4, 0xb],\n        [38, 4, 5, 0xc],\n        [70, 5, 6, 0x1b],\n        [134, 5, 7, 0x1c],\n        [262, 6, 7, 0x3c],\n        [390, 7, 8, 0x7d],\n        [646, 6, 10, 0x3d],\n        [-16, 9, 32, 0x1fe, \"lower\"],\n        [1670, 9, 32, 0x1ff], // upper\n        [2, 0x1], // OOB\n      ];\n      break;\n    case 9:\n      lines = [\n        [-31, 8, 4, 0xfc],\n        [-15, 9, 2, 0x1fc],\n        [-11, 8, 2, 0xfd],\n        [-7, 9, 1, 0x1fd],\n        [-5, 7, 1, 0x7c],\n        [-3, 4, 1, 0xa],\n        [-1, 3, 1, 0x2],\n        [1, 3, 1, 0x3],\n        [3, 5, 1, 0x1a],\n        [5, 6, 1, 0x3a],\n        [7, 3, 5, 0x4],\n        [39, 6, 2, 0x3b],\n        [43, 4, 5, 0xb],\n        [75, 4, 6, 0xc],\n        [139, 5, 7, 0x1b],\n        [267, 5, 8, 0x1c],\n        [523, 6, 8, 0x3c],\n        [779, 7, 9, 0x7d],\n        [1291, 6, 11, 0x3d],\n        [-32, 9, 32, 0x1fe, \"lower\"],\n        [3339, 9, 32, 0x1ff], // upper\n        [2, 0x0], // OOB\n      ];\n      break;\n    case 10:\n      lines = [\n        [-21, 7, 4, 0x7a],\n        [-5, 8, 0, 0xfc],\n        [-4, 7, 0, 0x7b],\n        [-3, 5, 0, 0x18],\n        [-2, 2, 2, 0x0],\n        [2, 5, 0, 0x19],\n        [3, 6, 0, 0x36],\n        [4, 7, 0, 0x7c],\n        [5, 8, 0, 0xfd],\n        [6, 2, 6, 0x1],\n        [70, 5, 5, 0x1a],\n        [102, 6, 5, 0x37],\n        [134, 6, 6, 0x38],\n        [198, 6, 7, 0x39],\n        [326, 6, 8, 0x3a],\n        [582, 6, 9, 0x3b],\n        [1094, 6, 10, 0x3c],\n        [2118, 7, 11, 0x7d],\n        [-22, 8, 32, 0xfe, \"lower\"],\n        [4166, 8, 32, 0xff], // upper\n        [2, 0x2], // OOB\n      ];\n      break;\n    case 11:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 1, 0x2],\n        [4, 4, 0, 0xc],\n        [5, 4, 1, 0xd],\n        [7, 5, 1, 0x1c],\n        [9, 5, 2, 0x1d],\n        [13, 6, 2, 0x3c],\n        [17, 7, 2, 0x7a],\n        [21, 7, 3, 0x7b],\n        [29, 7, 4, 0x7c],\n        [45, 7, 5, 0x7d],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 12:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 1, 0x6],\n        [5, 5, 0, 0x1c],\n        [6, 5, 1, 0x1d],\n        [8, 6, 1, 0x3c],\n        [10, 7, 0, 0x7a],\n        [11, 7, 1, 0x7b],\n        [13, 7, 2, 0x7c],\n        [17, 7, 3, 0x7d],\n        [25, 7, 4, 0x7e],\n        [41, 8, 5, 0xfe],\n        [73, 8, 32, 0xff], // upper\n      ];\n      break;\n    case 13:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 3, 0, 0x4],\n        [3, 4, 0, 0xc],\n        [4, 5, 0, 0x1c],\n        [5, 4, 1, 0xd],\n        [7, 3, 3, 0x5],\n        [15, 6, 1, 0x3a],\n        [17, 6, 2, 0x3b],\n        [21, 6, 3, 0x3c],\n        [29, 6, 4, 0x3d],\n        [45, 6, 5, 0x3e],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 14:\n      lines = [\n        [-2, 3, 0, 0x4],\n        [-1, 3, 0, 0x5],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x6],\n        [2, 3, 0, 0x7],\n      ];\n      break;\n    case 15:\n      lines = [\n        [-24, 7, 4, 0x7c],\n        [-8, 6, 2, 0x3c],\n        [-4, 5, 1, 0x1c],\n        [-2, 4, 0, 0xc],\n        [-1, 3, 0, 0x4],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x5],\n        [2, 4, 0, 0xd],\n        [3, 5, 1, 0x1d],\n        [5, 6, 2, 0x3d],\n        [9, 7, 4, 0x7d],\n        [-25, 7, 32, 0x7e, \"lower\"],\n        [25, 7, 32, 0x7f], // upper\n      ];\n      break;\n    default:\n      throw new Jbig2Error(`standard table B.${number} does not exist`);\n  }\n\n  for (let i = 0, ii = lines.length; i < ii; i++) {\n    lines[i] = new HuffmanLine(lines[i]);\n  }\n  table = new HuffmanTable(lines, true);\n  standardTablesCache[number] = table;\n  return table;\n}\n\nclass Reader {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n\n  readBit() {\n    if (this.shift < 0) {\n      if (this.position >= this.end) {\n        throw new Jbig2Error(\"end of data while reading bit\");\n      }\n      this.currentByte = this.data[this.position++];\n      this.shift = 7;\n    }\n    const bit = (this.currentByte >> this.shift) & 1;\n    this.shift--;\n    return bit;\n  }\n\n  readBits(numBits) {\n    let result = 0,\n      i;\n    for (i = numBits - 1; i >= 0; i--) {\n      result |= this.readBit() << i;\n    }\n    return result;\n  }\n\n  byteAlign() {\n    this.shift = -1;\n  }\n\n  next() {\n    if (this.position >= this.end) {\n      return -1;\n    }\n    return this.data[this.position++];\n  }\n}\n\nfunction getCustomHuffmanTable(index, referredTo, customTables) {\n  // Returns a Tables segment that has been earlier decoded.\n  // See 7.4.2.1.6 (symbol dictionary) or 7.4.3.1.6 (text region).\n  let currentIndex = 0;\n  for (let i = 0, ii = referredTo.length; i < ii; i++) {\n    const table = customTables[referredTo[i]];\n    if (table) {\n      if (index === currentIndex) {\n        return table;\n      }\n      currentIndex++;\n    }\n  }\n  throw new Jbig2Error(\"can't find custom Huffman table\");\n}\n\nfunction getTextRegionHuffmanTables(\n  textRegion,\n  referredTo,\n  customTables,\n  numberOfSymbols,\n  reader\n) {\n  // 7.4.3.1.7 Symbol ID Huffman table decoding\n\n  // Read code lengths for RUNCODEs 0...34.\n  const codes = [];\n  for (let i = 0; i <= 34; i++) {\n    const codeLength = reader.readBits(4);\n    codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n  }\n  // Assign Huffman codes for RUNCODEs.\n  const runCodesTable = new HuffmanTable(codes, false);\n\n  // Read a Huffman code using the assignment above.\n  // Interpret the RUNCODE codes and the additional bits (if any).\n  codes.length = 0;\n  for (let i = 0; i < numberOfSymbols; ) {\n    const codeLength = runCodesTable.decode(reader);\n    if (codeLength >= 32) {\n      let repeatedLength, numberOfRepeats, j;\n      switch (codeLength) {\n        case 32:\n          if (i === 0) {\n            throw new Jbig2Error(\"no previous value in symbol ID table\");\n          }\n          numberOfRepeats = reader.readBits(2) + 3;\n          repeatedLength = codes[i - 1].prefixLength;\n          break;\n        case 33:\n          numberOfRepeats = reader.readBits(3) + 3;\n          repeatedLength = 0;\n          break;\n        case 34:\n          numberOfRepeats = reader.readBits(7) + 11;\n          repeatedLength = 0;\n          break;\n        default:\n          throw new Jbig2Error(\"invalid code length in symbol ID table\");\n      }\n      for (j = 0; j < numberOfRepeats; j++) {\n        codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n        i++;\n      }\n    } else {\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n      i++;\n    }\n  }\n  reader.byteAlign();\n  const symbolIDTable = new HuffmanTable(codes, false);\n\n  // 7.4.3.1.6 Text region segment Huffman table selection\n\n  let customIndex = 0,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT;\n\n  switch (textRegion.huffmanFS) {\n    case 0:\n    case 1:\n      tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n      break;\n    case 3:\n      tableFirstS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman FS selector\");\n  }\n\n  switch (textRegion.huffmanDS) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n      break;\n    case 3:\n      tableDeltaS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DS selector\");\n  }\n\n  switch (textRegion.huffmanDT) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n      break;\n    case 3:\n      tableDeltaT = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DT selector\");\n  }\n\n  if (textRegion.refinement) {\n    // Load tables RDW, RDH, RDX and RDY.\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  return {\n    symbolIDTable,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT,\n  };\n}\n\nfunction getSymbolDictionaryHuffmanTables(\n  dictionary,\n  referredTo,\n  customTables\n) {\n  // 7.4.2.1.6 Symbol dictionary segment Huffman table selection\n\n  let customIndex = 0,\n    tableDeltaHeight,\n    tableDeltaWidth;\n  switch (dictionary.huffmanDHSelector) {\n    case 0:\n    case 1:\n      tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n      break;\n    case 3:\n      tableDeltaHeight = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DH selector\");\n  }\n\n  switch (dictionary.huffmanDWSelector) {\n    case 0:\n    case 1:\n      tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n      break;\n    case 3:\n      tableDeltaWidth = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DW selector\");\n  }\n\n  let tableBitmapSize, tableAggregateInstances;\n  if (dictionary.bitmapSizeSelector) {\n    tableBitmapSize = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n    customIndex++;\n  } else {\n    tableBitmapSize = getStandardTable(1);\n  }\n\n  if (dictionary.aggregationInstancesSelector) {\n    tableAggregateInstances = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n  } else {\n    tableAggregateInstances = getStandardTable(1);\n  }\n\n  return {\n    tableDeltaHeight,\n    tableDeltaWidth,\n    tableBitmapSize,\n    tableAggregateInstances,\n  };\n}\n\nfunction readUncompressedBitmap(reader, width, height) {\n  const bitmap = [];\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let x = 0; x < width; x++) {\n      row[x] = reader.readBit();\n    }\n    reader.byteAlign();\n  }\n  return bitmap;\n}\n\nfunction decodeMMRBitmap(input, width, height, endOfBlock) {\n  // MMR is the same compression algorithm as the PDF filter\n  // CCITTFaxDecode with /K -1.\n  const params = {\n    K: -1,\n    Columns: width,\n    Rows: height,\n    BlackIs1: true,\n    EndOfBlock: endOfBlock,\n  };\n  const decoder = new CCITTFaxDecoder(input, params);\n  const bitmap = [];\n  let currentByte,\n    eof = false;\n\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    let shift = -1;\n    for (let x = 0; x < width; x++) {\n      if (shift < 0) {\n        currentByte = decoder.readNextChar();\n        if (currentByte === -1) {\n          // Set the rest of the bits to zero.\n          currentByte = 0;\n          eof = true;\n        }\n        shift = 7;\n      }\n      row[x] = (currentByte >> shift) & 1;\n      shift--;\n    }\n  }\n\n  if (endOfBlock && !eof) {\n    // Read until EOFB has been consumed.\n    const lookForEOFLimit = 5;\n    for (let i = 0; i < lookForEOFLimit; i++) {\n      if (decoder.readNextChar() === -1) {\n        break;\n      }\n    }\n  }\n\n  return bitmap;\n}\n\nclass Jbig2Image {\n  parseChunks(chunks) {\n    return parseJbig2Chunks(chunks);\n  }\n\n  parse(data) {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      throw new Error(\"Not implemented: Jbig2Image.parse\");\n    }\n    const { imgData, width, height } = parseJbig2(data);\n    this.width = width;\n    this.height = height;\n    return imgData;\n  }\n}\n\nexport { Jbig2Image };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest, ImageKind } from \"./util.js\";\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n\n  return null;\n}\n\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false,\n}) {\n  const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode\n    ? [nonBlackColor, black]\n    : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n  return { srcPos, destPos };\n}\n\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n  if (FeatureTest.isLittleEndian) {\n    // It's a way faster to do the shuffle manually instead of working\n    // component by component with some Uint8 arrays.\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R2B1G1R1\n      const s2 = src32[i + 1]; // G3R3B2G2\n      const s3 = src32[i + 2]; // B4G4R4B3\n\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = (s1 >>> 24) | (s2 << 8) | 0xff000000;\n      dest[destPos + 2] = (s2 >>> 16) | (s3 << 16) | 0xff000000;\n      dest[destPos + 3] = (s3 >>> 8) | 0xff000000;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        src[j] | (src[j + 1] << 8) | (src[j + 2] << 16) | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R1G1B1R2\n      const s2 = src32[i + 1]; // G2B2R3G3\n      const s3 = src32[i + 2]; // B3R4G4B4\n\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = (s1 << 24) | (s2 >>> 8) | 0xff;\n      dest[destPos + 2] = (s2 << 16) | (s3 >>> 16) | 0xff;\n      dest[destPos + 3] = (s3 << 8) | 0xff;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        (src[j] << 24) | (src[j + 1] << 16) | (src[j + 2] << 8) | 0xff;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x10101) | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x1010100) | 0x000000ff;\n    }\n  }\n}\n\nexport { convertBlackAndWhiteToRGBA, convertToRGBA, grayToRGBA };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\nimport { grayToRGBA } from \"../shared/image_utils.js\";\nimport { readUint16 } from \"./core_utils.js\";\n\nclass JpegError extends BaseException {\n  constructor(msg) {\n    super(`JPEG error: ${msg}`, \"JpegError\");\n  }\n}\n\nclass DNLMarkerError extends BaseException {\n  constructor(message, scanLines) {\n    super(message, \"DNLMarkerError\");\n    this.scanLines = scanLines;\n  }\n}\n\nclass EOIMarkerError extends BaseException {\n  constructor(msg) {\n    super(msg, \"EOIMarkerError\");\n  }\n}\n\n/**\n * This code was forked from https://github.com/notmasteryet/jpgjs.\n * The original version was created by GitHub user notmasteryet.\n *\n * - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n *   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n * - The JFIF specification can be found in the JPEG File Interchange Format\n *   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n * - The Adobe Application-Specific JPEG markers in the\n *   Supporting the DCT Filters in PostScript Level 2, Technical Note #5116\n *   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n */\n\n// prettier-ignore\nconst dctZigZag = new Uint8Array([\n   0,\n   1,  8,\n  16,  9,  2,\n   3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n   5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13,  6,\n   7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896; // sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0,\n    i,\n    j,\n    length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    length--;\n  }\n  const code = [{ children: [], index: 0 }];\n  let p = code[0],\n    q;\n  for (i = 0; i < length; i++) {\n    for (j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push((q = { children: [], index: 0 }));\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push((q = { children: [], index: 0 }));\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n}\n\nfunction decodeScan(\n  data,\n  offset,\n  frame,\n  components,\n  resetInterval,\n  spectralStart,\n  spectralEnd,\n  successivePrev,\n  successive,\n  parseDNLMarker = false\n) {\n  const mcusPerLine = frame.mcusPerLine;\n  const progressive = frame.progressive;\n\n  const startOffset = offset;\n  let bitsData = 0,\n    bitsCount = 0;\n\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xff) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        if (nextByte === /* DNL = */ 0xdc && parseDNLMarker) {\n          offset += 2; // Skip marker length.\n\n          const scanLines = readUint16(data, offset);\n          offset += 2;\n          if (scanLines > 0 && scanLines !== frame.scanLines) {\n            throw new DNLMarkerError(\n              \"Found DNL marker (0xFFDC) while parsing scan data\",\n              scanLines\n            );\n          }\n        } else if (nextByte === /* EOI = */ 0xd9) {\n          if (parseDNLMarker) {\n            // NOTE: only 8-bit JPEG images are supported in this decoder.\n            const maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n            // Heuristic to attempt to handle corrupt JPEG images with too\n            // large `scanLines` parameter, by falling back to the currently\n            // parsed number of scanLines when it's at least (approximately)\n            // one \"half\" order of magnitude smaller than expected (fixes\n            // issue10880.pdf, issue10989.pdf, issue15492.pdf).\n            if (\n              maybeScanLines > 0 &&\n              Math.round(frame.scanLines / maybeScanLines) >= 5\n            ) {\n              throw new DNLMarkerError(\n                \"Found EOI marker (0xFFD9) while parsing scan data, \" +\n                  \"possibly caused by incorrect `scanLines` parameter\",\n                maybeScanLines\n              );\n            }\n          }\n          throw new EOIMarkerError(\n            \"Found EOI marker (0xFFD9) while parsing scan data\"\n          );\n        }\n        throw new JpegError(\n          `unexpected marker ${((bitsData << 8) | nextByte).toString(16)}`\n        );\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n\n  function decodeHuffman(tree) {\n    let node = tree;\n    while (true) {\n      node = node[readBit()];\n      switch (typeof node) {\n        case \"number\":\n          return node;\n        case \"object\":\n          continue;\n      }\n      throw new JpegError(\"invalid huffman sequence\");\n    }\n  }\n\n  function receive(length) {\n    let n = 0;\n    while (length > 0) {\n      n = (n << 1) | readBit();\n      length--;\n    }\n    return n;\n  }\n\n  function receiveAndExtend(length) {\n    if (length === 1) {\n      return readBit() === 1 ? 1 : -1;\n    }\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n\n  function decodeBaseline(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.blockData[blockOffset] = component.pred += diff;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] = receiveAndExtend(s);\n      k++;\n    }\n  }\n\n  function decodeDCFirst(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n    component.blockData[blockOffset] = component.pred += diff;\n  }\n\n  function decodeDCSuccessive(component, blockOffset) {\n    component.blockData[blockOffset] |= readBit() << successive;\n  }\n\n  let eobrun = 0;\n  function decodeACFirst(component, blockOffset) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] =\n        receiveAndExtend(s) * (1 << successive);\n      k++;\n    }\n  }\n\n  let successiveACState = 0,\n    successiveACNextValue;\n  function decodeACSuccessive(component, blockOffset) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    let s;\n    let rs;\n    while (k <= e) {\n      const offsetZ = blockOffset + dctZigZag[k];\n      const sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: // initial state\n          rs = decodeHuffman(component.huffmanTableAC);\n          s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new JpegError(\"invalid ACn encoding\");\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            component.blockData[offsetZ] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          }\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n\n  let blockRow = 0;\n  function decodeMcu(component, decode, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    blockRow = mcuRow * component.v + row;\n    const blockCol = mcuCol * component.h + col;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  function decodeBlock(component, decode, mcu) {\n    blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  const componentsLength = components.length;\n  let component, i, j, k, n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0,\n    fileMarker;\n  const mcuExpected =\n    componentsLength === 1\n      ? components[0].blocksPerLine * components[0].blocksPerColumn\n      : mcusPerLine * frame.mcusPerColumn;\n\n  let h, v;\n  while (mcu <= mcuExpected) {\n    // reset interval stuff\n    const mcuToRead = resetInterval\n      ? Math.min(mcuExpected - mcu, resetInterval)\n      : mcuExpected;\n\n    // The `mcuToRead === 0` case should only occur when all of the expected\n    // MCU data has been already parsed, i.e. when `mcu === mcuExpected`, but\n    // some corrupt JPEG images contain more data than intended and we thus\n    // want to skip over any extra RSTx markers below (fixes issue11794.pdf).\n    if (mcuToRead > 0) {\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    fileMarker = findNextFileMarker(data, offset);\n    if (!fileMarker) {\n      break; // Reached the end of the image data without finding any marker.\n    }\n    if (fileMarker.invalid) {\n      // Some bad images seem to pad Scan blocks with e.g. zero bytes, skip\n      // past those to attempt to find a valid marker (fixes issue4090.pdf).\n      const partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n      warn(\n        `decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`\n      );\n      offset = fileMarker.offset;\n    }\n    if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n      // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\n// A port of poppler's IDCT method which in turn is taken from:\n//   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n//   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n//   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n//   988-991.\nfunction quantizeAndInverse(component, blockBufferOffset, p) {\n  const qt = component.quantizationTable,\n    blockData = component.blockData;\n  let v0, v1, v2, v3, v4, v5, v6, v7;\n  let p0, p1, p2, p3, p4, p5, p6, p7;\n  let t;\n\n  if (!qt) {\n    throw new JpegError(\"missing required Quantization Table.\");\n  }\n\n  // inverse DCT on rows\n  for (let row = 0; row < 64; row += 8) {\n    // gather block data\n    p0 = blockData[blockBufferOffset + row];\n    p1 = blockData[blockBufferOffset + row + 1];\n    p2 = blockData[blockBufferOffset + row + 2];\n    p3 = blockData[blockBufferOffset + row + 3];\n    p4 = blockData[blockBufferOffset + row + 4];\n    p5 = blockData[blockBufferOffset + row + 5];\n    p6 = blockData[blockBufferOffset + row + 6];\n    p7 = blockData[blockBufferOffset + row + 7];\n\n    // dequant p0\n    p0 *= qt[row];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 512) >> 10;\n      p[row] = t;\n      p[row + 1] = t;\n      p[row + 2] = t;\n      p[row + 3] = t;\n      p[row + 4] = t;\n      p[row + 5] = t;\n      p[row + 6] = t;\n      p[row + 7] = t;\n      continue;\n    }\n    // dequant p1 ... p7\n    p1 *= qt[row + 1];\n    p2 *= qt[row + 2];\n    p3 *= qt[row + 3];\n    p4 *= qt[row + 4];\n    p5 *= qt[row + 5];\n    p6 *= qt[row + 6];\n    p7 *= qt[row + 7];\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 128) >> 8;\n    v1 = (dctSqrt2 * p4 + 128) >> 8;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n    v5 = p3 << 4;\n    v6 = p5 << 4;\n\n    // stage 3\n    v0 = (v0 + v1 + 1) >> 1;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p[row] = v0 + v7;\n    p[row + 7] = v0 - v7;\n    p[row + 1] = v1 + v6;\n    p[row + 6] = v1 - v6;\n    p[row + 2] = v2 + v5;\n    p[row + 5] = v2 - v5;\n    p[row + 3] = v3 + v4;\n    p[row + 4] = v3 - v4;\n  }\n\n  // inverse DCT on columns\n  for (let col = 0; col < 8; ++col) {\n    p0 = p[col];\n    p1 = p[col + 8];\n    p2 = p[col + 16];\n    p3 = p[col + 24];\n    p4 = p[col + 32];\n    p5 = p[col + 40];\n    p6 = p[col + 48];\n    p7 = p[col + 56];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 8192) >> 14;\n      // Convert to 8-bit.\n      if (t < -2040) {\n        t = 0;\n      } else if (t >= 2024) {\n        t = 255;\n      } else {\n        t = (t + 2056) >> 4;\n      }\n      blockData[blockBufferOffset + col] = t;\n      blockData[blockBufferOffset + col + 8] = t;\n      blockData[blockBufferOffset + col + 16] = t;\n      blockData[blockBufferOffset + col + 24] = t;\n      blockData[blockBufferOffset + col + 32] = t;\n      blockData[blockBufferOffset + col + 40] = t;\n      blockData[blockBufferOffset + col + 48] = t;\n      blockData[blockBufferOffset + col + 56] = t;\n      continue;\n    }\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 2048) >> 12;\n    v1 = (dctSqrt2 * p4 + 2048) >> 12;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n    v5 = p3;\n    v6 = p5;\n\n    // stage 3\n    // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n    // converting to UInt8 range later.\n    v0 = ((v0 + v1 + 1) >> 1) + 4112;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p0 = v0 + v7;\n    p7 = v0 - v7;\n    p1 = v1 + v6;\n    p6 = v1 - v6;\n    p2 = v2 + v5;\n    p5 = v2 - v5;\n    p3 = v3 + v4;\n    p4 = v3 - v4;\n\n    // Convert to 8-bit integers.\n    if (p0 < 16) {\n      p0 = 0;\n    } else if (p0 >= 4080) {\n      p0 = 255;\n    } else {\n      p0 >>= 4;\n    }\n    if (p1 < 16) {\n      p1 = 0;\n    } else if (p1 >= 4080) {\n      p1 = 255;\n    } else {\n      p1 >>= 4;\n    }\n    if (p2 < 16) {\n      p2 = 0;\n    } else if (p2 >= 4080) {\n      p2 = 255;\n    } else {\n      p2 >>= 4;\n    }\n    if (p3 < 16) {\n      p3 = 0;\n    } else if (p3 >= 4080) {\n      p3 = 255;\n    } else {\n      p3 >>= 4;\n    }\n    if (p4 < 16) {\n      p4 = 0;\n    } else if (p4 >= 4080) {\n      p4 = 255;\n    } else {\n      p4 >>= 4;\n    }\n    if (p5 < 16) {\n      p5 = 0;\n    } else if (p5 >= 4080) {\n      p5 = 255;\n    } else {\n      p5 >>= 4;\n    }\n    if (p6 < 16) {\n      p6 = 0;\n    } else if (p6 >= 4080) {\n      p6 = 255;\n    } else {\n      p6 >>= 4;\n    }\n    if (p7 < 16) {\n      p7 = 0;\n    } else if (p7 >= 4080) {\n      p7 = 255;\n    } else {\n      p7 >>= 4;\n    }\n\n    // store block data\n    blockData[blockBufferOffset + col] = p0;\n    blockData[blockBufferOffset + col + 8] = p1;\n    blockData[blockBufferOffset + col + 16] = p2;\n    blockData[blockBufferOffset + col + 24] = p3;\n    blockData[blockBufferOffset + col + 32] = p4;\n    blockData[blockBufferOffset + col + 40] = p5;\n    blockData[blockBufferOffset + col + 48] = p6;\n    blockData[blockBufferOffset + col + 56] = p7;\n  }\n}\n\nfunction buildComponentData(frame, component) {\n  const blocksPerLine = component.blocksPerLine;\n  const blocksPerColumn = component.blocksPerColumn;\n  const computationBuffer = new Int16Array(64);\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      const offset = getBlockBufferOffset(component, blockRow, blockCol);\n      quantizeAndInverse(component, offset, computationBuffer);\n    }\n  }\n  return component.blockData;\n}\n\nfunction findNextFileMarker(data, currentPos, startPos = currentPos) {\n  const maxPos = data.length - 1;\n  let newPos = startPos < currentPos ? startPos : currentPos;\n\n  if (currentPos >= maxPos) {\n    return null; // Don't attempt to read non-existent data and just return.\n  }\n  const currentMarker = readUint16(data, currentPos);\n  if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n    return {\n      invalid: null,\n      marker: currentMarker,\n      offset: currentPos,\n    };\n  }\n  let newMarker = readUint16(data, newPos);\n  while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n    if (++newPos >= maxPos) {\n      return null; // Don't attempt to read non-existent data and just return.\n    }\n    newMarker = readUint16(data, newPos);\n  }\n  return {\n    invalid: currentMarker.toString(16),\n    marker: newMarker,\n    offset: newPos,\n  };\n}\n\nclass JpegImage {\n  constructor({ decodeTransform = null, colorTransform = -1 } = {}) {\n    this._decodeTransform = decodeTransform;\n    this._colorTransform = colorTransform;\n  }\n\n  parse(data, { dnlScanLines = null } = {}) {\n    function readDataBlock() {\n      const length = readUint16(data, offset);\n      offset += 2;\n      let endOffset = offset + length - 2;\n\n      const fileMarker = findNextFileMarker(data, endOffset, offset);\n      if (fileMarker?.invalid) {\n        warn(\n          \"readDataBlock - incorrect length, current marker is: \" +\n            fileMarker.invalid\n        );\n        endOffset = fileMarker.offset;\n      }\n\n      const array = data.subarray(offset, endOffset);\n      offset += array.length;\n      return array;\n    }\n\n    function prepareComponents(frame) {\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n      for (const component of frame.components) {\n        const blocksPerLine = Math.ceil(\n          (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH\n        );\n        const blocksPerColumn = Math.ceil(\n          (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV\n        );\n        const blocksPerLineForMcu = mcusPerLine * component.h;\n        const blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n        const blocksBufferSize =\n          64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n        component.blockData = new Int16Array(blocksBufferSize);\n        component.blocksPerLine = blocksPerLine;\n        component.blocksPerColumn = blocksPerColumn;\n      }\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let offset = 0;\n    let jfif = null;\n    let adobe = null;\n    let frame, resetInterval;\n    let numSOSMarkers = 0;\n    const quantizationTables = [];\n    const huffmanTablesAC = [],\n      huffmanTablesDC = [];\n\n    let fileMarker = readUint16(data, offset);\n    offset += 2;\n    if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n      throw new JpegError(\"SOI not found\");\n    }\n    fileMarker = readUint16(data, offset);\n    offset += 2;\n\n    markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n      let i, j, l;\n      switch (fileMarker) {\n        case 0xffe0: // APP0 (Application Specific)\n        case 0xffe1: // APP1\n        case 0xffe2: // APP2\n        case 0xffe3: // APP3\n        case 0xffe4: // APP4\n        case 0xffe5: // APP5\n        case 0xffe6: // APP6\n        case 0xffe7: // APP7\n        case 0xffe8: // APP8\n        case 0xffe9: // APP9\n        case 0xffea: // APP10\n        case 0xffeb: // APP11\n        case 0xffec: // APP12\n        case 0xffed: // APP13\n        case 0xffee: // APP14\n        case 0xffef: // APP15\n        case 0xfffe: // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xffe0) {\n            // 'JFIF\\x00'\n            if (\n              appData[0] === 0x4a &&\n              appData[1] === 0x46 &&\n              appData[2] === 0x49 &&\n              appData[3] === 0x46 &&\n              appData[4] === 0\n            ) {\n              jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(\n                  14,\n                  14 + 3 * appData[12] * appData[13]\n                ),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xffee) {\n            // 'Adobe'\n            if (\n              appData[0] === 0x41 &&\n              appData[1] === 0x64 &&\n              appData[2] === 0x6f &&\n              appData[3] === 0x62 &&\n              appData[4] === 0x65\n            ) {\n              adobe = {\n                version: (appData[5] << 8) | appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n\n        case 0xffdb: // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16(data, offset);\n          offset += 2;\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          let z;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Uint16Array(64);\n            if (quantizationTableSpec >> 4 === 0) {\n              // 8 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if (quantizationTableSpec >> 4 === 1) {\n              // 16 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = readUint16(data, offset);\n                offset += 2;\n              }\n            } else {\n              throw new JpegError(\"DQT - invalid table spec\");\n            }\n            quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n\n        case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n          if (frame) {\n            throw new JpegError(\"Only single frame JPEGs supported\");\n          }\n          offset += 2; // Skip marker length.\n\n          frame = {};\n          frame.extended = fileMarker === 0xffc1;\n          frame.progressive = fileMarker === 0xffc2;\n          frame.precision = data[offset++];\n          const sofScanLines = readUint16(data, offset);\n          offset += 2;\n          frame.scanLines = dnlScanLines || sofScanLines;\n          frame.samplesPerLine = readUint16(data, offset);\n          offset += 2;\n          frame.components = [];\n          frame.componentIds = {};\n          const componentsCount = data[offset++];\n          let maxH = 0,\n            maxV = 0;\n          for (i = 0; i < componentsCount; i++) {\n            const componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            if (maxH < h) {\n              maxH = h;\n            }\n            if (maxV < v) {\n              maxV = v;\n            }\n            const qId = data[offset + 2];\n            l = frame.components.push({\n              h,\n              v,\n              quantizationId: qId,\n              quantizationTable: null, // See comment below.\n            });\n            frame.componentIds[componentId] = l - 1;\n            offset += 3;\n          }\n          frame.maxH = maxH;\n          frame.maxV = maxV;\n          prepareComponents(frame);\n          break;\n\n        case 0xffc4: // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16(data, offset);\n          offset += 2;\n          for (i = 2; i < huffmanLength; ) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (j = 0; j < 16; j++, offset++) {\n              codeLengthSum += codeLengths[j] = data[offset];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[\n              huffmanTableSpec & 15\n            ] = buildHuffmanTable(codeLengths, huffmanValues);\n          }\n          break;\n\n        case 0xffdd: // DRI (Define Restart Interval)\n          offset += 2; // Skip marker length.\n\n          resetInterval = readUint16(data, offset);\n          offset += 2;\n          break;\n\n        case 0xffda: // SOS (Start of Scan)\n          // A DNL marker (0xFFDC), if it exists, is only allowed at the end\n          // of the first scan segment and may only occur once in an image.\n          // Furthermore, to prevent an infinite loop, do *not* attempt to\n          // parse DNL markers during re-parsing of the JPEG scan data.\n          const parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n\n          offset += 2; // Skip marker length.\n\n          const selectorsCount = data[offset++],\n            components = [];\n          for (i = 0; i < selectorsCount; i++) {\n            const index = data[offset++];\n            const componentIndex = frame.componentIds[index];\n            const component = frame.components[componentIndex];\n            component.index = index;\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++],\n            spectralEnd = data[offset++],\n            successiveApproximation = data[offset++];\n          try {\n            const processed = decodeScan(\n              data,\n              offset,\n              frame,\n              components,\n              resetInterval,\n              spectralStart,\n              spectralEnd,\n              successiveApproximation >> 4,\n              successiveApproximation & 15,\n              parseDNLMarker\n            );\n            offset += processed;\n          } catch (ex) {\n            if (ex instanceof DNLMarkerError) {\n              warn(`${ex.message} -- attempting to re-parse the JPEG image.`);\n              return this.parse(data, { dnlScanLines: ex.scanLines });\n            } else if (ex instanceof EOIMarkerError) {\n              warn(`${ex.message} -- ignoring the rest of the image data.`);\n              break markerLoop;\n            }\n            throw ex;\n          }\n          break;\n\n        case 0xffdc: // DNL (Define Number of Lines)\n          // Ignore the marker, since it's being handled in `decodeScan`.\n          offset += 4;\n          break;\n\n        case 0xffff: // Fill bytes\n          if (data[offset] !== 0xff) {\n            // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          // Could be incorrect encoding -- the last 0xFF byte of the previous\n          // block could have been eaten by the encoder, hence we fallback to\n          // `startPos = offset - 3` when looking for the next valid marker.\n          const nextFileMarker = findNextFileMarker(\n            data,\n            /* currentPos = */ offset - 2,\n            /* startPos = */ offset - 3\n          );\n          if (nextFileMarker?.invalid) {\n            warn(\n              \"JpegImage.parse - unexpected data, current marker is: \" +\n                nextFileMarker.invalid\n            );\n            offset = nextFileMarker.offset;\n            break;\n          }\n          if (!nextFileMarker || offset >= data.length - 1) {\n            warn(\n              \"JpegImage.parse - reached the end of the image data \" +\n                \"without finding an EOI marker (0xFFD9).\"\n            );\n            break markerLoop;\n          }\n          throw new JpegError(\n            \"JpegImage.parse - unknown marker: \" + fileMarker.toString(16)\n          );\n      }\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n    }\n\n    if (!frame) {\n      throw new JpegError(\"JpegImage.parse - no frame data found.\");\n    }\n    this.width = frame.samplesPerLine;\n    this.height = frame.scanLines;\n    this.jfif = jfif;\n    this.adobe = adobe;\n    this.components = [];\n    for (const component of frame.components) {\n      // Prevent errors when DQT markers are placed after SOF{n} markers,\n      // by assigning the `quantizationTable` entry after the entire image\n      // has been parsed (fixes issue7406.pdf).\n      const quantizationTable = quantizationTables[component.quantizationId];\n      if (quantizationTable) {\n        component.quantizationTable = quantizationTable;\n      }\n\n      this.components.push({\n        index: component.index,\n        output: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n        blocksPerLine: component.blocksPerLine,\n        blocksPerColumn: component.blocksPerColumn,\n      });\n    }\n    this.numComponents = this.components.length;\n    return undefined;\n  }\n\n  _getLinearizedBlockData(width, height, isSourcePDF = false) {\n    const scaleX = this.width / width,\n      scaleY = this.height / height;\n\n    let component, componentScaleX, componentScaleY, blocksPerScanline;\n    let x, y, i, j, k;\n    let index;\n    let offset = 0;\n    let output;\n    const numComponents = this.components.length;\n    const dataLength = width * height * numComponents;\n    const data = new Uint8ClampedArray(dataLength);\n    const xScaleBlockOffset = new Uint32Array(width);\n    const mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n    let lastComponentScaleX;\n\n    for (i = 0; i < numComponents; i++) {\n      component = this.components[i];\n      componentScaleX = component.scaleX * scaleX;\n      componentScaleY = component.scaleY * scaleY;\n      offset = i;\n      output = component.output;\n      blocksPerScanline = (component.blocksPerLine + 1) << 3;\n      // Precalculate the `xScaleBlockOffset`. Since it doesn't depend on the\n      // component data, that's only necessary when `componentScaleX` changes.\n      if (componentScaleX !== lastComponentScaleX) {\n        for (x = 0; x < width; x++) {\n          j = 0 | (x * componentScaleX);\n          xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n        }\n        lastComponentScaleX = componentScaleX;\n      }\n      // linearize the blocks of the component\n      for (y = 0; y < height; y++) {\n        j = 0 | (y * componentScaleY);\n        index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n        for (x = 0; x < width; x++) {\n          data[offset] = output[index + xScaleBlockOffset[x]];\n          offset += numComponents;\n        }\n      }\n    }\n\n    // decodeTransform contains pairs of multiplier (-256..256) and additive\n    let transform = this._decodeTransform;\n\n    // In PDF files, JPEG images with CMYK colour spaces are usually inverted\n    // (this can be observed by extracting the raw image data).\n    // Since the conversion algorithms (see below) were written primarily for\n    // the PDF use-cases, attempting to use `JpegImage` to parse standalone\n    // JPEG (CMYK) images may thus result in inverted images (see issue 9513).\n    //\n    // Unfortunately it's not (always) possible to tell, from the image data\n    // alone, if it needs to be inverted. Thus in an attempt to provide better\n    // out-of-box behaviour when `JpegImage` is used standalone, default to\n    // inverting JPEG (CMYK) images if and only if the image data does *not*\n    // come from a PDF file and no `decodeTransform` was passed by the user.\n    if (!isSourcePDF && numComponents === 4 && !transform) {\n      transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n    }\n\n    if (transform) {\n      for (i = 0; i < dataLength; ) {\n        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n          data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n        }\n      }\n    }\n    return data;\n  }\n\n  get _isColorConversionNeeded() {\n    if (this.adobe) {\n      // The adobe transform marker overrides any previous setting.\n      return !!this.adobe.transformCode;\n    }\n    if (this.numComponents === 3) {\n      if (this._colorTransform === 0) {\n        // If the Adobe transform marker is not present and the image\n        // dictionary has a 'ColorTransform' entry, explicitly set to `0`,\n        // then the colours should *not* be transformed.\n        return false;\n      } else if (\n        this.components[0].index === /* \"R\" = */ 0x52 &&\n        this.components[1].index === /* \"G\" = */ 0x47 &&\n        this.components[2].index === /* \"B\" = */ 0x42\n      ) {\n        // If the three components are indexed as RGB in ASCII\n        // then the colours should *not* be transformed.\n        return false;\n      }\n      return true;\n    }\n    // `this.numComponents !== 3`\n    if (this._colorTransform === 1) {\n      // If the Adobe transform marker is not present and the image\n      // dictionary has a 'ColorTransform' entry, explicitly set to `1`,\n      // then the colours should be transformed.\n      return true;\n    }\n    return false;\n  }\n\n  _convertYccToRgb(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 3) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = Y - 179.456 + 1.402 * Cr;\n      data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      data[i + 2] = Y - 226.816 + 1.772 * Cb;\n    }\n    return data;\n  }\n\n  _convertYccToRgba(data, out) {\n    for (let i = 0, j = 0, length = data.length; i < length; i += 3, j += 4) {\n      const Y = data[i];\n      const Cb = data[i + 1];\n      const Cr = data[i + 2];\n      out[j] = Y - 179.456 + 1.402 * Cr;\n      out[j + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      out[j + 2] = Y - 226.816 + 1.772 * Cb;\n      out[j + 3] = 255;\n    }\n    return out;\n  }\n\n  _convertYcckToRgb(data) {\n    let Y, Cb, Cr, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[offset++] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[offset++] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertYcckToRgba(data) {\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      const Y = data[i];\n      const Cb = data[i + 1];\n      const Cr = data[i + 2];\n      const k = data[i + 3];\n\n      data[i] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[i + 1] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[i + 2] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n      data[i + 3] = 255;\n    }\n    return data;\n  }\n\n  _convertYcckToCmyk(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = 434.456 - Y - 1.402 * Cr;\n      data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n      data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      // K in data[i + 3] is unchanged\n    }\n    return data;\n  }\n\n  _convertCmykToRgb(data) {\n    let c, m, y, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      c = data[i];\n      m = data[i + 1];\n      y = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.0003189131175883281 * k + 0.7364883807733168);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertCmykToRgba(data) {\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      const c = data[i];\n      const m = data[i + 1];\n      const y = data[i + 2];\n      const k = data[i + 3];\n\n      data[i] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[i + 1] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.0003189131175883281 * k + 0.7364883807733168);\n\n      data[i + 2] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n      data[i + 3] = 255;\n    }\n    return data;\n  }\n\n  getData({\n    width,\n    height,\n    forceRGBA = false,\n    forceRGB = false,\n    isSourcePDF = false,\n  }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        isSourcePDF === true,\n        'JpegImage.getData: Unexpected \"isSourcePDF\" value for PDF files.'\n      );\n    }\n    if (this.numComponents > 4) {\n      throw new JpegError(\"Unsupported color mode\");\n    }\n    // Type of data: Uint8ClampedArray(width * height * numComponents)\n    const data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n    if (this.numComponents === 1 && (forceRGBA || forceRGB)) {\n      const len = data.length * (forceRGBA ? 4 : 3);\n      const rgbaData = new Uint8ClampedArray(len);\n      let offset = 0;\n      if (forceRGBA) {\n        grayToRGBA(data, new Uint32Array(rgbaData.buffer));\n      } else {\n        for (const grayColor of data) {\n          rgbaData[offset++] = grayColor;\n          rgbaData[offset++] = grayColor;\n          rgbaData[offset++] = grayColor;\n        }\n      }\n      return rgbaData;\n    } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n      if (forceRGBA) {\n        const rgbaData = new Uint8ClampedArray((data.length / 3) * 4);\n        return this._convertYccToRgba(data, rgbaData);\n      }\n      return this._convertYccToRgb(data);\n    } else if (this.numComponents === 4) {\n      if (this._isColorConversionNeeded) {\n        if (forceRGBA) {\n          return this._convertYcckToRgba(data);\n        }\n        if (forceRGB) {\n          return this._convertYcckToRgb(data);\n        }\n        return this._convertYcckToCmyk(data);\n      } else if (forceRGBA) {\n        return this._convertCmykToRgba(data);\n      } else if (forceRGB) {\n        return this._convertCmykToRgb(data);\n      }\n    }\n    return data;\n  }\n}\n\nexport { JpegImage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, info, unreachable, warn } from \"../shared/util.js\";\nimport { log2, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\n\nclass JpxError extends BaseException {\n  constructor(msg) {\n    super(`JPX error: ${msg}`, \"JpxError\");\n  }\n}\n\n// Table E.1\nconst SubbandsGainLog2 = {\n  LL: 0,\n  LH: 1,\n  HL: 1,\n  HH: 2,\n};\n\nclass JpxImage {\n  constructor() {\n    this.failOnCorruptedImage = false;\n  }\n\n  parse(data) {\n    const head = readUint16(data, 0);\n    // No box header, immediate start of codestream (SOC)\n    if (head === 0xff4f) {\n      this.parseCodestream(data, 0, data.length);\n      return;\n    }\n\n    const length = data.length;\n    let position = 0;\n    while (position < length) {\n      let headerSize = 8;\n      let lbox = readUint32(data, position);\n      const tbox = readUint32(data, position + 4);\n      position += headerSize;\n      if (lbox === 1) {\n        // XLBox: read UInt64 according to spec.\n        // JavaScript's int precision of 53 bit should be sufficient here.\n        lbox =\n          readUint32(data, position) * 4294967296 +\n          readUint32(data, position + 4);\n        position += 8;\n        headerSize += 8;\n      }\n      if (lbox === 0) {\n        lbox = length - position + headerSize;\n      }\n      if (lbox < headerSize) {\n        throw new JpxError(\"Invalid box field size\");\n      }\n      const dataLength = lbox - headerSize;\n      let jumpDataLength = true;\n      switch (tbox) {\n        case 0x6a703268: // 'jp2h'\n          jumpDataLength = false; // parsing child boxes\n          break;\n        case 0x636f6c72: // 'colr'\n          // Colorspaces are not used, the CS from the PDF is used.\n          const method = data[position];\n          if (method === 1) {\n            // enumerated colorspace\n            const colorspace = readUint32(data, position + 3);\n            switch (colorspace) {\n              case 16: // this indicates a sRGB colorspace\n              case 17: // this indicates a grayscale colorspace\n              case 18: // this indicates a YUV colorspace\n                break;\n              default:\n                warn(\"Unknown colorspace \" + colorspace);\n                break;\n            }\n          } else if (method === 2) {\n            info(\"ICC profile not supported\");\n          }\n          break;\n        case 0x6a703263: // 'jp2c'\n          this.parseCodestream(data, position, position + dataLength);\n          break;\n        case 0x6a502020: // 'jP\\024\\024'\n          if (readUint32(data, position) !== 0x0d0a870a) {\n            warn(\"Invalid JP2 signature\");\n          }\n          break;\n        // The following header types are valid but currently not used:\n        case 0x6a501a1a: // 'jP\\032\\032'\n        case 0x66747970: // 'ftyp'\n        case 0x72726571: // 'rreq'\n        case 0x72657320: // 'res '\n        case 0x69686472: // 'ihdr'\n          break;\n        default:\n          const headerType = String.fromCharCode(\n            (tbox >> 24) & 0xff,\n            (tbox >> 16) & 0xff,\n            (tbox >> 8) & 0xff,\n            tbox & 0xff\n          );\n          warn(`Unsupported header type ${tbox} (${headerType}).`);\n          break;\n      }\n      if (jumpDataLength) {\n        position += dataLength;\n      }\n    }\n  }\n\n  parseImageProperties(stream) {\n    let newByte = stream.getByte();\n    while (newByte >= 0) {\n      const oldByte = newByte;\n      newByte = stream.getByte();\n      const code = (oldByte << 8) | newByte;\n      // Image and tile size (SIZ)\n      if (code === 0xff51) {\n        stream.skip(4);\n        const Xsiz = stream.getInt32() >>> 0; // Byte 4\n        const Ysiz = stream.getInt32() >>> 0; // Byte 8\n        const XOsiz = stream.getInt32() >>> 0; // Byte 12\n        const YOsiz = stream.getInt32() >>> 0; // Byte 16\n        stream.skip(16);\n        const Csiz = stream.getUint16(); // Byte 36\n        this.width = Xsiz - XOsiz;\n        this.height = Ysiz - YOsiz;\n        this.componentsCount = Csiz;\n        // Results are always returned as `Uint8ClampedArray`s.\n        this.bitsPerComponent = 8;\n        return;\n      }\n    }\n    throw new JpxError(\"No size marker found in JPX stream\");\n  }\n\n  parseCodestream(data, start, end) {\n    const context = {};\n    let doNotRecover = false;\n    try {\n      let position = start;\n      while (position + 1 < end) {\n        const code = readUint16(data, position);\n        position += 2;\n\n        let length = 0,\n          j,\n          sqcd,\n          spqcds,\n          spqcdSize,\n          scalarExpounded,\n          tile;\n        switch (code) {\n          case 0xff4f: // Start of codestream (SOC)\n            context.mainHeader = true;\n            break;\n          case 0xffd9: // End of codestream (EOC)\n            break;\n          case 0xff51: // Image and tile size (SIZ)\n            length = readUint16(data, position);\n            const siz = {};\n            siz.Xsiz = readUint32(data, position + 4);\n            siz.Ysiz = readUint32(data, position + 8);\n            siz.XOsiz = readUint32(data, position + 12);\n            siz.YOsiz = readUint32(data, position + 16);\n            siz.XTsiz = readUint32(data, position + 20);\n            siz.YTsiz = readUint32(data, position + 24);\n            siz.XTOsiz = readUint32(data, position + 28);\n            siz.YTOsiz = readUint32(data, position + 32);\n            const componentsCount = readUint16(data, position + 36);\n            siz.Csiz = componentsCount;\n            const components = [];\n            j = position + 38;\n            for (let i = 0; i < componentsCount; i++) {\n              const component = {\n                precision: (data[j] & 0x7f) + 1,\n                isSigned: !!(data[j] & 0x80),\n                XRsiz: data[j + 1],\n                YRsiz: data[j + 2],\n              };\n              j += 3;\n              calculateComponentDimensions(component, siz);\n              components.push(component);\n            }\n            context.SIZ = siz;\n            context.components = components;\n            calculateTileGrids(context, components);\n            context.QCC = [];\n            context.COC = [];\n            break;\n          case 0xff5c: // Quantization default (QCD)\n            length = readUint16(data, position);\n            const qcd = {};\n            j = position + 2;\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcd.noQuantization = spqcdSize === 8;\n            qcd.scalarExpounded = scalarExpounded;\n            qcd.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcd.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCD = qcd;\n            } else {\n              context.currentTile.QCD = qcd;\n              context.currentTile.QCC = [];\n            }\n            break;\n          case 0xff5d: // Quantization component (QCC)\n            length = readUint16(data, position);\n            const qcc = {};\n            j = position + 2;\n            let cqcc;\n            if (context.SIZ.Csiz < 257) {\n              cqcc = data[j++];\n            } else {\n              cqcc = readUint16(data, j);\n              j += 2;\n            }\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcc.noQuantization = spqcdSize === 8;\n            qcc.scalarExpounded = scalarExpounded;\n            qcc.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcc.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCC[cqcc] = qcc;\n            } else {\n              context.currentTile.QCC[cqcc] = qcc;\n            }\n            break;\n          case 0xff52: // Coding style default (COD)\n            length = readUint16(data, position);\n            const cod = {};\n            j = position + 2;\n            const scod = data[j++];\n            cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n            cod.sopMarkerUsed = !!(scod & 2);\n            cod.ephMarkerUsed = !!(scod & 4);\n            cod.progressionOrder = data[j++];\n            cod.layersCount = readUint16(data, j);\n            j += 2;\n            cod.multipleComponentTransform = data[j++];\n\n            cod.decompositionLevelsCount = data[j++];\n            cod.xcb = (data[j++] & 0xf) + 2;\n            cod.ycb = (data[j++] & 0xf) + 2;\n            const blockStyle = data[j++];\n            cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n            cod.resetContextProbabilities = !!(blockStyle & 2);\n            cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n            cod.verticallyStripe = !!(blockStyle & 8);\n            cod.predictableTermination = !!(blockStyle & 16);\n            cod.segmentationSymbolUsed = !!(blockStyle & 32);\n            cod.reversibleTransformation = data[j++];\n            if (cod.entropyCoderWithCustomPrecincts) {\n              const precinctsSizes = [];\n              while (j < length + position) {\n                const precinctsSize = data[j++];\n                precinctsSizes.push({\n                  PPx: precinctsSize & 0xf,\n                  PPy: precinctsSize >> 4,\n                });\n              }\n              cod.precinctsSizes = precinctsSizes;\n            }\n            const unsupported = [];\n            if (cod.selectiveArithmeticCodingBypass) {\n              unsupported.push(\"selectiveArithmeticCodingBypass\");\n            }\n            if (cod.terminationOnEachCodingPass) {\n              unsupported.push(\"terminationOnEachCodingPass\");\n            }\n            if (cod.verticallyStripe) {\n              unsupported.push(\"verticallyStripe\");\n            }\n            if (cod.predictableTermination) {\n              unsupported.push(\"predictableTermination\");\n            }\n            if (unsupported.length > 0) {\n              doNotRecover = true;\n              warn(`JPX: Unsupported COD options (${unsupported.join(\", \")}).`);\n            }\n            if (context.mainHeader) {\n              context.COD = cod;\n            } else {\n              context.currentTile.COD = cod;\n              context.currentTile.COC = [];\n            }\n            break;\n          case 0xff90: // Start of tile-part (SOT)\n            length = readUint16(data, position);\n            tile = {};\n            tile.index = readUint16(data, position + 2);\n            tile.length = readUint32(data, position + 4);\n            tile.dataEnd = tile.length + position - 2;\n            tile.partIndex = data[position + 8];\n            tile.partsCount = data[position + 9];\n\n            context.mainHeader = false;\n            if (tile.partIndex === 0) {\n              // reset component specific settings\n              tile.COD = context.COD;\n              tile.COC = context.COC.slice(0); // clone of the global COC\n              tile.QCD = context.QCD;\n              tile.QCC = context.QCC.slice(0); // clone of the global COC\n            }\n            context.currentTile = tile;\n            break;\n          case 0xff93: // Start of data (SOD)\n            tile = context.currentTile;\n            if (tile.partIndex === 0) {\n              initializeTile(context, tile.index);\n              buildPackets(context);\n            }\n\n            // moving to the end of the data\n            length = tile.dataEnd - position;\n            parseTilePackets(context, data, position, length);\n            break;\n          case 0xff53: // Coding style component (COC)\n            warn(\"JPX: Codestream code 0xFF53 (COC) is not implemented.\");\n          /* falls through */\n          case 0xff55: // Tile-part lengths, main header (TLM)\n          case 0xff57: // Packet length, main header (PLM)\n          case 0xff58: // Packet length, tile-part header (PLT)\n          case 0xff64: // Comment (COM)\n            length = readUint16(data, position);\n            // skipping content\n            break;\n          default:\n            throw new Error(\"Unknown codestream code: \" + code.toString(16));\n        }\n        position += length;\n      }\n    } catch (e) {\n      if (doNotRecover || this.failOnCorruptedImage) {\n        throw new JpxError(e.message);\n      } else {\n        warn(`JPX: Trying to recover from: \"${e.message}\".`);\n      }\n    }\n    this.tiles = transformComponents(context);\n    this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n    this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n    this.componentsCount = context.SIZ.Csiz;\n  }\n}\n\nfunction calculateComponentDimensions(component, siz) {\n  // Section B.2 Component mapping\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n}\nfunction calculateTileGrids(context, components) {\n  const siz = context.SIZ;\n  // Section B.3 Division into tile and tile-components\n  const tiles = [];\n  let tile;\n  const numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  const numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (let q = 0; q < numYtiles; q++) {\n    for (let p = 0; p < numXtiles; p++) {\n      tile = {};\n      tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n      tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n      tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n      tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n      tile.width = tile.tx1 - tile.tx0;\n      tile.height = tile.ty1 - tile.ty0;\n      tile.components = [];\n      tiles.push(tile);\n    }\n  }\n  context.tiles = tiles;\n\n  const componentsCount = siz.Csiz;\n  for (let i = 0, ii = componentsCount; i < ii; i++) {\n    const component = components[i];\n    for (let j = 0, jj = tiles.length; j < jj; j++) {\n      const tileComponent = {};\n      tile = tiles[j];\n      tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n      tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n      tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n      tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n      tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n      tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n      tile.components[i] = tileComponent;\n    }\n  }\n}\nfunction getBlocksDimensions(context, component, r) {\n  const codOrCoc = component.codingStyleParameters;\n  const result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n    result.PPx = 15;\n    result.PPy = 15;\n  } else {\n    result.PPx = codOrCoc.precinctsSizes[r].PPx;\n    result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  // calculate codeblock size as described in section B.7\n  result.xcb_ =\n    r > 0\n      ? Math.min(codOrCoc.xcb, result.PPx - 1)\n      : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ =\n    r > 0\n      ? Math.min(codOrCoc.ycb, result.PPy - 1)\n      : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n}\nfunction buildPrecincts(context, resolution, dimensions) {\n  // Section B.6 Division resolution to precincts\n  const precinctWidth = 1 << dimensions.PPx;\n  const precinctHeight = 1 << dimensions.PPy;\n  // Jasper introduces codeblock groups for mapping each subband codeblocks\n  // to precincts. Precinct partition divides a resolution according to width\n  // and height parameters. The subband that belongs to the resolution level\n  // has a different size than the level, unless it is the zero resolution.\n\n  // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:\n  // The precinct partitioning for a particular subband is derived from a\n  // partitioning of its parent LL band (i.e., the LL band at the next higher\n  // resolution level)... The LL band associated with each resolution level is\n  // divided into precincts... Each of the resulting precinct regions is then\n  // mapped into its child subbands (if any) at the next lower resolution\n  // level. This is accomplished by using the coordinate transformation\n  // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the\n  // coordinates of a point in the LL band and child subband, respectively.\n  const isZeroRes = resolution.resLevel === 0;\n  const precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n  const precinctHeightInSubband = 1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n  const numprecinctswide =\n    resolution.trx1 > resolution.trx0\n      ? Math.ceil(resolution.trx1 / precinctWidth) -\n        Math.floor(resolution.trx0 / precinctWidth)\n      : 0;\n  const numprecinctshigh =\n    resolution.try1 > resolution.try0\n      ? Math.ceil(resolution.try1 / precinctHeight) -\n        Math.floor(resolution.try0 / precinctHeight)\n      : 0;\n  const numprecincts = numprecinctswide * numprecinctshigh;\n\n  resolution.precinctParameters = {\n    precinctWidth,\n    precinctHeight,\n    numprecinctswide,\n    numprecinctshigh,\n    numprecincts,\n    precinctWidthInSubband,\n    precinctHeightInSubband,\n  };\n}\nfunction buildCodeblocks(context, subband, dimensions) {\n  // Section B.7 Division sub-band into code-blocks\n  const xcb_ = dimensions.xcb_;\n  const ycb_ = dimensions.ycb_;\n  const codeblockWidth = 1 << xcb_;\n  const codeblockHeight = 1 << ycb_;\n  const cbx0 = subband.tbx0 >> xcb_;\n  const cby0 = subband.tby0 >> ycb_;\n  const cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n  const cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n  const precinctParameters = subband.resolution.precinctParameters;\n  const codeblocks = [];\n  const precincts = [];\n  let i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n    for (i = cbx0; i < cbx1; i++) {\n      codeblock = {\n        cbx: i,\n        cby: j,\n        tbx0: codeblockWidth * i,\n        tby0: codeblockHeight * j,\n        tbx1: codeblockWidth * (i + 1),\n        tby1: codeblockHeight * (j + 1),\n      };\n\n      codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n      codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n      codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n      codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\n      // Calculate precinct number for this codeblock, codeblock position\n      // should be relative to its subband, use actual dimension and position\n      // See comment about codeblock group width and height\n      const pi = Math.floor(\n        (codeblock.tbx0_ - subband.tbx0) /\n          precinctParameters.precinctWidthInSubband\n      );\n      const pj = Math.floor(\n        (codeblock.tby0_ - subband.tby0) /\n          precinctParameters.precinctHeightInSubband\n      );\n      precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\n      codeblock.precinctNumber = precinctNumber;\n      codeblock.subbandType = subband.type;\n      codeblock.Lblock = 3;\n\n      if (\n        codeblock.tbx1_ <= codeblock.tbx0_ ||\n        codeblock.tby1_ <= codeblock.tby0_\n      ) {\n        continue;\n      }\n      codeblocks.push(codeblock);\n      // building precinct for the sub-band\n      let precinct = precincts[precinctNumber];\n      if (precinct !== undefined) {\n        if (i < precinct.cbxMin) {\n          precinct.cbxMin = i;\n        } else if (i > precinct.cbxMax) {\n          precinct.cbxMax = i;\n        }\n        if (j < precinct.cbyMin) {\n          precinct.cbxMin = j;\n        } else if (j > precinct.cbyMax) {\n          precinct.cbyMax = j;\n        }\n      } else {\n        precincts[precinctNumber] = precinct = {\n          cbxMin: i,\n          cbyMin: j,\n          cbxMax: i,\n          cbyMax: j,\n        };\n      }\n      codeblock.precinct = precinct;\n    }\n  }\n  subband.codeblockParameters = {\n    codeblockWidth: xcb_,\n    codeblockHeight: ycb_,\n    numcodeblockwide: cbx1 - cbx0 + 1,\n    numcodeblockhigh: cby1 - cby0 + 1,\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n}\nfunction createPacket(resolution, precinctNumber, layerNumber) {\n  const precinctCodeblocks = [];\n  // Section B.10.8 Order of info in packet\n  const subbands = resolution.subbands;\n  // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence\n  for (let i = 0, ii = subbands.length; i < ii; i++) {\n    const subband = subbands[i];\n    const codeblocks = subband.codeblocks;\n    for (let j = 0, jj = codeblocks.length; j < jj; j++) {\n      const codeblock = codeblocks[j];\n      if (codeblock.precinctNumber !== precinctNumber) {\n        continue;\n      }\n      precinctCodeblocks.push(codeblock);\n    }\n  }\n  return {\n    layerNumber,\n    codeblocks: precinctCodeblocks,\n  };\n}\nfunction LayerResolutionComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let l = 0,\n    r = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.1 Layer-resolution-component-position\n    for (; l < layersCount; l++) {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      r = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionLayerComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let r = 0,\n    l = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.2 Resolution-layer-component-position\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; l < layersCount; l++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      l = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionPositionComponentLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let l, r, c, p;\n  let maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      component.codingStyleParameters.decompositionLevelsCount\n    );\n  }\n  const maxNumPrecinctsInLevel = new Int32Array(\n    maxDecompositionLevelsCount + 1\n  );\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n    let maxNumPrecincts = 0;\n    for (c = 0; c < componentsCount; ++c) {\n      const resolutions = tile.components[c].resolutions;\n      if (r < resolutions.length) {\n        maxNumPrecincts = Math.max(\n          maxNumPrecincts,\n          resolutions[r].precinctParameters.numprecincts\n        );\n      }\n    }\n    maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.3 Resolution-position-component-layer\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; p < maxNumPrecinctsInLevel[r]; p++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          if (p >= numprecincts) {\n            continue;\n          }\n          for (; l < layersCount; ) {\n            const packet = createPacket(resolution, p, l);\n            l++;\n            return packet;\n          }\n          l = 0;\n        }\n        c = 0;\n      }\n      p = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction PositionComponentResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  const precinctsIterationSizes = precinctsSizes;\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.4 Position-component-resolution-layer\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n      for (; px < precinctsIterationSizes.maxNumWide; px++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          const decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale =\n              precinctsSizes.components[c].resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        c = 0;\n      }\n      px = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ComponentPositionResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.5 Component-position-resolution-layer\n    for (; c < componentsCount; ++c) {\n      const component = tile.components[c];\n      const precinctsIterationSizes = precinctsSizes.components[c];\n      const decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale = precinctsIterationSizes.resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        px = 0;\n      }\n      py = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction getPrecinctIndexIfExist(\n  pxIndex,\n  pyIndex,\n  sizeInImageScale,\n  precinctIterationSizes,\n  resolution\n) {\n  const posX = pxIndex * precinctIterationSizes.minWidth;\n  const posY = pyIndex * precinctIterationSizes.minHeight;\n  if (\n    posX % sizeInImageScale.width !== 0 ||\n    posY % sizeInImageScale.height !== 0\n  ) {\n    return null;\n  }\n  const startPrecinctRowIndex =\n    (posY / sizeInImageScale.width) *\n    resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n}\nfunction getPrecinctSizesInImageScale(tile) {\n  const componentsCount = tile.components.length;\n  let minWidth = Number.MAX_VALUE;\n  let minHeight = Number.MAX_VALUE;\n  let maxNumWide = 0;\n  let maxNumHigh = 0;\n  const sizePerComponent = new Array(componentsCount);\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    const sizePerResolution = new Array(decompositionLevelsCount + 1);\n    let minWidthCurrentComponent = Number.MAX_VALUE;\n    let minHeightCurrentComponent = Number.MAX_VALUE;\n    let maxNumWideCurrentComponent = 0;\n    let maxNumHighCurrentComponent = 0;\n    let scale = 1;\n    for (let r = decompositionLevelsCount; r >= 0; --r) {\n      const resolution = component.resolutions[r];\n      const widthCurrentResolution =\n        scale * resolution.precinctParameters.precinctWidth;\n      const heightCurrentResolution =\n        scale * resolution.precinctParameters.precinctHeight;\n      minWidthCurrentComponent = Math.min(\n        minWidthCurrentComponent,\n        widthCurrentResolution\n      );\n      minHeightCurrentComponent = Math.min(\n        minHeightCurrentComponent,\n        heightCurrentResolution\n      );\n      maxNumWideCurrentComponent = Math.max(\n        maxNumWideCurrentComponent,\n        resolution.precinctParameters.numprecinctswide\n      );\n      maxNumHighCurrentComponent = Math.max(\n        maxNumHighCurrentComponent,\n        resolution.precinctParameters.numprecinctshigh\n      );\n      sizePerResolution[r] = {\n        width: widthCurrentResolution,\n        height: heightCurrentResolution,\n      };\n      scale <<= 1;\n    }\n    minWidth = Math.min(minWidth, minWidthCurrentComponent);\n    minHeight = Math.min(minHeight, minHeightCurrentComponent);\n    maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n    maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n    sizePerComponent[c] = {\n      resolutions: sizePerResolution,\n      minWidth: minWidthCurrentComponent,\n      minHeight: minHeightCurrentComponent,\n      maxNumWide: maxNumWideCurrentComponent,\n      maxNumHigh: maxNumHighCurrentComponent,\n    };\n  }\n  return {\n    components: sizePerComponent,\n    minWidth,\n    minHeight,\n    maxNumWide,\n    maxNumHigh,\n  };\n}\nfunction buildPackets(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const componentsCount = siz.Csiz;\n  // Creating resolutions and sub-bands for each component\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    // Section B.5 Resolution levels and sub-bands\n    const resolutions = [];\n    const subbands = [];\n    for (let r = 0; r <= decompositionLevelsCount; r++) {\n      const blocksDimensions = getBlocksDimensions(context, component, r);\n      const resolution = {};\n      const scale = 1 << (decompositionLevelsCount - r);\n      resolution.trx0 = Math.ceil(component.tcx0 / scale);\n      resolution.try0 = Math.ceil(component.tcy0 / scale);\n      resolution.trx1 = Math.ceil(component.tcx1 / scale);\n      resolution.try1 = Math.ceil(component.tcy1 / scale);\n      resolution.resLevel = r;\n      buildPrecincts(context, resolution, blocksDimensions);\n      resolutions.push(resolution);\n\n      let subband;\n      if (r === 0) {\n        // one sub-band (LL) with last decomposition\n        subband = {};\n        subband.type = \"LL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / scale);\n        subband.tby0 = Math.ceil(component.tcy0 / scale);\n        subband.tbx1 = Math.ceil(component.tcx1 / scale);\n        subband.tby1 = Math.ceil(component.tcy1 / scale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolution.subbands = [subband];\n      } else {\n        const bscale = 1 << (decompositionLevelsCount - r + 1);\n        const resolutionSubbands = [];\n        // three sub-bands (HL, LH and HH) with rest of decompositions\n        subband = {};\n        subband.type = \"HL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"LH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"HH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        resolution.subbands = resolutionSubbands;\n      }\n    }\n    component.resolutions = resolutions;\n    component.subbands = subbands;\n  }\n  // Generate the packets sequence\n  const progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n    case 0:\n      tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n        context\n      );\n      break;\n    case 1:\n      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n        context\n      );\n      break;\n    case 2:\n      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n        context\n      );\n      break;\n    case 3:\n      tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n        context\n      );\n      break;\n    case 4:\n      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n        context\n      );\n      break;\n    default:\n      throw new JpxError(`Unsupported progression order ${progressionOrder}`);\n  }\n}\nfunction parseTilePackets(context, data, offset, dataLength) {\n  let position = 0;\n  let buffer,\n    bufferSize = 0,\n    skipNextBit = false;\n  function readBits(count) {\n    while (bufferSize < count) {\n      const b = data[offset + position];\n      position++;\n      if (skipNextBit) {\n        buffer = (buffer << 7) | b;\n        bufferSize += 7;\n        skipNextBit = false;\n      } else {\n        buffer = (buffer << 8) | b;\n        bufferSize += 8;\n      }\n      if (b === 0xff) {\n        skipNextBit = true;\n      }\n    }\n    bufferSize -= count;\n    return (buffer >>> bufferSize) & ((1 << count) - 1);\n  }\n  function skipMarkerIfEqual(value) {\n    if (\n      data[offset + position - 1] === 0xff &&\n      data[offset + position] === value\n    ) {\n      skipBytes(1);\n      return true;\n    } else if (\n      data[offset + position] === 0xff &&\n      data[offset + position + 1] === value\n    ) {\n      skipBytes(2);\n      return true;\n    }\n    return false;\n  }\n  function skipBytes(count) {\n    position += count;\n  }\n  function alignToByte() {\n    bufferSize = 0;\n    if (skipNextBit) {\n      position++;\n      skipNextBit = false;\n    }\n  }\n  function readCodingpasses() {\n    if (readBits(1) === 0) {\n      return 1;\n    }\n    if (readBits(1) === 0) {\n      return 2;\n    }\n    let value = readBits(2);\n    if (value < 3) {\n      return value + 3;\n    }\n    value = readBits(5);\n    if (value < 31) {\n      return value + 6;\n    }\n    value = readBits(7);\n    return value + 37;\n  }\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const sopMarkerUsed = context.COD.sopMarkerUsed;\n  const ephMarkerUsed = context.COD.ephMarkerUsed;\n  const packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n    alignToByte();\n    if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n      // Skip also marker segment length and packet sequence ID\n      skipBytes(4);\n    }\n    const packet = packetsIterator.nextPacket();\n    if (!readBits(1)) {\n      continue;\n    }\n    const layerNumber = packet.layerNumber,\n      queue = [];\n    let codeblock;\n    for (let i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n      codeblock = packet.codeblocks[i];\n      let precinct = codeblock.precinct;\n      const codeblockColumn = codeblock.cbx - precinct.cbxMin;\n      const codeblockRow = codeblock.cby - precinct.cbyMin;\n      let codeblockIncluded = false;\n      let firstTimeInclusion = false;\n      let valueReady, zeroBitPlanesTree;\n      if (codeblock.included !== undefined) {\n        codeblockIncluded = !!readBits(1);\n      } else {\n        // reading inclusion tree\n        precinct = codeblock.precinct;\n        let inclusionTree;\n        if (precinct.inclusionTree !== undefined) {\n          inclusionTree = precinct.inclusionTree;\n        } else {\n          // building inclusion and zero bit-planes trees\n          const width = precinct.cbxMax - precinct.cbxMin + 1;\n          const height = precinct.cbyMax - precinct.cbyMin + 1;\n          inclusionTree = new InclusionTree(width, height, layerNumber);\n          zeroBitPlanesTree = new TagTree(width, height);\n          precinct.inclusionTree = inclusionTree;\n          precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          for (let l = 0; l < layerNumber; l++) {\n            if (readBits(1) !== 0) {\n              throw new JpxError(\"Invalid tag tree\");\n            }\n          }\n        }\n\n        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !inclusionTree.nextLevel();\n              if (valueReady) {\n                codeblock.included = true;\n                codeblockIncluded = firstTimeInclusion = true;\n                break;\n              }\n            } else {\n              inclusionTree.incrementValue(layerNumber);\n              break;\n            }\n          }\n        }\n      }\n      if (!codeblockIncluded) {\n        continue;\n      }\n      if (firstTimeInclusion) {\n        zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n        while (true) {\n          if (readBits(1)) {\n            valueReady = !zeroBitPlanesTree.nextLevel();\n            if (valueReady) {\n              break;\n            }\n          } else {\n            zeroBitPlanesTree.incrementValue();\n          }\n        }\n        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n      }\n      const codingpasses = readCodingpasses();\n      while (readBits(1)) {\n        codeblock.Lblock++;\n      }\n      const codingpassesLog2 = log2(codingpasses);\n      // rounding down log2\n      const bits =\n        (codingpasses < 1 << codingpassesLog2\n          ? codingpassesLog2 - 1\n          : codingpassesLog2) + codeblock.Lblock;\n      const codedDataLength = readBits(bits);\n      queue.push({\n        codeblock,\n        codingpasses,\n        dataLength: codedDataLength,\n      });\n    }\n    alignToByte();\n    if (ephMarkerUsed) {\n      skipMarkerIfEqual(0x92);\n    }\n    while (queue.length > 0) {\n      const packetItem = queue.shift();\n      codeblock = packetItem.codeblock;\n      if (codeblock.data === undefined) {\n        codeblock.data = [];\n      }\n      codeblock.data.push({\n        data,\n        start: offset + position,\n        end: offset + position + packetItem.dataLength,\n        codingpasses: packetItem.codingpasses,\n      });\n      position += packetItem.dataLength;\n    }\n  }\n  return position;\n}\nfunction copyCoefficients(\n  coefficients,\n  levelWidth,\n  levelHeight,\n  subband,\n  delta,\n  mb,\n  reversible,\n  segmentationSymbolUsed,\n  resetContextProbabilities\n) {\n  const x0 = subband.tbx0;\n  const y0 = subband.tby0;\n  const width = subband.tbx1 - subband.tbx0;\n  const codeblocks = subband.codeblocks;\n  const right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n  const bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n\n  for (let i = 0, ii = codeblocks.length; i < ii; ++i) {\n    const codeblock = codeblocks[i];\n    const blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n    const blockHeight = codeblock.tby1_ - codeblock.tby0_;\n    if (blockWidth === 0 || blockHeight === 0) {\n      continue;\n    }\n    if (codeblock.data === undefined) {\n      continue;\n    }\n\n    const bitModel = new BitModel(\n      blockWidth,\n      blockHeight,\n      codeblock.subbandType,\n      codeblock.zeroBitPlanes,\n      mb\n    );\n    let currentCodingpassType = 2; // first bit plane starts from cleanup\n\n    // collect data\n    const data = codeblock.data;\n    let totalLength = 0,\n      codingpasses = 0;\n    let j, jj, dataItem;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      totalLength += dataItem.end - dataItem.start;\n      codingpasses += dataItem.codingpasses;\n    }\n    const encodedData = new Uint8Array(totalLength);\n    let position = 0;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      const chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n      encodedData.set(chunk, position);\n      position += chunk.length;\n    }\n    // decoding the item\n    const decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n    bitModel.setDecoder(decoder);\n\n    for (j = 0; j < codingpasses; j++) {\n      switch (currentCodingpassType) {\n        case 0:\n          bitModel.runSignificancePropagationPass();\n          break;\n        case 1:\n          bitModel.runMagnitudeRefinementPass();\n          break;\n        case 2:\n          bitModel.runCleanupPass();\n          if (segmentationSymbolUsed) {\n            bitModel.checkSegmentationSymbol();\n          }\n          break;\n      }\n\n      if (resetContextProbabilities) {\n        bitModel.reset();\n      }\n\n      currentCodingpassType = (currentCodingpassType + 1) % 3;\n    }\n\n    let offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n    const sign = bitModel.coefficentsSign;\n    const magnitude = bitModel.coefficentsMagnitude;\n    const bitsDecoded = bitModel.bitsDecoded;\n    const magnitudeCorrection = reversible ? 0 : 0.5;\n    let k, n, nb;\n    position = 0;\n    // Do the interleaving of Section F.3.3 here, so we do not need\n    // to copy later. LL level is not interleaved, just copied.\n    const interleave = subband.type !== \"LL\";\n    for (j = 0; j < blockHeight; j++) {\n      const row = (offset / width) | 0; // row in the non-interleaved subband\n      const levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n      for (k = 0; k < blockWidth; k++) {\n        n = magnitude[position];\n        if (n !== 0) {\n          n = (n + magnitudeCorrection) * delta;\n          if (sign[position] !== 0) {\n            n = -n;\n          }\n          nb = bitsDecoded[position];\n          const pos = interleave ? levelOffset + (offset << 1) : offset;\n          coefficients[pos] = reversible && nb >= mb ? n : n * (1 << (mb - nb));\n        }\n        offset++;\n        position++;\n      }\n      offset += width - blockWidth;\n    }\n  }\n}\nfunction transformTile(context, tile, c) {\n  const component = tile.components[c];\n  const codingStyleParameters = component.codingStyleParameters;\n  const quantizationParameters = component.quantizationParameters;\n  const decompositionLevelsCount =\n    codingStyleParameters.decompositionLevelsCount;\n  const spqcds = quantizationParameters.SPqcds;\n  const scalarExpounded = quantizationParameters.scalarExpounded;\n  const guardBits = quantizationParameters.guardBits;\n  const segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  const resetContextProbabilities =\n    codingStyleParameters.resetContextProbabilities;\n  const precision = context.components[c].precision;\n\n  const reversible = codingStyleParameters.reversibleTransformation;\n  const transform = reversible\n    ? new ReversibleTransform()\n    : new IrreversibleTransform();\n\n  const subbandCoefficients = [];\n  let b = 0;\n  for (let i = 0; i <= decompositionLevelsCount; i++) {\n    const resolution = component.resolutions[i];\n\n    const width = resolution.trx1 - resolution.trx0;\n    const height = resolution.try1 - resolution.try0;\n    // Allocate space for the whole sublevel.\n    const coefficients = new Float32Array(width * height);\n\n    for (let j = 0, jj = resolution.subbands.length; j < jj; j++) {\n      let mu, epsilon;\n      if (!scalarExpounded) {\n        // formula E-5\n        mu = spqcds[0].mu;\n        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n      } else {\n        mu = spqcds[b].mu;\n        epsilon = spqcds[b].epsilon;\n        b++;\n      }\n\n      const subband = resolution.subbands[j];\n      const gainLog2 = SubbandsGainLog2[subband.type];\n\n      // calculate quantization coefficient (Section E.1.1.1)\n      const delta = reversible\n        ? 1\n        : 2 ** (precision + gainLog2 - epsilon) * (1 + mu / 2048);\n      const mb = guardBits + epsilon - 1;\n\n      // In the first resolution level, copyCoefficients will fill the\n      // whole array with coefficients. In the succeeding passes,\n      // copyCoefficients will consecutively fill in the values that belong\n      // to the interleaved positions of the HL, LH, and HH coefficients.\n      // The LL coefficients will then be interleaved in Transform.iterate().\n      copyCoefficients(\n        coefficients,\n        width,\n        height,\n        subband,\n        delta,\n        mb,\n        reversible,\n        segmentationSymbolUsed,\n        resetContextProbabilities\n      );\n    }\n    subbandCoefficients.push({\n      width,\n      height,\n      items: coefficients,\n    });\n  }\n\n  const result = transform.calculate(\n    subbandCoefficients,\n    component.tcx0,\n    component.tcy0\n  );\n  return {\n    left: component.tcx0,\n    top: component.tcy0,\n    width: result.width,\n    height: result.height,\n    items: result.items,\n  };\n}\nfunction transformComponents(context) {\n  const siz = context.SIZ;\n  const components = context.components;\n  const componentsCount = siz.Csiz;\n  const resultImages = [];\n  for (let i = 0, ii = context.tiles.length; i < ii; i++) {\n    const tile = context.tiles[i];\n    const transformedTiles = [];\n    for (let c = 0; c < componentsCount; c++) {\n      transformedTiles[c] = transformTile(context, tile, c);\n    }\n    const tile0 = transformedTiles[0];\n    const out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n    const result = {\n      left: tile0.left,\n      top: tile0.top,\n      width: tile0.width,\n      height: tile0.height,\n      items: out,\n    };\n\n    // Section G.2.2 Inverse multi component transform\n    let shift, offset;\n    let pos = 0,\n      j,\n      jj,\n      y0,\n      y1,\n      y2;\n    if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n      const fourComponents = componentsCount === 4;\n      const y0items = transformedTiles[0].items;\n      const y1items = transformedTiles[1].items;\n      const y2items = transformedTiles[2].items;\n      const y3items = fourComponents ? transformedTiles[3].items : null;\n\n      // HACK: The multiple component transform formulas below assume that\n      // all components have the same precision. With this in mind, we\n      // compute shift and offset only once.\n      shift = components[0].precision - 8;\n      offset = (128 << shift) + 0.5;\n\n      const component0 = tile.components[0];\n      const alpha01 = componentsCount - 3;\n      jj = y0items.length;\n      if (!component0.codingStyleParameters.reversibleTransformation) {\n        // inverse irreversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          out[pos++] = (y0 + 1.402 * y2) >> shift;\n          out[pos++] = (y0 - 0.34413 * y1 - 0.71414 * y2) >> shift;\n          out[pos++] = (y0 + 1.772 * y1) >> shift;\n        }\n      } else {\n        // inverse reversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          const g = y0 - ((y2 + y1) >> 2);\n\n          out[pos++] = (g + y2) >> shift;\n          out[pos++] = g >> shift;\n          out[pos++] = (g + y1) >> shift;\n        }\n      }\n      if (fourComponents) {\n        for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n          out[pos] = (y3items[j] + offset) >> shift;\n        }\n      }\n    } else {\n      // no multi-component transform\n      for (let c = 0; c < componentsCount; c++) {\n        const items = transformedTiles[c].items;\n        shift = components[c].precision - 8;\n        offset = (128 << shift) + 0.5;\n        for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n          out[pos] = (items[j] + offset) >> shift;\n          pos += componentsCount;\n        }\n      }\n    }\n    resultImages.push(result);\n  }\n  return resultImages;\n}\nfunction initializeTile(context, tileIndex) {\n  const siz = context.SIZ;\n  const componentsCount = siz.Csiz;\n  const tile = context.tiles[tileIndex];\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const qcdOrQcc =\n      context.currentTile.QCC[c] !== undefined\n        ? context.currentTile.QCC[c]\n        : context.currentTile.QCD;\n    component.quantizationParameters = qcdOrQcc;\n    const codOrCoc =\n      context.currentTile.COC[c] !== undefined\n        ? context.currentTile.COC[c]\n        : context.currentTile.COD;\n    component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n}\n\n// Section B.10.2 Tag trees\nclass TagTree {\n  constructor(width, height) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const level = {\n        width,\n        height,\n        items: [],\n      };\n      this.levels.push(level);\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j) {\n    let currentLevel = 0,\n      value = 0,\n      level;\n    while (currentLevel < this.levels.length) {\n      level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      if (level.items[index] !== undefined) {\n        value = level.items[index];\n        break;\n      }\n      level.index = index;\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n  }\n\n  incrementValue() {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n      this.value = value;\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\nclass InclusionTree {\n  constructor(width, height, defaultValue) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const items = new Uint8Array(width * height);\n      for (let j = 0, jj = items.length; j < jj; j++) {\n        items[j] = defaultValue;\n      }\n\n      const level = {\n        width,\n        height,\n        items,\n      };\n      this.levels.push(level);\n\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j, stopValue) {\n    let currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n      const level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      level.index = index;\n      const value = level.items[index];\n\n      if (value === 0xff) {\n        break;\n      }\n\n      if (value > stopValue) {\n        this.currentLevel = currentLevel;\n        // already know about this one, propagating the value to top levels\n        this.propagateValues();\n        return false;\n      }\n\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n  }\n\n  incrementValue(stopValue) {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n  }\n\n  propagateValues() {\n    let levelIndex = this.currentLevel;\n    let level = this.levels[levelIndex];\n    const currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n      level = this.levels[levelIndex];\n      level.items[level.index] = currentValue;\n    }\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    level.items[level.index] = 0xff;\n    currentLevel--;\n    if (currentLevel < 0) {\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\n// Section D. Coefficient bit modeling\nclass BitModel {\n  static UNIFORM_CONTEXT = 17;\n\n  static RUNLENGTH_CONTEXT = 18;\n\n  // Table D-1\n  // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),\n  // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)\n  static LLAndLHContextsLabel = new Uint8Array([\n    0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4,\n    7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,\n    8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8,\n  ]);\n\n  static HLContextLabel = new Uint8Array([\n    0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8,\n    8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,\n    4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8,\n  ]);\n\n  static HHContextLabel = new Uint8Array([\n    0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5,\n    5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8,\n    8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8,\n  ]);\n\n  constructor(width, height, subband, zeroBitPlanes, mb) {\n    this.width = width;\n    this.height = height;\n\n    let contextLabelTable;\n    if (subband === \"HH\") {\n      contextLabelTable = BitModel.HHContextLabel;\n    } else if (subband === \"HL\") {\n      contextLabelTable = BitModel.HLContextLabel;\n    } else {\n      contextLabelTable = BitModel.LLAndLHContextsLabel;\n    }\n    this.contextLabelTable = contextLabelTable;\n\n    const coefficientCount = width * height;\n\n    // coefficients outside the encoding region treated as insignificant\n    // add border state cells for significanceState\n    this.neighborsSignificance = new Uint8Array(coefficientCount);\n    this.coefficentsSign = new Uint8Array(coefficientCount);\n    let coefficentsMagnitude;\n    if (mb > 14) {\n      coefficentsMagnitude = new Uint32Array(coefficientCount);\n    } else if (mb > 6) {\n      coefficentsMagnitude = new Uint16Array(coefficientCount);\n    } else {\n      coefficentsMagnitude = new Uint8Array(coefficientCount);\n    }\n    this.coefficentsMagnitude = coefficentsMagnitude;\n    this.processingFlags = new Uint8Array(coefficientCount);\n\n    const bitsDecoded = new Uint8Array(coefficientCount);\n    if (zeroBitPlanes !== 0) {\n      for (let i = 0; i < coefficientCount; i++) {\n        bitsDecoded[i] = zeroBitPlanes;\n      }\n    }\n    this.bitsDecoded = bitsDecoded;\n\n    this.reset();\n  }\n\n  setDecoder(decoder) {\n    this.decoder = decoder;\n  }\n\n  reset() {\n    // We have 17 contexts that are accessed via context labels,\n    // plus the uniform and runlength context.\n    this.contexts = new Int8Array(19);\n\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry the index, lowest bit carries mps\n    this.contexts[0] = (4 << 1) | 0;\n    this.contexts[BitModel.UNIFORM_CONTEXT] = (46 << 1) | 0;\n    this.contexts[BitModel.RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n  }\n\n  setNeighborsSignificance(row, column, index) {\n    const neighborsSignificance = this.neighborsSignificance;\n    const width = this.width,\n      height = this.height;\n    const left = column > 0;\n    const right = column + 1 < width;\n    let i;\n\n    if (row > 0) {\n      i = index - width;\n      if (left) {\n        neighborsSignificance[i - 1] += 0x10;\n      }\n      if (right) {\n        neighborsSignificance[i + 1] += 0x10;\n      }\n      neighborsSignificance[i] += 0x04;\n    }\n\n    if (row + 1 < height) {\n      i = index + width;\n      if (left) {\n        neighborsSignificance[i - 1] += 0x10;\n      }\n      if (right) {\n        neighborsSignificance[i + 1] += 0x10;\n      }\n      neighborsSignificance[i] += 0x04;\n    }\n\n    if (left) {\n      neighborsSignificance[index - 1] += 0x01;\n    }\n    if (right) {\n      neighborsSignificance[index + 1] += 0x01;\n    }\n    neighborsSignificance[index] |= 0x80;\n  }\n\n  runSignificancePropagationPass() {\n    const decoder = this.decoder;\n    const width = this.width,\n      height = this.height;\n    const coefficentsMagnitude = this.coefficentsMagnitude;\n    const coefficentsSign = this.coefficentsSign;\n    const neighborsSignificance = this.neighborsSignificance;\n    const processingFlags = this.processingFlags;\n    const contexts = this.contexts;\n    const labels = this.contextLabelTable;\n    const bitsDecoded = this.bitsDecoded;\n    const processedInverseMask = ~1;\n    const processedMask = 1;\n    const firstMagnitudeBitMask = 2;\n\n    for (let i0 = 0; i0 < height; i0 += 4) {\n      for (let j = 0; j < width; j++) {\n        let index = i0 * width + j;\n        for (let i1 = 0; i1 < 4; i1++, index += width) {\n          const i = i0 + i1;\n          if (i >= height) {\n            break;\n          }\n          // clear processed flag first\n          processingFlags[index] &= processedInverseMask;\n\n          if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n            continue;\n          }\n\n          const contextLabel = labels[neighborsSignificance[index]];\n          const decision = decoder.readBit(contexts, contextLabel);\n          if (decision) {\n            const sign = this.decodeSignBit(i, j, index);\n            coefficentsSign[index] = sign;\n            coefficentsMagnitude[index] = 1;\n            this.setNeighborsSignificance(i, j, index);\n            processingFlags[index] |= firstMagnitudeBitMask;\n          }\n          bitsDecoded[index]++;\n          processingFlags[index] |= processedMask;\n        }\n      }\n    }\n  }\n\n  decodeSignBit(row, column, index) {\n    const width = this.width,\n      height = this.height;\n    const coefficentsMagnitude = this.coefficentsMagnitude;\n    const coefficentsSign = this.coefficentsSign;\n    let contribution, sign0, sign1, significance1;\n    let contextLabel, decoded;\n\n    // calculate horizontal contribution\n    significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n    if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n      sign1 = coefficentsSign[index + 1];\n      if (significance1) {\n        sign0 = coefficentsSign[index - 1];\n        contribution = 1 - sign1 - sign0;\n      } else {\n        contribution = 1 - sign1 - sign1;\n      }\n    } else if (significance1) {\n      sign0 = coefficentsSign[index - 1];\n      contribution = 1 - sign0 - sign0;\n    } else {\n      contribution = 0;\n    }\n    const horizontalContribution = 3 * contribution;\n\n    // calculate vertical contribution and combine with the horizontal\n    significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n    if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n      sign1 = coefficentsSign[index + width];\n      if (significance1) {\n        sign0 = coefficentsSign[index - width];\n        contribution = 1 - sign1 - sign0 + horizontalContribution;\n      } else {\n        contribution = 1 - sign1 - sign1 + horizontalContribution;\n      }\n    } else if (significance1) {\n      sign0 = coefficentsSign[index - width];\n      contribution = 1 - sign0 - sign0 + horizontalContribution;\n    } else {\n      contribution = horizontalContribution;\n    }\n\n    if (contribution >= 0) {\n      contextLabel = 9 + contribution;\n      decoded = this.decoder.readBit(this.contexts, contextLabel);\n    } else {\n      contextLabel = 9 - contribution;\n      decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n    }\n    return decoded;\n  }\n\n  runMagnitudeRefinementPass() {\n    const decoder = this.decoder;\n    const width = this.width,\n      height = this.height;\n    const coefficentsMagnitude = this.coefficentsMagnitude;\n    const neighborsSignificance = this.neighborsSignificance;\n    const contexts = this.contexts;\n    const bitsDecoded = this.bitsDecoded;\n    const processingFlags = this.processingFlags;\n    const processedMask = 1;\n    const firstMagnitudeBitMask = 2;\n    const length = width * height;\n    const width4 = width * 4;\n\n    for (let index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n      indexNext = Math.min(length, index0 + width4);\n      for (let j = 0; j < width; j++) {\n        for (let index = index0 + j; index < indexNext; index += width) {\n          // significant but not those that have just become\n          if (\n            !coefficentsMagnitude[index] ||\n            (processingFlags[index] & processedMask) !== 0\n          ) {\n            continue;\n          }\n\n          let contextLabel = 16;\n          if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n            processingFlags[index] ^= firstMagnitudeBitMask;\n            // first refinement\n            const significance = neighborsSignificance[index] & 127;\n            contextLabel = significance === 0 ? 15 : 14;\n          }\n\n          const bit = decoder.readBit(contexts, contextLabel);\n          coefficentsMagnitude[index] =\n            (coefficentsMagnitude[index] << 1) | bit;\n          bitsDecoded[index]++;\n          processingFlags[index] |= processedMask;\n        }\n      }\n    }\n  }\n\n  runCleanupPass() {\n    const decoder = this.decoder;\n    const width = this.width,\n      height = this.height;\n    const neighborsSignificance = this.neighborsSignificance;\n    const coefficentsMagnitude = this.coefficentsMagnitude;\n    const coefficentsSign = this.coefficentsSign;\n    const contexts = this.contexts;\n    const labels = this.contextLabelTable;\n    const bitsDecoded = this.bitsDecoded;\n    const processingFlags = this.processingFlags;\n    const processedMask = 1;\n    const firstMagnitudeBitMask = 2;\n    const oneRowDown = width;\n    const twoRowsDown = width * 2;\n    const threeRowsDown = width * 3;\n    let iNext;\n    for (let i0 = 0; i0 < height; i0 = iNext) {\n      iNext = Math.min(i0 + 4, height);\n      const indexBase = i0 * width;\n      const checkAllEmpty = i0 + 3 < height;\n      for (let j = 0; j < width; j++) {\n        const index0 = indexBase + j;\n        // using the property: labels[neighborsSignificance[index]] === 0\n        // when neighborsSignificance[index] === 0\n        const allEmpty =\n          checkAllEmpty &&\n          processingFlags[index0] === 0 &&\n          processingFlags[index0 + oneRowDown] === 0 &&\n          processingFlags[index0 + twoRowsDown] === 0 &&\n          processingFlags[index0 + threeRowsDown] === 0 &&\n          neighborsSignificance[index0] === 0 &&\n          neighborsSignificance[index0 + oneRowDown] === 0 &&\n          neighborsSignificance[index0 + twoRowsDown] === 0 &&\n          neighborsSignificance[index0 + threeRowsDown] === 0;\n        let i1 = 0,\n          index = index0;\n        let i = i0,\n          sign;\n        if (allEmpty) {\n          const hasSignificantCoefficent = decoder.readBit(\n            contexts,\n            BitModel.RUNLENGTH_CONTEXT\n          );\n          if (!hasSignificantCoefficent) {\n            bitsDecoded[index0]++;\n            bitsDecoded[index0 + oneRowDown]++;\n            bitsDecoded[index0 + twoRowsDown]++;\n            bitsDecoded[index0 + threeRowsDown]++;\n            continue; // next column\n          }\n          i1 =\n            (decoder.readBit(contexts, BitModel.UNIFORM_CONTEXT) << 1) |\n            decoder.readBit(contexts, BitModel.UNIFORM_CONTEXT);\n          if (i1 !== 0) {\n            i = i0 + i1;\n            index += i1 * width;\n          }\n\n          sign = this.decodeSignBit(i, j, index);\n          coefficentsSign[index] = sign;\n          coefficentsMagnitude[index] = 1;\n          this.setNeighborsSignificance(i, j, index);\n          processingFlags[index] |= firstMagnitudeBitMask;\n\n          index = index0;\n          for (let i2 = i0; i2 <= i; i2++, index += width) {\n            bitsDecoded[index]++;\n          }\n\n          i1++;\n        }\n        for (i = i0 + i1; i < iNext; i++, index += width) {\n          if (\n            coefficentsMagnitude[index] ||\n            (processingFlags[index] & processedMask) !== 0\n          ) {\n            continue;\n          }\n\n          const contextLabel = labels[neighborsSignificance[index]];\n          const decision = decoder.readBit(contexts, contextLabel);\n          if (decision === 1) {\n            sign = this.decodeSignBit(i, j, index);\n            coefficentsSign[index] = sign;\n            coefficentsMagnitude[index] = 1;\n            this.setNeighborsSignificance(i, j, index);\n            processingFlags[index] |= firstMagnitudeBitMask;\n          }\n          bitsDecoded[index]++;\n        }\n      }\n    }\n  }\n\n  checkSegmentationSymbol() {\n    const decoder = this.decoder;\n    const contexts = this.contexts;\n    const symbol =\n      (decoder.readBit(contexts, BitModel.UNIFORM_CONTEXT) << 3) |\n      (decoder.readBit(contexts, BitModel.UNIFORM_CONTEXT) << 2) |\n      (decoder.readBit(contexts, BitModel.UNIFORM_CONTEXT) << 1) |\n      decoder.readBit(contexts, BitModel.UNIFORM_CONTEXT);\n    if (symbol !== 0xa) {\n      throw new JpxError(\"Invalid segmentation symbol\");\n    }\n  }\n}\n\n// Section F, Discrete wavelet transformation\nclass Transform {\n  constructor() {\n    if (this.constructor === Transform) {\n      unreachable(\"Cannot initialize Transform.\");\n    }\n  }\n\n  calculate(subbands, u0, v0) {\n    let ll = subbands[0];\n    for (let i = 1, ii = subbands.length; i < ii; i++) {\n      ll = this.iterate(ll, subbands[i], u0, v0);\n    }\n    return ll;\n  }\n\n  extend(buffer, offset, size) {\n    // Section F.3.7 extending... using max extension of 4\n    let i1 = offset - 1,\n      j1 = offset + 1;\n    let i2 = offset + size - 2,\n      j2 = offset + size;\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1] = buffer[j1];\n    buffer[j2] = buffer[i2];\n  }\n\n  filter(x, offset, length) {\n    unreachable(\"Abstract method `filter` called\");\n  }\n\n  iterate(ll, hl_lh_hh, u0, v0) {\n    const llWidth = ll.width,\n      llHeight = ll.height;\n    let llItems = ll.items;\n    const width = hl_lh_hh.width;\n    const height = hl_lh_hh.height;\n    const items = hl_lh_hh.items;\n    let i, j, k, l, u, v;\n\n    // Interleave LL according to Section F.3.3\n    for (k = 0, i = 0; i < llHeight; i++) {\n      l = i * 2 * width;\n      for (j = 0; j < llWidth; j++, k++, l += 2) {\n        items[l] = llItems[k];\n      }\n    }\n    // The LL band is not needed anymore.\n    llItems = ll.items = null;\n\n    const bufferPadding = 4;\n    const rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n    // Section F.3.4 HOR_SR\n    if (width === 1) {\n      // if width = 1, when u0 even keep items as is, when odd divide by 2\n      if ((u0 & 1) !== 0) {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          items[k] *= 0.5;\n        }\n      }\n    } else {\n      for (v = 0, k = 0; v < height; v++, k += width) {\n        rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\n        this.extend(rowBuffer, bufferPadding, width);\n        this.filter(rowBuffer, bufferPadding, width);\n\n        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n      }\n    }\n\n    // Accesses to the items array can take long, because it may not fit into\n    // CPU cache and has to be fetched from main memory. Since subsequent\n    // accesses to the items array are not local when reading columns, we\n    // have a cache miss every time. To reduce cache misses, get up to\n    // 'numBuffers' items at a time and store them into the individual\n    // buffers. The colBuffers should be small enough to fit into CPU cache.\n    let numBuffers = 16;\n    const colBuffers = [];\n    for (i = 0; i < numBuffers; i++) {\n      colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n    }\n    let b,\n      currentBuffer = 0;\n    ll = bufferPadding + height;\n\n    // Section F.3.5 VER_SR\n    if (height === 1) {\n      // if height = 1, when v0 even keep items as is, when odd divide by 2\n      if ((v0 & 1) !== 0) {\n        for (u = 0; u < width; u++) {\n          items[u] *= 0.5;\n        }\n      }\n    } else {\n      for (u = 0; u < width; u++) {\n        // if we ran out of buffers, copy several image columns at once\n        if (currentBuffer === 0) {\n          numBuffers = Math.min(width - u, numBuffers);\n          for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              colBuffers[b][l] = items[k + b];\n            }\n          }\n          currentBuffer = numBuffers;\n        }\n\n        currentBuffer--;\n        const buffer = colBuffers[currentBuffer];\n        this.extend(buffer, bufferPadding, height);\n        this.filter(buffer, bufferPadding, height);\n\n        // If this is last buffer in this group of buffers, flush all buffers.\n        if (currentBuffer === 0) {\n          k = u - numBuffers + 1;\n          for (l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              items[k + b] = colBuffers[b][l];\n            }\n          }\n        }\n      }\n    }\n\n    return { width, height, items };\n  }\n}\n\n// Section 3.8.2 Irreversible 9-7 filter\nclass IrreversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n, current, next;\n\n    const alpha = -1.586134342059924;\n    const beta = -0.052980118572961;\n    const gamma = 0.882911075530934;\n    const delta = 0.443506852043971;\n    const K = 1.230174104914001;\n    const K_ = 1 / K;\n\n    // step 1 is combined with step 3\n\n    // step 2\n    j = offset - 3;\n    for (n = len + 4; n--; j += 2) {\n      x[j] *= K_;\n    }\n\n    // step 1 & 3\n    j = offset - 2;\n    current = delta * x[j - 1];\n    for (n = len + 3; n--; j += 2) {\n      next = delta * x[j + 1];\n      x[j] = K * x[j] - current - next;\n      if (n--) {\n        j += 2;\n        current = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n      } else {\n        break;\n      }\n    }\n\n    // step 4\n    j = offset - 1;\n    current = gamma * x[j - 1];\n    for (n = len + 2; n--; j += 2) {\n      next = gamma * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = gamma * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 5\n    j = offset;\n    current = beta * x[j - 1];\n    for (n = len + 1; n--; j += 2) {\n      next = beta * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = beta * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 6\n    if (len !== 0) {\n      j = offset + 1;\n      current = alpha * x[j - 1];\n      for (n = len; n--; j += 2) {\n        next = alpha * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = alpha * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n}\n\n// Section 3.8.1 Reversible 5-3 filter\nclass ReversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n;\n\n    for (j = offset, n = len + 1; n--; j += 2) {\n      x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n    }\n\n    for (j = offset + 1, n = len; n--; j += 2) {\n      x[j] += (x[j - 1] + x[j + 1]) >> 1;\n    }\n  }\n}\n\nexport { JpxImage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getVerbosityLevel,\n  setVerbosityLevel,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { Jbig2Image } from \"./core/jbig2.js\";\nimport { JpegImage } from \"./core/jpg.js\";\nimport { JpxImage } from \"./core/jpx.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nexport {\n  getVerbosityLevel,\n  Jbig2Image,\n  JpegImage,\n  JpxImage,\n  setVerbosityLevel,\n  VerbosityLevel,\n};\n"],"names":["isNodeJS","process","versions","nw","electron","type","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","MAX_IMAGE_SIZE_TO_CACHE","LINE_FACTOR","LINE_DESCENT_FACTOR","BASELINE_FACTOR","RenderingIntentFlag","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","AnnotationEditorPrefix","AnnotationEditorType","NONE","FREETEXT","HIGHLIGHT","STAMP","INK","AnnotationEditorParamsType","RESIZE","CREATE","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","HIGHLIGHT_COLOR","HIGHLIGHT_DEFAULT_COLOR","HIGHLIGHT_THICKNESS","HIGHLIGHT_FREE","HIGHLIGHT_SHOW_ALL","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","UNDERLINE","SQUIGGLY","STRIKEOUT","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","_isValidProtocol","url","protocol","createValidAbsoluteUrl","baseUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","absoluteUrl","URL","shadow","obj","prop","value","nonSerializable","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","FeatureTest","isOffscreenCanvasSupported","OffscreenCanvas","platform","navigator","isMac","includes","isCSSRoundSupported","globalThis","CSS","supports","hexNumbers","Array","from","n","toString","padStart","Util","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","getExtremumOnCurve","#getExtremumOnCurve","x0","x1","x2","x3","y0","y1","y2","y3","t","mt","tt","ttt","x","y","getExtremum","#getExtremum","abs","delta","sqrtDelta","a2","bezierBoundingBox","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decoded","decode","replaceAll","ex","ii","charCode","charAt","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","NormalizeRegex","NormalizationMap","normalizeUnicode","Map","_","normalize","get","getUuid","crypto","randomUUID","buf","getRandomValues","floor","random","AnnotationPrefix","CIRCULAR_REF","Symbol","EOF","CmdCache","NameCache","RefCache","clearPrimitiveCaches","Name","Cmd","cmd","nonSerializableClosure","Dict","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","size","key1","key2","key3","Ref","fetch","getAsync","fetchAsync","getArray","isArray","getRaw","getKeys","getRawValues","values","set","has","forEach","callback","empty","emptyDict","merge","dictArray","mergeSubDicts","mergedDict","properties","dict","entries","property","subDict","clear","clone","num","gen","fromString","ref","exec","parseInt","RefSet","parent","_set","Set","put","add","remove","delete","iterator","RefSetCache","putAlias","aliasRef","isName","v","isCmd","isDict","isRefsEqual","v1","v2","BaseStream","isEmpty","isDataLoaded","getByte","getBytes","peekByte","peekedByte","pos","peekBytes","getUint16","b0","b1","getInt32","b2","b3","getByteRange","begin","end","getString","skip","reset","moveStart","makeSubStream","start","getBaseStreams","PDF_VERSION_REGEXP","getLookupTableFactory","initializer","lookup","MissingDataException","ParserEOFException","XRefEntryException","XRefParseException","arrayBuffersToBytes","arr","dataLength","byteLength","data","item","getInheritableProperty","stopWhenFound","visited","ROMAN_NUMBER_MAP","toRomanNumerals","number","lowerCase","romanBuf","romanStr","toLowerCase","log2","ceil","readInt8","offset","readUint16","readUint32","isWhiteSpace","ch","parseXFAPath","path","positionPattern","split","component","escapePDFName","char","substring","escapeString","_collectJS","entry","list","parents","element","js","collectActions","eventType","actions","additionalActionsDicts","additionalActions","action","actionDict","Action","XMLEntities","codePointIter","codePointAt","encodeToXmlString","entity","toUpperCase","validateFontName","fontFamily","mustWarn","re","RegExp","test","ident","validateCSSFont","cssFontInfo","DEFAULT_CSS_FONT_OBLIQUE","DEFAULT_CSS_FONT_WEIGHT","CSS_FONT_WEIGHT_VALUES","fontWeight","italicAngle","weight","angle","parseFloat","isNaN","recoverJsURL","URL_OPEN_METHODS","regex","jsUrl","newWindow","numberToString","roundedValue","round","toFixed","getNewAnnotationsMap","annotationStorage","newAnnotationsByPage","annotations","pageIndex","isAscii","stringToUTF16HexString","stringToUTF16String","bigEndian","getRotationMatrix","rotation","width","height","getSizeInBytes","QeTable","qe","nmps","nlps","switchFlag","ArithmeticDecoder","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","CCITTFaxDecoder","source","next","eof","eoline","EndOfLine","byteAlign","EncodedByteAlign","columns","Columns","rows","Rows","eoblock","EndOfBlock","black","BlackIs1","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","readNextChar","refPos","blackPixels","bits","err","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","table","limit","limitValue","result","Jbig2Error","ContextCache","getContexts","id","Int8Array","DecodingContext","contextCache","cache","MAX_INT_32","MIN_INT_32","decodeInteger","procedure","prev","readBits","bit","sign","signedValue","decodeIAID","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","decodingContext","bitmap","contextLabel","j","pixel","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","input","Reader","decodeMMRBitmap","useskip","template","concat","sort","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","k","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","Uint16Array","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","i0","j0","shift","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","Int32Array","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","bitmapSize","tableBitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","position","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","increment","offsetT","offsetS","s2","t2","symbolRow","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patterns","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","header","segments","segment","randomAccess","processSegment","visitor","args","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","chunks","SimpleSegmentVisitor","parseJbig2","numberOfPages","currentPageInfo","bitPacked","imgData","Uint8ClampedArray","q","mask","onPageInformation","rowSize","drawBitmap","regionInfo","mask0","offset0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","arguments","onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSegment","referredSymbols","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeTablesSegment","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","buildTree","node","decodeNode","reader","htOffset","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","standardTablesCache","currentByte","numBits","getCustomHuffmanTable","index","currentIndex","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","params","lookForEOFLimit","Jbig2Image","parseChunks","parse","convertToRGBA","kind","convertBlackAndWhiteToRGBA","convertRGBToRGBA","src","srcPos","dest","nonBlackColor","inverseDecode","zeroMapping","oneMapping","widthInSource","widthRemainder","srcLength","destPos","elem","len32","src32","s1","s3","jj","grayToRGBA","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","pop","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","maybeScanLines","blockRow","precision","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","blockOffset","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","s","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","e","successiveACState","successiveACNextValue","decodeACSuccessive","offsetZ","decodeMcu","mcu","mcuRow","mcuCol","blockCol","h","decodeBlock","componentsLength","decodeFn","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","partialMsg","marker","quantizeAndInverse","blockBufferOffset","qt","quantizationTable","v0","v3","v4","v5","v6","v7","p0","p5","p6","p7","buildComponentData","computationBuffer","Int16Array","currentPos","startPos","maxPos","newPos","currentMarker","newMarker","JpegImage","decodeTransform","colorTransform","_decodeTransform","_colorTransform","dnlScanLines","readDataBlock","endOffset","array","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","l","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentsCount","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","output","scaleX","scaleY","numComponents","_getLinearizedBlockData","isSourcePDF","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","lastComponentScaleX","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYccToRgba","out","_convertYcckToRgb","_convertYcckToRgba","_convertYcckToCmyk","_convertCmykToRgb","_convertCmykToRgba","getData","forceRGBA","forceRGB","len","rgbaData","grayColor","JpxError","SubbandsGainLog2","LL","LH","HL","HH","JpxImage","failOnCorruptedImage","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","stream","newByte","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","bitsPerComponent","context","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","mainHeader","siz","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","calculateComponentDimensions","SIZ","calculateTileGrids","QCC","COC","qcd","noQuantization","guardBits","spqcd","epsilon","mu","SPqcds","QCD","currentTile","qcc","cqcc","cod","scod","entropyCoderWithCustomPrecincts","sopMarkerUsed","ephMarkerUsed","progressionOrder","layersCount","multipleComponentTransform","decompositionLevelsCount","xcb","ycb","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","segmentationSymbolUsed","reversibleTransformation","precinctsSizes","precinctsSize","PPx","PPy","unsupported","COD","partIndex","partsCount","initializeTile","buildPackets","parseTilePackets","tiles","transformComponents","numXtiles","numYtiles","tx0","ty0","tx1","ty1","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","xcb_","ycb_","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","codeblock","precinctNumber","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","codingStyleDefaultParameters","maxDecompositionLevelsCount","nextPacket","JpxImage_nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","widthCurrentResolution","heightCurrentResolution","blocksDimensions","bscale","resolutionSubbands","packetsIterator","bufferSize","skipNextBit","count","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","zeroBitPlanesTree","included","inclusionTree","InclusionTree","TagTree","nextLevel","incrementValue","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","mb","reversible","right","bottom","blockWidth","blockHeight","bitModel","BitModel","currentCodingpassType","totalLength","dataItem","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","nb","interleave","levelOffset","transformTile","quantizationParameters","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","gainLog2","items","calculate","left","top","resultImages","transformedTiles","tile0","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","qcdOrQcc","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","contribution","sign0","sign1","significance1","horizontalContribution","width4","index0","indexNext","significance","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","Transform","u0","ll","iterate","extend","j1","j2","filter","hl_lh_hh","llWidth","llHeight","llItems","u","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","gamma","K_","pdfjsVersion","pdfjsBuild"],"sourceRoot":""}